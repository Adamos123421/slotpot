{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adams\\\\OneDrive\\\\Desktop\\\\Work\\\\slotpot\\\\src\\\\components\\\\SimpleCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay } from 'swiper/modules';\nimport 'swiper/css';\nimport './SimpleCarousel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleCarousel = ({\n  players,\n  winner,\n  isSpinning,\n  onWinnerLand\n}) => {\n  _s();\n  const swiperRef = useRef(null);\n  const [isLanding, setIsLanding] = useState(false);\n\n  // Handle swiper initialization\n  const handleSwiperInit = swiper => {\n    swiperRef.current = swiper;\n  };\n\n  // Utility function to safely restart autoplay with new delay\n  const restartAutoplayWithDelay = delay => {\n    if (swiperRef.current && swiperRef.current.autoplay) {\n      swiperRef.current.autoplay.stop();\n      swiperRef.current.params.autoplay.delay = delay;\n      setTimeout(() => {\n        if (swiperRef.current && swiperRef.current.autoplay) {\n          swiperRef.current.autoplay.start();\n        }\n      }, 50);\n    }\n  };\n\n  // Casino-style winner landing animation\n  useEffect(() => {\n    if (winner && swiperRef.current && players) {\n      const winnerIndex = players.findIndex(p => p && (p.address === winner.address || p.username === winner.username || p.address === winner.winner || p.address === winner.fullAddress || p.username === winner.displayName));\n      if (winnerIndex !== -1) {\n        console.log('🎰 Winner found at index:', winnerIndex, 'for winner:', winner);\n\n        // Create casino-style slowdown animation\n        const createCasinoSlowdown = () => {\n          // Calculate target slide index (account for 6 sets, aim for middle set)\n          const totalSlides = players.length * 6;\n          const middleSetStart = players.length * 2; // Start of 3rd set (middle)\n          const targetSlideIndex = middleSetStart + winnerIndex;\n          console.log('🎯 Targeting slide:', targetSlideIndex, 'out of', totalSlides);\n\n          // Phase 1: Continue fast spinning for 1 second\n          setTimeout(() => {\n            // Phase 2: Gradual slowdown (like a real casino)\n            if (swiperRef.current && swiperRef.current.autoplay) {\n              // Slow down gradually\n              swiperRef.current.autoplay.stop();\n              let currentDelay = 50;\n              const slowdownSteps = [100, 200, 400, 600, 800, 1000];\n              let stepIndex = 0;\n              const gradualSlowdown = () => {\n                if (stepIndex < slowdownSteps.length && swiperRef.current) {\n                  currentDelay = slowdownSteps[stepIndex];\n\n                  // Restart autoplay with slower speed using utility function\n                  restartAutoplayWithDelay(currentDelay);\n                  stepIndex++;\n\n                  // Use combination of setTimeout and requestAnimationFrame for reliability\n                  const nextStepDelay = currentDelay * 3;\n                  const startTime = performance.now();\n                  const waitForNextStep = () => {\n                    if (performance.now() - startTime >= nextStepDelay) {\n                      gradualSlowdown();\n                    } else {\n                      requestAnimationFrame(waitForNextStep);\n                    }\n                  };\n                  requestAnimationFrame(waitForNextStep);\n                } else {\n                  // Final phase: Stop and land on winner with casino-style precision\n                  if (swiperRef.current) {\n                    swiperRef.current.autoplay.stop();\n\n                    // Add some suspense before final landing (like real casinos)\n                    setTimeout(() => {\n                      setIsLanding(true); // Apply casino landing styles\n\n                      if (swiperRef.current && typeof swiperRef.current.slideTo === 'function') {\n                        // Get current active index for smoother transition\n                        const currentIndex = swiperRef.current.activeIndex || 0;\n\n                        // Calculate the shortest path to winner (considering loop)\n                        let finalTargetIndex = targetSlideIndex;\n                        const totalSlides = players.length * 6;\n\n                        // Ensure we land on the correct winner in the visible range\n                        if (Math.abs(finalTargetIndex - currentIndex) > totalSlides / 2) {\n                          // Take the shorter route\n                          if (finalTargetIndex > currentIndex) {\n                            finalTargetIndex = finalTargetIndex - totalSlides;\n                          } else {\n                            finalTargetIndex = finalTargetIndex + totalSlides;\n                          }\n                        }\n\n                        // Smooth slide to winner with easing\n                        swiperRef.current.slideTo(finalTargetIndex, 2000, true);\n                        console.log('🏆 Final landing: current:', currentIndex, 'target:', finalTargetIndex);\n                      }\n                      setTimeout(() => {\n                        setIsLanding(false); // Remove landing styles\n                        onWinnerLand === null || onWinnerLand === void 0 ? void 0 : onWinnerLand();\n                      }, 2000);\n                    }, 500); // Half-second suspense\n                  }\n                }\n              };\n              gradualSlowdown();\n            }\n          }, 1000);\n        };\n        createCasinoSlowdown();\n      } else {\n        console.warn('⚠️ Winner not found in players array:', winner);\n      }\n    }\n  }, [winner, players, onWinnerLand]);\n\n  // Safety mechanism: restart normal animation if spinning stops without winner\n  useEffect(() => {\n    if (!isSpinning && !winner && swiperRef.current) {\n      // Ensure autoplay continues with normal speed\n      restartAutoplayWithDelay(300);\n    }\n  }, [isSpinning, winner]);\n\n  // Handle browser tab visibility changes to ensure animation continues\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (!document.hidden && swiperRef.current) {\n        console.log('🔄 Tab became visible - ensuring animation continues');\n\n        // Force restart autoplay when tab becomes visible\n        setTimeout(() => {\n          if (swiperRef.current && swiperRef.current.autoplay) {\n            const currentDelay = isSpinning ? 50 : 300;\n            restartAutoplayWithDelay(currentDelay);\n          }\n        }, 100);\n      }\n    };\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => document.removeEventListener('visibilitychange', handleVisibilityChange);\n  }, [isSpinning]);\n\n  // Force animation to continue on window focus\n  useEffect(() => {\n    const handleWindowFocus = () => {\n      if (swiperRef.current && swiperRef.current.autoplay) {\n        console.log('🔄 Window focused - restarting animation');\n        const currentDelay = isSpinning ? 50 : 300;\n        restartAutoplayWithDelay(currentDelay);\n      }\n    };\n    window.addEventListener('focus', handleWindowFocus);\n    return () => window.removeEventListener('focus', handleWindowFocus);\n  }, [isSpinning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simple-carousel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-arrow\",\n      children: \"\\u2B07\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n      ref: swiperRef,\n      modules: [Autoplay],\n      spaceBetween: 10,\n      slidesPerView: \"auto\",\n      centeredSlides: true,\n      loop: true,\n      loopedSlides: players.length * 6 // More slides for smoother infinite scroll\n      ,\n      autoplay: {\n        delay: isSpinning ? 50 : 300,\n        // Smoother spinning animation (50ms vs 10ms)\n        disableOnInteraction: false,\n        pauseOnMouseEnter: false,\n        waitForTransition: false,\n        // Allow smooth transitions during speed changes\n        stopOnLastSlide: false,\n        reverseDirection: false,\n        pauseOnTabHidden: false,\n        // Keep animation running when tab is hidden\n        pauseOnVisibilityChange: false // Don't pause when tab visibility changes\n      },\n      speed: isSpinning ? 100 : 400 // Smoother transition speeds\n      ,\n      className: `player-swiper ${isSpinning ? 'spinning' : ''} ${isLanding ? 'landing' : ''}`,\n      allowTouchMove: false,\n      onSwiper: handleSwiperInit,\n      children: [...Array(6)].map((_, setIndex) => players.map((player, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        className: \"player-slide\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `player-card ${winner && player && (player.address === winner.address || player.username === winner.username || player.address === winner.winner || player.address === winner.fullAddress || player.username === winner.displayName) ? 'winner' : player ? 'active' : 'waiting'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-avatar\",\n            children: player ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-avatar-content\",\n              children: player.username ? player.username[0].toUpperCase() : '?'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"waiting-icon\",\n              children: \"\\u2753\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-name\",\n              children: player ? player.username || player.displayName || 'Player' : 'Waiting'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-bet\",\n              children: player ? `${(player.amount || 0).toFixed(2)} TON` : '0.00 TON'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this), winner && player && (player.address === winner.address || player.username === winner.username || player.address === winner.winner || player.address === winner.fullAddress || player.username === winner.displayName) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"winner-prize\",\n              children: [\"Won \", parseFloat(winner.prize || 0).toFixed(3), \" TON\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this), winner && player && (player.address === winner.address || player.username === winner.username || player.address === winner.winner || player.address === winner.fullAddress || player.username === winner.displayName) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"winner-crown\",\n            children: \"\\uD83D\\uDC51\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this)\n      }, `${setIndex}-${(player === null || player === void 0 ? void 0 : player.address) || `waiting-${index}`}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleCarousel, \"YL7nAw00JEN0NpQeDx4ARHV+4X0=\");\n_c = SimpleCarousel;\nexport default SimpleCarousel;\nvar _c;\n$RefreshReg$(_c, \"SimpleCarousel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Swiper","SwiperSlide","Autoplay","jsxDEV","_jsxDEV","SimpleCarousel","players","winner","isSpinning","onWinnerLand","_s","swiperRef","isLanding","setIsLanding","handleSwiperInit","swiper","current","restartAutoplayWithDelay","delay","autoplay","stop","params","setTimeout","start","winnerIndex","findIndex","p","address","username","fullAddress","displayName","console","log","createCasinoSlowdown","totalSlides","length","middleSetStart","targetSlideIndex","currentDelay","slowdownSteps","stepIndex","gradualSlowdown","nextStepDelay","startTime","performance","now","waitForNextStep","requestAnimationFrame","slideTo","currentIndex","activeIndex","finalTargetIndex","Math","abs","warn","handleVisibilityChange","document","hidden","addEventListener","removeEventListener","handleWindowFocus","window","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","modules","spaceBetween","slidesPerView","centeredSlides","loop","loopedSlides","disableOnInteraction","pauseOnMouseEnter","waitForTransition","stopOnLastSlide","reverseDirection","pauseOnTabHidden","pauseOnVisibilityChange","speed","allowTouchMove","onSwiper","Array","map","_","setIndex","player","index","toUpperCase","amount","toFixed","parseFloat","prize","_c","$RefreshReg$"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/src/components/SimpleCarousel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay } from 'swiper/modules';\nimport 'swiper/css';\nimport './SimpleCarousel.css';\n\nconst SimpleCarousel = ({ \n  players, \n  winner, \n  isSpinning, \n  onWinnerLand \n}) => {\n  const swiperRef = useRef(null);\n  const [isLanding, setIsLanding] = useState(false);\n\n  // Handle swiper initialization\n  const handleSwiperInit = (swiper) => {\n    swiperRef.current = swiper;\n  };\n\n  // Utility function to safely restart autoplay with new delay\n  const restartAutoplayWithDelay = (delay) => {\n    if (swiperRef.current && swiperRef.current.autoplay) {\n      swiperRef.current.autoplay.stop();\n      swiperRef.current.params.autoplay.delay = delay;\n      setTimeout(() => {\n        if (swiperRef.current && swiperRef.current.autoplay) {\n          swiperRef.current.autoplay.start();\n        }\n      }, 50);\n    }\n  };\n\n  // Casino-style winner landing animation\n  useEffect(() => {\n    if (winner && swiperRef.current && players) {\n      const winnerIndex = players.findIndex(p => \n        p && (\n          p.address === winner.address || \n          p.username === winner.username ||\n          p.address === winner.winner ||\n          p.address === winner.fullAddress ||\n          p.username === winner.displayName\n        )\n      );\n      \n      if (winnerIndex !== -1) {\n        console.log('🎰 Winner found at index:', winnerIndex, 'for winner:', winner);\n        \n        // Create casino-style slowdown animation\n        const createCasinoSlowdown = () => {\n          // Calculate target slide index (account for 6 sets, aim for middle set)\n          const totalSlides = players.length * 6;\n          const middleSetStart = players.length * 2; // Start of 3rd set (middle)\n          const targetSlideIndex = middleSetStart + winnerIndex;\n          \n          console.log('🎯 Targeting slide:', targetSlideIndex, 'out of', totalSlides);\n          \n          // Phase 1: Continue fast spinning for 1 second\n          setTimeout(() => {\n            // Phase 2: Gradual slowdown (like a real casino)\n            if (swiperRef.current && swiperRef.current.autoplay) {\n              // Slow down gradually\n              swiperRef.current.autoplay.stop();\n              \n              let currentDelay = 50;\n              const slowdownSteps = [100, 200, 400, 600, 800, 1000];\n              let stepIndex = 0;\n              \n                             const gradualSlowdown = () => {\n                 if (stepIndex < slowdownSteps.length && swiperRef.current) {\n                   currentDelay = slowdownSteps[stepIndex];\n                   \n                   // Restart autoplay with slower speed using utility function\n                   restartAutoplayWithDelay(currentDelay);\n                   \n                   stepIndex++;\n                   \n                   // Use combination of setTimeout and requestAnimationFrame for reliability\n                   const nextStepDelay = currentDelay * 3;\n                   const startTime = performance.now();\n                   \n                   const waitForNextStep = () => {\n                     if (performance.now() - startTime >= nextStepDelay) {\n                       gradualSlowdown();\n                     } else {\n                       requestAnimationFrame(waitForNextStep);\n                     }\n                   };\n                   \n                   requestAnimationFrame(waitForNextStep);\n                 } else {\n                                     // Final phase: Stop and land on winner with casino-style precision\n                   if (swiperRef.current) {\n                     swiperRef.current.autoplay.stop();\n                     \n                                           // Add some suspense before final landing (like real casinos)\n                      setTimeout(() => {\n                        setIsLanding(true); // Apply casino landing styles\n                        \n                        if (swiperRef.current && typeof swiperRef.current.slideTo === 'function') {\n                          // Get current active index for smoother transition\n                          const currentIndex = swiperRef.current.activeIndex || 0;\n                          \n                          // Calculate the shortest path to winner (considering loop)\n                          let finalTargetIndex = targetSlideIndex;\n                          const totalSlides = players.length * 6;\n                          \n                          // Ensure we land on the correct winner in the visible range\n                          if (Math.abs(finalTargetIndex - currentIndex) > totalSlides / 2) {\n                            // Take the shorter route\n                            if (finalTargetIndex > currentIndex) {\n                              finalTargetIndex = finalTargetIndex - totalSlides;\n                            } else {\n                              finalTargetIndex = finalTargetIndex + totalSlides;\n                            }\n                          }\n                          \n                          // Smooth slide to winner with easing\n                          swiperRef.current.slideTo(finalTargetIndex, 2000, true);\n                          console.log('🏆 Final landing: current:', currentIndex, 'target:', finalTargetIndex);\n                        }\n                        \n                        setTimeout(() => {\n                          setIsLanding(false); // Remove landing styles\n                          onWinnerLand?.();\n                        }, 2000);\n                      }, 500); // Half-second suspense\n                   }\n                }\n              };\n              \n              gradualSlowdown();\n            }\n          }, 1000);\n        };\n        \n        createCasinoSlowdown();\n      } else {\n        console.warn('⚠️ Winner not found in players array:', winner);\n      }\n    }\n  }, [winner, players, onWinnerLand]);\n\n  // Safety mechanism: restart normal animation if spinning stops without winner\n  useEffect(() => {\n    if (!isSpinning && !winner && swiperRef.current) {\n      // Ensure autoplay continues with normal speed\n      restartAutoplayWithDelay(300);\n    }\n  }, [isSpinning, winner]);\n\n  // Handle browser tab visibility changes to ensure animation continues\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      if (!document.hidden && swiperRef.current) {\n        console.log('🔄 Tab became visible - ensuring animation continues');\n        \n        // Force restart autoplay when tab becomes visible\n        setTimeout(() => {\n          if (swiperRef.current && swiperRef.current.autoplay) {\n            const currentDelay = isSpinning ? 50 : 300;\n            restartAutoplayWithDelay(currentDelay);\n          }\n        }, 100);\n      }\n    };\n\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n    return () => document.removeEventListener('visibilitychange', handleVisibilityChange);\n  }, [isSpinning]);\n\n  // Force animation to continue on window focus\n  useEffect(() => {\n    const handleWindowFocus = () => {\n      if (swiperRef.current && swiperRef.current.autoplay) {\n        console.log('🔄 Window focused - restarting animation');\n        const currentDelay = isSpinning ? 50 : 300;\n        restartAutoplayWithDelay(currentDelay);\n      }\n    };\n\n    window.addEventListener('focus', handleWindowFocus);\n    return () => window.removeEventListener('focus', handleWindowFocus);\n  }, [isSpinning]);\n\n  return (\n    <div className=\"simple-carousel-container\">\n      {/* Target Arrow */}\n      <div className=\"carousel-arrow\">⬇️</div>\n      \n      <Swiper\n        ref={swiperRef}\n        modules={[Autoplay]}\n        spaceBetween={10}\n        slidesPerView=\"auto\"\n        centeredSlides={true}\n        loop={true}\n        loopedSlides={players.length * 6} // More slides for smoother infinite scroll\n        autoplay={{\n          delay: isSpinning ? 50 : 300, // Smoother spinning animation (50ms vs 10ms)\n          disableOnInteraction: false,\n          pauseOnMouseEnter: false,\n          waitForTransition: false, // Allow smooth transitions during speed changes\n          stopOnLastSlide: false,\n          reverseDirection: false,\n          pauseOnTabHidden: false, // Keep animation running when tab is hidden\n          pauseOnVisibilityChange: false, // Don't pause when tab visibility changes\n        }}\n        speed={isSpinning ? 100 : 400} // Smoother transition speeds\n        className={`player-swiper ${isSpinning ? 'spinning' : ''} ${isLanding ? 'landing' : ''}`}\n        allowTouchMove={false}\n        onSwiper={handleSwiperInit}\n      >\n        {/* Create 6 sets for much smoother infinite scroll */}\n        {[...Array(6)].map((_, setIndex) => \n          players.map((player, index) => (\n            <SwiperSlide key={`${setIndex}-${player?.address || `waiting-${index}`}`} className=\"player-slide\">\n              <div className={`player-card ${\n                winner && player && (\n                  player.address === winner.address || \n                  player.username === winner.username ||\n                  player.address === winner.winner ||\n                  player.address === winner.fullAddress ||\n                  player.username === winner.displayName\n                ) ? 'winner' : player ? 'active' : 'waiting'\n              }`}>\n                <div className=\"player-avatar\">\n                  {player ? (\n                    <div className=\"player-avatar-content\">\n                      {player.username ? player.username[0].toUpperCase() : '?'}\n                    </div>\n                  ) : (\n                    <div className=\"waiting-icon\">❓</div>\n                  )}\n                </div>\n                <div className=\"player-info\">\n                  <div className=\"player-name\">\n                    {player ? (player.username || player.displayName || 'Player') : 'Waiting'}\n                  </div>\n                  <div className=\"player-bet\">\n                    {player ? `${(player.amount || 0).toFixed(2)} TON` : '0.00 TON'}\n                  </div>\n                  {winner && player && (\n                    player.address === winner.address || \n                    player.username === winner.username ||\n                    player.address === winner.winner ||\n                    player.address === winner.fullAddress ||\n                    player.username === winner.displayName\n                  ) && (\n                    <div className=\"winner-prize\">\n                      Won {parseFloat(winner.prize || 0).toFixed(3)} TON\n                    </div>\n                  )}\n                </div>\n                {winner && player && (\n                  player.address === winner.address || \n                  player.username === winner.username ||\n                  player.address === winner.winner ||\n                  player.address === winner.fullAddress ||\n                  player.username === winner.displayName\n                ) && (\n                  <div className=\"winner-crown\">👑</div>\n                )}\n              </div>\n            </SwiperSlide>\n          ))\n        )}\n      </Swiper>\n    </div>\n  );\n};\n\nexport default SimpleCarousel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}