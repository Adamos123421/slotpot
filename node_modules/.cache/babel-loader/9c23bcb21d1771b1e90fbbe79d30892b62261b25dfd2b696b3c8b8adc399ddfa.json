{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSecureRandomNumber = exports.getSecureRandomWords = exports.getSecureRandomBytes = void 0;\nconst crypto_primitives_1 = require(\"@ton/crypto-primitives\");\nasync function getSecureRandomBytes(size) {\n  return (0, crypto_primitives_1.getSecureRandomBytes)(size);\n}\nexports.getSecureRandomBytes = getSecureRandomBytes;\nasync function getSecureRandomWords(size) {\n  return getSecureRandomWords(size);\n}\nexports.getSecureRandomWords = getSecureRandomWords;\nasync function getSecureRandomNumber(min, max) {\n  let range = max - min;\n  var bitsNeeded = Math.ceil(Math.log2(range));\n  if (bitsNeeded > 53) {\n    throw new Error('Range is too large');\n  }\n  var bytesNeeded = Math.ceil(bitsNeeded / 8);\n  var mask = Math.pow(2, bitsNeeded) - 1;\n  while (true) {\n    let res = await getSecureRandomBytes(bitsNeeded);\n    let power = (bytesNeeded - 1) * 8;\n    let numberValue = 0;\n    for (var i = 0; i < bytesNeeded; i++) {\n      numberValue += res[i] * Math.pow(2, power);\n      power -= 8;\n    }\n    numberValue = numberValue & mask; // Truncate\n    if (numberValue >= range) {\n      continue;\n    }\n    return min + numberValue;\n  }\n}\nexports.getSecureRandomNumber = getSecureRandomNumber;","map":{"version":3,"names":["Object","defineProperty","exports","value","getSecureRandomNumber","getSecureRandomWords","getSecureRandomBytes","crypto_primitives_1","require","size","min","max","range","bitsNeeded","Math","ceil","log2","Error","bytesNeeded","mask","pow","res","power","numberValue","i"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/node_modules/@ton/crypto/dist/primitives/getSecureRandom.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSecureRandomNumber = exports.getSecureRandomWords = exports.getSecureRandomBytes = void 0;\nconst crypto_primitives_1 = require(\"@ton/crypto-primitives\");\nasync function getSecureRandomBytes(size) {\n    return (0, crypto_primitives_1.getSecureRandomBytes)(size);\n}\nexports.getSecureRandomBytes = getSecureRandomBytes;\nasync function getSecureRandomWords(size) {\n    return getSecureRandomWords(size);\n}\nexports.getSecureRandomWords = getSecureRandomWords;\nasync function getSecureRandomNumber(min, max) {\n    let range = max - min;\n    var bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n        throw new Error('Range is too large');\n    }\n    var bytesNeeded = Math.ceil(bitsNeeded / 8);\n    var mask = Math.pow(2, bitsNeeded) - 1;\n    while (true) {\n        let res = await getSecureRandomBytes(bitsNeeded);\n        let power = (bytesNeeded - 1) * 8;\n        let numberValue = 0;\n        for (var i = 0; i < bytesNeeded; i++) {\n            numberValue += res[i] * Math.pow(2, power);\n            power -= 8;\n        }\n        numberValue = numberValue & mask; // Truncate\n        if (numberValue >= range) {\n            continue;\n        }\n        return min + numberValue;\n    }\n}\nexports.getSecureRandomNumber = getSecureRandomNumber;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,qBAAqB,GAAGF,OAAO,CAACG,oBAAoB,GAAGH,OAAO,CAACI,oBAAoB,GAAG,KAAK,CAAC;AACpG,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAC7D,eAAeF,oBAAoBA,CAACG,IAAI,EAAE;EACtC,OAAO,CAAC,CAAC,EAAEF,mBAAmB,CAACD,oBAAoB,EAAEG,IAAI,CAAC;AAC9D;AACAP,OAAO,CAACI,oBAAoB,GAAGA,oBAAoB;AACnD,eAAeD,oBAAoBA,CAACI,IAAI,EAAE;EACtC,OAAOJ,oBAAoB,CAACI,IAAI,CAAC;AACrC;AACAP,OAAO,CAACG,oBAAoB,GAAGA,oBAAoB;AACnD,eAAeD,qBAAqBA,CAACM,GAAG,EAAEC,GAAG,EAAE;EAC3C,IAAIC,KAAK,GAAGD,GAAG,GAAGD,GAAG;EACrB,IAAIG,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,IAAI,CAACJ,KAAK,CAAC,CAAC;EAC5C,IAAIC,UAAU,GAAG,EAAE,EAAE;IACjB,MAAM,IAAII,KAAK,CAAC,oBAAoB,CAAC;EACzC;EACA,IAAIC,WAAW,GAAGJ,IAAI,CAACC,IAAI,CAACF,UAAU,GAAG,CAAC,CAAC;EAC3C,IAAIM,IAAI,GAAGL,IAAI,CAACM,GAAG,CAAC,CAAC,EAAEP,UAAU,CAAC,GAAG,CAAC;EACtC,OAAO,IAAI,EAAE;IACT,IAAIQ,GAAG,GAAG,MAAMf,oBAAoB,CAACO,UAAU,CAAC;IAChD,IAAIS,KAAK,GAAG,CAACJ,WAAW,GAAG,CAAC,IAAI,CAAC;IACjC,IAAIK,WAAW,GAAG,CAAC;IACnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,WAAW,EAAEM,CAAC,EAAE,EAAE;MAClCD,WAAW,IAAIF,GAAG,CAACG,CAAC,CAAC,GAAGV,IAAI,CAACM,GAAG,CAAC,CAAC,EAAEE,KAAK,CAAC;MAC1CA,KAAK,IAAI,CAAC;IACd;IACAC,WAAW,GAAGA,WAAW,GAAGJ,IAAI,CAAC,CAAC;IAClC,IAAII,WAAW,IAAIX,KAAK,EAAE;MACtB;IACJ;IACA,OAAOF,GAAG,GAAGa,WAAW;EAC5B;AACJ;AACArB,OAAO,CAACE,qBAAqB,GAAGA,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}