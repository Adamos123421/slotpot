{"ast":null,"code":"class WinnerCoordinator{constructor(){this.isActive=false;this.listeners=new Set();this.currentWinnerTimestamp=null;}// Register a component that shows winner announcements\nregister(callback){this.listeners.add(callback);return()=>this.listeners.delete(callback);}// Set active state and notify all listeners\nsetActive(isActive){let winnerTimestamp=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;console.log(\"\\uD83C\\uDFAF WinnerCoordinator: Setting active state: \".concat(isActive,\", timestamp: \").concat(winnerTimestamp));this.isActive=isActive;this.currentWinnerTimestamp=winnerTimestamp;// Notify all registered components\nthis.listeners.forEach(callback=>{try{callback({isActive,winnerTimestamp});}catch(error){console.error('Error in winner coordinator callback:',error);}});}// Check if a winner announcement should be blocked\nshouldBlock(winnerTimestamp){return this.isActive||this.currentWinnerTimestamp===winnerTimestamp;}// Clear all states (for new rounds)\nreset(){console.log('ðŸ”„ WinnerCoordinator: Resetting all states');this.setActive(false,null);}// Get current state\ngetState(){return{isActive:this.isActive,currentWinnerTimestamp:this.currentWinnerTimestamp};}}// Create singleton instance\nconst winnerCoordinator=new WinnerCoordinator();export default winnerCoordinator;","map":{"version":3,"names":["WinnerCoordinator","constructor","isActive","listeners","Set","currentWinnerTimestamp","register","callback","add","delete","setActive","winnerTimestamp","arguments","length","undefined","console","log","concat","forEach","error","shouldBlock","reset","getState","winnerCoordinator"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/src/services/winnerCoordinator.js"],"sourcesContent":["class WinnerCoordinator {\r\n  constructor() {\r\n    this.isActive = false;\r\n    this.listeners = new Set();\r\n    this.currentWinnerTimestamp = null;\r\n  }\r\n\r\n  // Register a component that shows winner announcements\r\n  register(callback) {\r\n    this.listeners.add(callback);\r\n    return () => this.listeners.delete(callback);\r\n  }\r\n\r\n  // Set active state and notify all listeners\r\n  setActive(isActive, winnerTimestamp = null) {\r\n    console.log(`ðŸŽ¯ WinnerCoordinator: Setting active state: ${isActive}, timestamp: ${winnerTimestamp}`);\r\n    this.isActive = isActive;\r\n    this.currentWinnerTimestamp = winnerTimestamp;\r\n    \r\n    // Notify all registered components\r\n    this.listeners.forEach(callback => {\r\n      try {\r\n        callback({ isActive, winnerTimestamp });\r\n      } catch (error) {\r\n        console.error('Error in winner coordinator callback:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  // Check if a winner announcement should be blocked\r\n  shouldBlock(winnerTimestamp) {\r\n    return this.isActive || this.currentWinnerTimestamp === winnerTimestamp;\r\n  }\r\n\r\n  // Clear all states (for new rounds)\r\n  reset() {\r\n    console.log('ðŸ”„ WinnerCoordinator: Resetting all states');\r\n    this.setActive(false, null);\r\n  }\r\n\r\n  // Get current state\r\n  getState() {\r\n    return {\r\n      isActive: this.isActive,\r\n      currentWinnerTimestamp: this.currentWinnerTimestamp\r\n    };\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nconst winnerCoordinator = new WinnerCoordinator();\r\nexport default winnerCoordinator; "],"mappings":"AAAA,KAAM,CAAAA,iBAAkB,CACtBC,WAAWA,CAAA,CAAG,CACZ,IAAI,CAACC,QAAQ,CAAG,KAAK,CACrB,IAAI,CAACC,SAAS,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CAC1B,IAAI,CAACC,sBAAsB,CAAG,IAAI,CACpC,CAEA;AACAC,QAAQA,CAACC,QAAQ,CAAE,CACjB,IAAI,CAACJ,SAAS,CAACK,GAAG,CAACD,QAAQ,CAAC,CAC5B,MAAO,IAAM,IAAI,CAACJ,SAAS,CAACM,MAAM,CAACF,QAAQ,CAAC,CAC9C,CAEA;AACAG,SAASA,CAACR,QAAQ,CAA0B,IAAxB,CAAAS,eAAe,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,IAAI,CACxCG,OAAO,CAACC,GAAG,0DAAAC,MAAA,CAAgDf,QAAQ,kBAAAe,MAAA,CAAgBN,eAAe,CAAE,CAAC,CACrG,IAAI,CAACT,QAAQ,CAAGA,QAAQ,CACxB,IAAI,CAACG,sBAAsB,CAAGM,eAAe,CAE7C;AACA,IAAI,CAACR,SAAS,CAACe,OAAO,CAACX,QAAQ,EAAI,CACjC,GAAI,CACFA,QAAQ,CAAC,CAAEL,QAAQ,CAAES,eAAgB,CAAC,CAAC,CACzC,CAAE,MAAOQ,KAAK,CAAE,CACdJ,OAAO,CAACI,KAAK,CAAC,uCAAuC,CAAEA,KAAK,CAAC,CAC/D,CACF,CAAC,CAAC,CACJ,CAEA;AACAC,WAAWA,CAACT,eAAe,CAAE,CAC3B,MAAO,KAAI,CAACT,QAAQ,EAAI,IAAI,CAACG,sBAAsB,GAAKM,eAAe,CACzE,CAEA;AACAU,KAAKA,CAAA,CAAG,CACNN,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC,CACzD,IAAI,CAACN,SAAS,CAAC,KAAK,CAAE,IAAI,CAAC,CAC7B,CAEA;AACAY,QAAQA,CAAA,CAAG,CACT,MAAO,CACLpB,QAAQ,CAAE,IAAI,CAACA,QAAQ,CACvBG,sBAAsB,CAAE,IAAI,CAACA,sBAC/B,CAAC,CACH,CACF,CAEA;AACA,KAAM,CAAAkB,iBAAiB,CAAG,GAAI,CAAAvB,iBAAiB,CAAC,CAAC,CACjD,cAAe,CAAAuB,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}