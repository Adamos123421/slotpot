{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adams\\\\OneDrive\\\\Desktop\\\\Work\\\\slotpot\\\\src\\\\components\\\\SimpleCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport './SimpleCarousel.css';\nimport { TonIcon } from './IconComponents';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SimpleCarousel = ({\n  players,\n  winner,\n  isSpinning,\n  onWinnerLand\n}) => {\n  _s();\n  const carouselRef = useRef(null);\n  const animationRef = useRef(null);\n  const [winnerAnimationActive, setWinnerAnimationActive] = useState(false);\n  const [winnerLocked, setWinnerLocked] = useState(false);\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const winnerTimeoutRef = useRef(null);\n  const lastWinnerRef = useRef(null);\n  const animationAttemptsRef = useRef(0);\n\n  // Create extended players array for seamless loop\n  const extendedPlayers = React.useMemo(() => {\n    if (!players || players.length === 0) return [];\n\n    // Create multiple sets for smooth infinite scroll\n    const sets = 5;\n    const extended = [];\n    for (let i = 0; i < sets; i++) {\n      extended.push(...players);\n    }\n    return extended;\n  }, [players]);\n\n  // Card width for calculations\n  const cardWidth = 125; // 120px width + 4px spacing + 1px for smooth scroll\n\n  // Reset to idle state\n  const resetToIdle = useCallback(() => {\n    console.log('🎮 Resetting carousel to idle state');\n    setWinnerAnimationActive(false);\n    setWinnerLocked(false);\n    lastWinnerRef.current = null;\n    animationAttemptsRef.current = 0;\n    if (winnerTimeoutRef.current) {\n      clearTimeout(winnerTimeoutRef.current);\n      winnerTimeoutRef.current = null;\n    }\n    if (animationRef.current) {\n      clearInterval(animationRef.current);\n      animationRef.current = null;\n    }\n  }, []);\n\n  // Start continuous scrolling\n  const startScrolling = useCallback((speed = 200) => {\n    if (animationRef.current) {\n      clearInterval(animationRef.current);\n    }\n    animationRef.current = setInterval(() => {\n      setCurrentPosition(prev => {\n        const newPos = prev - 2; // Move 2px left each frame\n        // Reset position when we've scrolled one full set\n        const resetPoint = -(players.length * cardWidth);\n        return newPos <= resetPoint ? 0 : newPos;\n      });\n    }, speed === 'fast' ? 16 : speed); // 60fps for fast, custom for normal\n  }, [players.length, cardWidth]);\n\n  // Stop scrolling\n  const stopScrolling = useCallback(() => {\n    if (animationRef.current) {\n      clearInterval(animationRef.current);\n      animationRef.current = null;\n    }\n  }, []);\n\n  // Find winner position in players array\n  const findWinnerPosition = useCallback(() => {\n    if (!winner || !players) return -1;\n    const winnerUsername = (winner === null || winner === void 0 ? void 0 : winner.username) || (winner === null || winner === void 0 ? void 0 : winner.displayName) || (winner === null || winner === void 0 ? void 0 : winner.name);\n    const winnerAddress = (winner === null || winner === void 0 ? void 0 : winner.address) || (winner === null || winner === void 0 ? void 0 : winner.winner) || (winner === null || winner === void 0 ? void 0 : winner.fullAddress);\n    for (let i = 0; i < players.length; i++) {\n      const player = players[i];\n      if (!player) continue;\n      const isMatch = player.address === winnerAddress || player.username === winnerUsername || player.displayName === winnerUsername || winnerAddress && player.address === winnerAddress;\n      if (isMatch) {\n        console.log('🎯 Found winner at position:', i, 'Player:', player.username || player.displayName);\n        return i;\n      }\n    }\n    return -1;\n  }, [winner, players]);\n\n  // Smooth land on winner\n  const landOnWinner = useCallback(() => {\n    if (!carouselRef.current || !winner || winnerAnimationActive) return;\n    const winnerIndex = findWinnerPosition();\n    if (winnerIndex === -1) {\n      console.error('❌ Could not find winner position');\n      return;\n    }\n    console.log('🎯 Landing on winner at position:', winnerIndex);\n    setWinnerAnimationActive(true);\n    stopScrolling();\n\n    // Calculate target position to center the winner\n    const containerWidth = carouselRef.current.offsetWidth;\n    const centerOffset = containerWidth / 2 - cardWidth / 2;\n    const targetPosition = -(winnerIndex * cardWidth) + centerOffset;\n\n    // Add dramatic spinning - multiple full rotations\n    const fullRotations = 2 + Math.random(); // 2-3 full spins\n    const fullRotationDistance = players.length * cardWidth * fullRotations;\n    const finalPosition = targetPosition - fullRotationDistance;\n\n    // Apply smooth CSS transition\n    const carousel = carouselRef.current;\n    carousel.style.transition = 'transform 3s cubic-bezier(0.25, 0.1, 0.25, 1)';\n    carousel.style.transform = `translateX(${finalPosition}px)`;\n\n    // Lock winner after animation\n    winnerTimeoutRef.current = setTimeout(() => {\n      console.log('🔒 Winner locked!');\n      setWinnerLocked(true);\n      setWinnerAnimationActive(false);\n      onWinnerLand === null || onWinnerLand === void 0 ? void 0 : onWinnerLand();\n    }, 3500);\n  }, [winner, winnerAnimationActive, findWinnerPosition, stopScrolling, players.length, cardWidth, onWinnerLand]);\n\n  // Handle spinning state\n  useEffect(() => {\n    if (isSpinning && !winner && !winnerAnimationActive && !winnerLocked) {\n      console.log('🎰 Starting fast spin...');\n      startScrolling('fast');\n    } else if (!isSpinning && !winner && !winnerAnimationActive && !winnerLocked) {\n      console.log('🎰 Starting normal scroll...');\n      startScrolling(100); // Slower normal scroll\n    } else {\n      stopScrolling();\n    }\n    return () => stopScrolling();\n  }, [isSpinning, winner, winnerAnimationActive, winnerLocked, startScrolling, stopScrolling]);\n\n  // Handle winner animation\n  useEffect(() => {\n    if (!winner) {\n      resetToIdle();\n      return;\n    }\n    if (winnerLocked || winnerAnimationActive) return;\n\n    // Check for duplicate winner\n    const currentWinnerKey = `${winner.username || winner.displayName || 'Player'}-${winner.address || winner.winner || ''}`;\n    if (currentWinnerKey === lastWinnerRef.current) return;\n    if (animationAttemptsRef.current >= 1) {\n      console.warn('🚫 Max animation attempts reached');\n      setWinnerLocked(true);\n      onWinnerLand === null || onWinnerLand === void 0 ? void 0 : onWinnerLand();\n      return;\n    }\n    console.log('🏆 Winner announced:', winner.username || winner.displayName || 'Player');\n    lastWinnerRef.current = currentWinnerKey;\n    animationAttemptsRef.current++;\n    setTimeout(() => {\n      landOnWinner();\n    }, 100);\n  }, [winner, winnerLocked, winnerAnimationActive, landOnWinner, onWinnerLand, resetToIdle]);\n\n  // Apply current position via CSS transform\n  useEffect(() => {\n    if (carouselRef.current && !winnerAnimationActive) {\n      carouselRef.current.style.transition = 'none';\n      carouselRef.current.style.transform = `translateX(${currentPosition}px)`;\n    }\n  }, [currentPosition, winnerAnimationActive]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      stopScrolling();\n      if (winnerTimeoutRef.current) {\n        clearTimeout(winnerTimeoutRef.current);\n      }\n    };\n  }, [stopScrolling]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simple-carousel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `carousel-arrow ${winnerAnimationActive && !winnerLocked ? 'winner-approaching' : winnerLocked ? 'winner-landed' : ''}`,\n      children: \"\\u2B07\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-viewport\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: carouselRef,\n        className: `carousel-track ${isSpinning || winnerAnimationActive ? 'spinning' : ''}`,\n        children: extendedPlayers.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `player-card ${winnerLocked && winner && player && (player.address === winner.address || player.username === winner.username || player.address === winner.winner || player.address === winner.fullAddress || player.username === winner.displayName) ? 'winner-final' : player ? 'active' : 'waiting'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-avatar\",\n            children: player ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [player.telegramPhotoUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: player.telegramPhotoUrl,\n                alt: player.username || 'Player',\n                className: \"telegram-avatar\",\n                onError: e => {\n                  e.target.style.display = 'none';\n                  e.target.nextSibling.style.display = 'flex';\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-avatar-content\",\n                style: {\n                  display: player.telegramPhotoUrl ? 'none' : 'flex'\n                },\n                children: player.username ? player.username[0].toUpperCase() : '?'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"waiting-icon\",\n              children: \"\\u2753\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-name\",\n              children: player ? player.username || player.displayName || 'Player' : 'Waiting'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-bet\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: player ? (player.amount || 0).toFixed(2) : '0.00'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TonIcon, {\n                size: 12,\n                className: \"ton-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), winnerLocked && winner && player && (player.address === winner.address || player.username === winner.username || player.address === winner.winner || player.address === winner.fullAddress || player.username === winner.displayName) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"winner-prize\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Won \", parseFloat(winner.prize || 0).toFixed(3)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TonIcon, {\n                size: 12,\n                className: \"ton-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), winnerLocked && winner && player && (player.address === winner.address || player.username === winner.username || player.address === winner.winner || player.address === winner.fullAddress || player.username === winner.displayName) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"winner-crown\",\n            children: \"\\uD83D\\uDC51\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }, this)]\n        }, `${index}-${(player === null || player === void 0 ? void 0 : player.address) || `waiting-${index}`}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleCarousel, \"7kfIW963EjW6TjWYFi27rvgBDro=\");\n_c = SimpleCarousel;\nexport default SimpleCarousel;\nvar _c;\n$RefreshReg$(_c, \"SimpleCarousel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","TonIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","SimpleCarousel","players","winner","isSpinning","onWinnerLand","_s","carouselRef","animationRef","winnerAnimationActive","setWinnerAnimationActive","winnerLocked","setWinnerLocked","currentPosition","setCurrentPosition","winnerTimeoutRef","lastWinnerRef","animationAttemptsRef","extendedPlayers","useMemo","length","sets","extended","i","push","cardWidth","resetToIdle","console","log","current","clearTimeout","clearInterval","startScrolling","speed","setInterval","prev","newPos","resetPoint","stopScrolling","findWinnerPosition","winnerUsername","username","displayName","name","winnerAddress","address","fullAddress","player","isMatch","landOnWinner","winnerIndex","error","containerWidth","offsetWidth","centerOffset","targetPosition","fullRotations","Math","random","fullRotationDistance","finalPosition","carousel","style","transition","transform","setTimeout","currentWinnerKey","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","index","telegramPhotoUrl","src","alt","onError","e","target","display","nextSibling","toUpperCase","amount","toFixed","size","parseFloat","prize","_c","$RefreshReg$"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/src/components/SimpleCarousel.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport './SimpleCarousel.css';\nimport { TonIcon } from './IconComponents';\n\nconst SimpleCarousel = ({ \n  players, \n  winner, \n  isSpinning, \n  onWinnerLand \n}) => {\n  const carouselRef = useRef(null);\n  const animationRef = useRef(null);\n  const [winnerAnimationActive, setWinnerAnimationActive] = useState(false);\n  const [winnerLocked, setWinnerLocked] = useState(false);\n  const [currentPosition, setCurrentPosition] = useState(0);\n  const winnerTimeoutRef = useRef(null);\n  const lastWinnerRef = useRef(null);\n  const animationAttemptsRef = useRef(0);\n\n  // Create extended players array for seamless loop\n  const extendedPlayers = React.useMemo(() => {\n    if (!players || players.length === 0) return [];\n    \n    // Create multiple sets for smooth infinite scroll\n    const sets = 5;\n    const extended = [];\n    for (let i = 0; i < sets; i++) {\n      extended.push(...players);\n    }\n    return extended;\n  }, [players]);\n\n  // Card width for calculations\n  const cardWidth = 125; // 120px width + 4px spacing + 1px for smooth scroll\n\n  // Reset to idle state\n  const resetToIdle = useCallback(() => {\n    console.log('🎮 Resetting carousel to idle state');\n    setWinnerAnimationActive(false);\n    setWinnerLocked(false);\n    lastWinnerRef.current = null;\n    animationAttemptsRef.current = 0;\n    \n    if (winnerTimeoutRef.current) {\n      clearTimeout(winnerTimeoutRef.current);\n      winnerTimeoutRef.current = null;\n    }\n    \n    if (animationRef.current) {\n      clearInterval(animationRef.current);\n      animationRef.current = null;\n    }\n  }, []);\n\n  // Start continuous scrolling\n  const startScrolling = useCallback((speed = 200) => {\n    if (animationRef.current) {\n      clearInterval(animationRef.current);\n    }\n\n    animationRef.current = setInterval(() => {\n      setCurrentPosition(prev => {\n        const newPos = prev - 2; // Move 2px left each frame\n        // Reset position when we've scrolled one full set\n        const resetPoint = -(players.length * cardWidth);\n        return newPos <= resetPoint ? 0 : newPos;\n      });\n    }, speed === 'fast' ? 16 : speed); // 60fps for fast, custom for normal\n\n  }, [players.length, cardWidth]);\n\n  // Stop scrolling\n  const stopScrolling = useCallback(() => {\n    if (animationRef.current) {\n      clearInterval(animationRef.current);\n      animationRef.current = null;\n    }\n  }, []);\n\n  // Find winner position in players array\n  const findWinnerPosition = useCallback(() => {\n    if (!winner || !players) return -1;\n\n    const winnerUsername = winner?.username || winner?.displayName || winner?.name;\n    const winnerAddress = winner?.address || winner?.winner || winner?.fullAddress;\n    \n    for (let i = 0; i < players.length; i++) {\n      const player = players[i];\n      if (!player) continue;\n      \n      const isMatch = (player.address === winnerAddress) ||\n                     (player.username === winnerUsername) ||\n                     (player.displayName === winnerUsername) ||\n                     (winnerAddress && player.address === winnerAddress);\n      \n      if (isMatch) {\n        console.log('🎯 Found winner at position:', i, 'Player:', player.username || player.displayName);\n        return i;\n      }\n    }\n    \n    return -1;\n  }, [winner, players]);\n\n  // Smooth land on winner\n  const landOnWinner = useCallback(() => {\n    if (!carouselRef.current || !winner || winnerAnimationActive) return;\n\n    const winnerIndex = findWinnerPosition();\n    if (winnerIndex === -1) {\n      console.error('❌ Could not find winner position');\n      return;\n    }\n\n    console.log('🎯 Landing on winner at position:', winnerIndex);\n    setWinnerAnimationActive(true);\n    stopScrolling();\n\n    // Calculate target position to center the winner\n    const containerWidth = carouselRef.current.offsetWidth;\n    const centerOffset = containerWidth / 2 - cardWidth / 2;\n    const targetPosition = -(winnerIndex * cardWidth) + centerOffset;\n    \n    // Add dramatic spinning - multiple full rotations\n    const fullRotations = 2 + Math.random(); // 2-3 full spins\n    const fullRotationDistance = players.length * cardWidth * fullRotations;\n    const finalPosition = targetPosition - fullRotationDistance;\n\n    // Apply smooth CSS transition\n    const carousel = carouselRef.current;\n    carousel.style.transition = 'transform 3s cubic-bezier(0.25, 0.1, 0.25, 1)';\n    carousel.style.transform = `translateX(${finalPosition}px)`;\n\n    // Lock winner after animation\n    winnerTimeoutRef.current = setTimeout(() => {\n      console.log('🔒 Winner locked!');\n      setWinnerLocked(true);\n      setWinnerAnimationActive(false);\n      onWinnerLand?.();\n    }, 3500);\n\n  }, [winner, winnerAnimationActive, findWinnerPosition, stopScrolling, players.length, cardWidth, onWinnerLand]);\n\n  // Handle spinning state\n  useEffect(() => {\n    if (isSpinning && !winner && !winnerAnimationActive && !winnerLocked) {\n      console.log('🎰 Starting fast spin...');\n      startScrolling('fast');\n    } else if (!isSpinning && !winner && !winnerAnimationActive && !winnerLocked) {\n      console.log('🎰 Starting normal scroll...');\n      startScrolling(100); // Slower normal scroll\n    } else {\n      stopScrolling();\n    }\n\n    return () => stopScrolling();\n  }, [isSpinning, winner, winnerAnimationActive, winnerLocked, startScrolling, stopScrolling]);\n\n  // Handle winner animation\n  useEffect(() => {\n    if (!winner) {\n      resetToIdle();\n      return;\n    }\n\n    if (winnerLocked || winnerAnimationActive) return;\n\n    // Check for duplicate winner\n    const currentWinnerKey = `${winner.username || winner.displayName || 'Player'}-${winner.address || winner.winner || ''}`;\n    if (currentWinnerKey === lastWinnerRef.current) return;\n\n    if (animationAttemptsRef.current >= 1) {\n      console.warn('🚫 Max animation attempts reached');\n      setWinnerLocked(true);\n      onWinnerLand?.();\n      return;\n    }\n\n    console.log('🏆 Winner announced:', winner.username || winner.displayName || 'Player');\n    lastWinnerRef.current = currentWinnerKey;\n    animationAttemptsRef.current++;\n\n    setTimeout(() => {\n      landOnWinner();\n    }, 100);\n\n  }, [winner, winnerLocked, winnerAnimationActive, landOnWinner, onWinnerLand, resetToIdle]);\n\n  // Apply current position via CSS transform\n  useEffect(() => {\n    if (carouselRef.current && !winnerAnimationActive) {\n      carouselRef.current.style.transition = 'none';\n      carouselRef.current.style.transform = `translateX(${currentPosition}px)`;\n    }\n  }, [currentPosition, winnerAnimationActive]);\n\n  // Cleanup\n  useEffect(() => {\n    return () => {\n      stopScrolling();\n      if (winnerTimeoutRef.current) {\n        clearTimeout(winnerTimeoutRef.current);\n      }\n    };\n  }, [stopScrolling]);\n\n  return (\n    <div className=\"simple-carousel-container\">\n      {/* Target Arrow */}\n      <div className={`carousel-arrow ${\n        winnerAnimationActive && !winnerLocked ? 'winner-approaching' : \n        winnerLocked ? 'winner-landed' : ''\n      }`}>⬇️</div>\n      \n      {/* Custom Carousel */}\n      <div className=\"carousel-viewport\">\n        <div \n          ref={carouselRef}\n          className={`carousel-track ${isSpinning || winnerAnimationActive ? 'spinning' : ''}`}\n        >\n          {extendedPlayers.map((player, index) => (\n            <div\n              key={`${index}-${player?.address || `waiting-${index}`}`}\n              className={`player-card ${\n                winnerLocked && winner && player && (\n                  player.address === winner.address || \n                  player.username === winner.username ||\n                  player.address === winner.winner ||\n                  player.address === winner.fullAddress ||\n                  player.username === winner.displayName\n                ) ? 'winner-final' : player ? 'active' : 'waiting'\n              }`}\n            >\n              <div className=\"player-avatar\">\n                {player ? (\n                  <>\n                    {player.telegramPhotoUrl && (\n                      <img \n                        src={player.telegramPhotoUrl} \n                        alt={player.username || 'Player'} \n                        className=\"telegram-avatar\"\n                        onError={(e) => {\n                          e.target.style.display = 'none';\n                          e.target.nextSibling.style.display = 'flex';\n                        }}\n                      />\n                    )}\n                    <div \n                      className=\"player-avatar-content\" \n                      style={{ display: player.telegramPhotoUrl ? 'none' : 'flex' }}\n                    >\n                      {player.username ? player.username[0].toUpperCase() : '?'}\n                    </div>\n                  </>\n                ) : (\n                  <div className=\"waiting-icon\">❓</div>\n                )}\n              </div>\n              <div className=\"player-info\">\n                <div className=\"player-name\">\n                  {player ? (player.username || player.displayName || 'Player') : 'Waiting'}\n                </div>\n                <div className=\"player-bet\">\n                  <span>{player ? (player.amount || 0).toFixed(2) : '0.00'}</span>\n                  <TonIcon size={12} className=\"ton-icon\" />\n                </div>\n                {winnerLocked && winner && player && (\n                  player.address === winner.address || \n                  player.username === winner.username ||\n                  player.address === winner.winner ||\n                  player.address === winner.fullAddress ||\n                  player.username === winner.displayName\n                ) && (\n                  <div className=\"winner-prize\">\n                    <span>Won {parseFloat(winner.prize || 0).toFixed(3)}</span>\n                    <TonIcon size={12} className=\"ton-icon\" />\n                  </div>\n                )}\n              </div>\n              {winnerLocked && winner && player && (\n                player.address === winner.address || \n                player.username === winner.username ||\n                player.address === winner.winner ||\n                player.address === winner.fullAddress ||\n                player.username === winner.displayName\n              ) && (\n                <div className=\"winner-crown\">👑</div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SimpleCarousel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}