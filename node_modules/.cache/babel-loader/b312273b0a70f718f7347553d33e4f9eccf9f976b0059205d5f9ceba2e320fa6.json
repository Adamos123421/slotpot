{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bitsForNumber = void 0;\nfunction bitsForNumber(src, mode) {\n  let v = BigInt(src);\n  // Handle negative values\n  if (mode === 'int') {\n    // Corner case for zero or -1 value\n    if (v === 0n || v === -1n) {\n      return 1;\n    }\n    let v2 = v > 0 ? v : -v;\n    return v2.toString(2).length + 1 /* Sign bit */;\n  } else if (mode === 'uint') {\n    if (v < 0) {\n      throw Error(`value is negative. Got ${src}`);\n    }\n    return v.toString(2).length;\n  } else {\n    throw Error(`invalid mode. Got ${mode}`);\n  }\n}\nexports.bitsForNumber = bitsForNumber;","map":{"version":3,"names":["Object","defineProperty","exports","value","bitsForNumber","src","mode","v","BigInt","v2","toString","length","Error"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/node_modules/@ton/core/dist/utils/bitsForNumber.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bitsForNumber = void 0;\nfunction bitsForNumber(src, mode) {\n    let v = BigInt(src);\n    // Handle negative values\n    if (mode === 'int') {\n        // Corner case for zero or -1 value\n        if (v === 0n || v === -1n) {\n            return 1;\n        }\n        let v2 = v > 0 ? v : -v;\n        return (v2.toString(2).length + 1 /* Sign bit */);\n    }\n    else if (mode === 'uint') {\n        if (v < 0) {\n            throw Error(`value is negative. Got ${src}`);\n        }\n        return (v.toString(2).length);\n    }\n    else {\n        throw Error(`invalid mode. Got ${mode}`);\n    }\n}\nexports.bitsForNumber = bitsForNumber;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAG,KAAK,CAAC;AAC9B,SAASA,aAAaA,CAACC,GAAG,EAAEC,IAAI,EAAE;EAC9B,IAAIC,CAAC,GAAGC,MAAM,CAACH,GAAG,CAAC;EACnB;EACA,IAAIC,IAAI,KAAK,KAAK,EAAE;IAChB;IACA,IAAIC,CAAC,KAAK,EAAE,IAAIA,CAAC,KAAK,CAAC,EAAE,EAAE;MACvB,OAAO,CAAC;IACZ;IACA,IAAIE,EAAE,GAAGF,CAAC,GAAG,CAAC,GAAGA,CAAC,GAAG,CAACA,CAAC;IACvB,OAAQE,EAAE,CAACC,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,CAAC;EACtC,CAAC,MACI,IAAIL,IAAI,KAAK,MAAM,EAAE;IACtB,IAAIC,CAAC,GAAG,CAAC,EAAE;MACP,MAAMK,KAAK,CAAC,0BAA0BP,GAAG,EAAE,CAAC;IAChD;IACA,OAAQE,CAAC,CAACG,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM;EAChC,CAAC,MACI;IACD,MAAMC,KAAK,CAAC,qBAAqBN,IAAI,EAAE,CAAC;EAC5C;AACJ;AACAJ,OAAO,CAACE,aAAa,GAAGA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}