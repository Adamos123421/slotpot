{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.storeTransactionDescription = exports.loadTransactionDescription = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst SplitMergeInfo_1 = require(\"./SplitMergeInfo\");\nconst Transaction_1 = require(\"./Transaction\");\nconst TransactionActionPhase_1 = require(\"./TransactionActionPhase\");\nconst TransactionBouncePhase_1 = require(\"./TransactionBouncePhase\");\nconst TransactionComputePhase_1 = require(\"./TransactionComputePhase\");\nconst TransactionCreditPhase_1 = require(\"./TransactionCreditPhase\");\nconst TransactionStoragePhase_1 = require(\"./TransactionStoragePhase\");\nfunction loadTransactionDescription(slice) {\n  let type = slice.loadUint(4);\n  if (type === 0x00) {\n    const creditFirst = slice.loadBit();\n    let storagePhase = undefined;\n    if (slice.loadBit()) {\n      storagePhase = (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice);\n    }\n    let creditPhase = undefined;\n    if (slice.loadBit()) {\n      creditPhase = (0, TransactionCreditPhase_1.loadTransactionCreditPhase)(slice);\n    }\n    let computePhase = (0, TransactionComputePhase_1.loadTransactionComputePhase)(slice);\n    let actionPhase = undefined;\n    if (slice.loadBit()) {\n      actionPhase = (0, TransactionActionPhase_1.loadTransactionActionPhase)(slice.loadRef().beginParse());\n    }\n    let aborted = slice.loadBit();\n    let bouncePhase = undefined;\n    if (slice.loadBit()) {\n      bouncePhase = (0, TransactionBouncePhase_1.loadTransactionBouncePhase)(slice);\n    }\n    const destroyed = slice.loadBit();\n    return {\n      type: 'generic',\n      creditFirst,\n      storagePhase,\n      creditPhase,\n      computePhase,\n      actionPhase,\n      bouncePhase,\n      aborted,\n      destroyed\n    };\n  }\n  if (type === 0x01) {\n    return {\n      type: 'storage',\n      storagePhase: (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice)\n    };\n  }\n  if (type === 0x2 || type === 0x03) {\n    const isTock = type === 0x03;\n    let storagePhase = (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice);\n    let computePhase = (0, TransactionComputePhase_1.loadTransactionComputePhase)(slice);\n    let actionPhase = undefined;\n    if (slice.loadBit()) {\n      actionPhase = (0, TransactionActionPhase_1.loadTransactionActionPhase)(slice.loadRef().beginParse());\n    }\n    const aborted = slice.loadBit();\n    const destroyed = slice.loadBit();\n    return {\n      type: 'tick-tock',\n      isTock,\n      storagePhase,\n      computePhase,\n      actionPhase,\n      aborted,\n      destroyed\n    };\n  }\n  if (type === 0x04) {\n    let splitInfo = (0, SplitMergeInfo_1.loadSplitMergeInfo)(slice);\n    let storagePhase = undefined;\n    if (slice.loadBit()) {\n      storagePhase = (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice);\n    }\n    let computePhase = (0, TransactionComputePhase_1.loadTransactionComputePhase)(slice);\n    let actionPhase = undefined;\n    if (slice.loadBit()) {\n      actionPhase = (0, TransactionActionPhase_1.loadTransactionActionPhase)(slice.loadRef().beginParse());\n    }\n    const aborted = slice.loadBit();\n    const destroyed = slice.loadBit();\n    return {\n      type: 'split-prepare',\n      splitInfo,\n      storagePhase,\n      computePhase,\n      actionPhase,\n      aborted,\n      destroyed\n    };\n  }\n  if (type === 0x05) {\n    let splitInfo = (0, SplitMergeInfo_1.loadSplitMergeInfo)(slice);\n    let prepareTransaction = (0, Transaction_1.loadTransaction)(slice.loadRef().beginParse());\n    const installed = slice.loadBit();\n    return {\n      type: 'split-install',\n      splitInfo,\n      prepareTransaction,\n      installed\n    };\n  }\n  throw Error(`Unsupported transaction description type ${type}`);\n}\nexports.loadTransactionDescription = loadTransactionDescription;\nfunction storeTransactionDescription(src) {\n  return builder => {\n    if (src.type === 'generic') {\n      builder.storeUint(0x00, 4);\n      builder.storeBit(src.creditFirst);\n      if (src.storagePhase) {\n        builder.storeBit(true);\n        builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));\n      } else {\n        builder.storeBit(false);\n      }\n      if (src.creditPhase) {\n        builder.storeBit(true);\n        builder.store((0, TransactionCreditPhase_1.storeTransactionCreditPhase)(src.creditPhase));\n      } else {\n        builder.storeBit(false);\n      }\n      builder.store((0, TransactionComputePhase_1.storeTransactionComputePhase)(src.computePhase));\n      if (src.actionPhase) {\n        builder.storeBit(true);\n        builder.storeRef((0, Builder_1.beginCell)().store((0, TransactionActionPhase_1.storeTransactionActionPhase)(src.actionPhase)));\n      } else {\n        builder.storeBit(false);\n      }\n      builder.storeBit(src.aborted);\n      if (src.bouncePhase) {\n        builder.storeBit(true);\n        builder.store((0, TransactionBouncePhase_1.storeTransactionBouncePhase)(src.bouncePhase));\n      } else {\n        builder.storeBit(false);\n      }\n      builder.storeBit(src.destroyed);\n    } else if (src.type === 'storage') {\n      builder.storeUint(0x01, 4);\n      builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));\n    } else if (src.type === 'tick-tock') {\n      builder.storeUint(src.isTock ? 0x03 : 0x02, 4);\n      builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));\n      builder.store((0, TransactionComputePhase_1.storeTransactionComputePhase)(src.computePhase));\n      if (src.actionPhase) {\n        builder.storeBit(true);\n        builder.storeRef((0, Builder_1.beginCell)().store((0, TransactionActionPhase_1.storeTransactionActionPhase)(src.actionPhase)));\n      } else {\n        builder.storeBit(false);\n      }\n      builder.storeBit(src.aborted);\n      builder.storeBit(src.destroyed);\n    } else if (src.type === 'split-prepare') {\n      builder.storeUint(0x04, 4);\n      builder.store((0, SplitMergeInfo_1.storeSplitMergeInfo)(src.splitInfo));\n      if (src.storagePhase) {\n        builder.storeBit(true);\n        builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));\n      } else {\n        builder.storeBit(false);\n      }\n      builder.store((0, TransactionComputePhase_1.storeTransactionComputePhase)(src.computePhase));\n      if (src.actionPhase) {\n        builder.storeBit(true);\n        builder.store((0, TransactionActionPhase_1.storeTransactionActionPhase)(src.actionPhase));\n      } else {\n        builder.storeBit(false);\n      }\n      builder.storeBit(src.aborted);\n      builder.storeBit(src.destroyed);\n    } else if (src.type === 'split-install') {\n      builder.storeUint(0x05, 4);\n      builder.store((0, SplitMergeInfo_1.storeSplitMergeInfo)(src.splitInfo));\n      builder.storeRef((0, Builder_1.beginCell)().store((0, Transaction_1.storeTransaction)(src.prepareTransaction)));\n      builder.storeBit(src.installed);\n    } else {\n      throw Error(`Unsupported transaction description type ${src.type}`);\n    }\n  };\n}\nexports.storeTransactionDescription = storeTransactionDescription;","map":{"version":3,"names":["Object","defineProperty","exports","value","storeTransactionDescription","loadTransactionDescription","Builder_1","require","SplitMergeInfo_1","Transaction_1","TransactionActionPhase_1","TransactionBouncePhase_1","TransactionComputePhase_1","TransactionCreditPhase_1","TransactionStoragePhase_1","slice","type","loadUint","creditFirst","loadBit","storagePhase","undefined","loadTransactionStoragePhase","creditPhase","loadTransactionCreditPhase","computePhase","loadTransactionComputePhase","actionPhase","loadTransactionActionPhase","loadRef","beginParse","aborted","bouncePhase","loadTransactionBouncePhase","destroyed","isTock","splitInfo","loadSplitMergeInfo","prepareTransaction","loadTransaction","installed","Error","src","builder","storeUint","storeBit","store","storeTransactionsStoragePhase","storeTransactionCreditPhase","storeTransactionComputePhase","storeRef","beginCell","storeTransactionActionPhase","storeTransactionBouncePhase","storeSplitMergeInfo","storeTransaction"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/node_modules/@ton/core/dist/types/TransactionDescription.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeTransactionDescription = exports.loadTransactionDescription = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst SplitMergeInfo_1 = require(\"./SplitMergeInfo\");\nconst Transaction_1 = require(\"./Transaction\");\nconst TransactionActionPhase_1 = require(\"./TransactionActionPhase\");\nconst TransactionBouncePhase_1 = require(\"./TransactionBouncePhase\");\nconst TransactionComputePhase_1 = require(\"./TransactionComputePhase\");\nconst TransactionCreditPhase_1 = require(\"./TransactionCreditPhase\");\nconst TransactionStoragePhase_1 = require(\"./TransactionStoragePhase\");\nfunction loadTransactionDescription(slice) {\n    let type = slice.loadUint(4);\n    if (type === 0x00) {\n        const creditFirst = slice.loadBit();\n        let storagePhase = undefined;\n        if (slice.loadBit()) {\n            storagePhase = (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice);\n        }\n        let creditPhase = undefined;\n        if (slice.loadBit()) {\n            creditPhase = (0, TransactionCreditPhase_1.loadTransactionCreditPhase)(slice);\n        }\n        let computePhase = (0, TransactionComputePhase_1.loadTransactionComputePhase)(slice);\n        let actionPhase = undefined;\n        if (slice.loadBit()) {\n            actionPhase = (0, TransactionActionPhase_1.loadTransactionActionPhase)(slice.loadRef().beginParse());\n        }\n        let aborted = slice.loadBit();\n        let bouncePhase = undefined;\n        if (slice.loadBit()) {\n            bouncePhase = (0, TransactionBouncePhase_1.loadTransactionBouncePhase)(slice);\n        }\n        const destroyed = slice.loadBit();\n        return {\n            type: 'generic',\n            creditFirst,\n            storagePhase,\n            creditPhase,\n            computePhase,\n            actionPhase,\n            bouncePhase,\n            aborted,\n            destroyed\n        };\n    }\n    if (type === 0x01) {\n        return {\n            type: 'storage',\n            storagePhase: (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice)\n        };\n    }\n    if (type === 0x2 || type === 0x03) {\n        const isTock = type === 0x03;\n        let storagePhase = (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice);\n        let computePhase = (0, TransactionComputePhase_1.loadTransactionComputePhase)(slice);\n        let actionPhase = undefined;\n        if (slice.loadBit()) {\n            actionPhase = (0, TransactionActionPhase_1.loadTransactionActionPhase)(slice.loadRef().beginParse());\n        }\n        const aborted = slice.loadBit();\n        const destroyed = slice.loadBit();\n        return {\n            type: 'tick-tock',\n            isTock,\n            storagePhase,\n            computePhase,\n            actionPhase,\n            aborted,\n            destroyed\n        };\n    }\n    if (type === 0x04) {\n        let splitInfo = (0, SplitMergeInfo_1.loadSplitMergeInfo)(slice);\n        let storagePhase = undefined;\n        if (slice.loadBit()) {\n            storagePhase = (0, TransactionStoragePhase_1.loadTransactionStoragePhase)(slice);\n        }\n        let computePhase = (0, TransactionComputePhase_1.loadTransactionComputePhase)(slice);\n        let actionPhase = undefined;\n        if (slice.loadBit()) {\n            actionPhase = (0, TransactionActionPhase_1.loadTransactionActionPhase)(slice.loadRef().beginParse());\n        }\n        const aborted = slice.loadBit();\n        const destroyed = slice.loadBit();\n        return {\n            type: 'split-prepare',\n            splitInfo,\n            storagePhase,\n            computePhase,\n            actionPhase,\n            aborted,\n            destroyed\n        };\n    }\n    if (type === 0x05) {\n        let splitInfo = (0, SplitMergeInfo_1.loadSplitMergeInfo)(slice);\n        let prepareTransaction = (0, Transaction_1.loadTransaction)(slice.loadRef().beginParse());\n        const installed = slice.loadBit();\n        return {\n            type: 'split-install',\n            splitInfo,\n            prepareTransaction,\n            installed\n        };\n    }\n    throw Error(`Unsupported transaction description type ${type}`);\n}\nexports.loadTransactionDescription = loadTransactionDescription;\nfunction storeTransactionDescription(src) {\n    return (builder) => {\n        if (src.type === 'generic') {\n            builder.storeUint(0x00, 4);\n            builder.storeBit(src.creditFirst);\n            if (src.storagePhase) {\n                builder.storeBit(true);\n                builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));\n            }\n            else {\n                builder.storeBit(false);\n            }\n            if (src.creditPhase) {\n                builder.storeBit(true);\n                builder.store((0, TransactionCreditPhase_1.storeTransactionCreditPhase)(src.creditPhase));\n            }\n            else {\n                builder.storeBit(false);\n            }\n            builder.store((0, TransactionComputePhase_1.storeTransactionComputePhase)(src.computePhase));\n            if (src.actionPhase) {\n                builder.storeBit(true);\n                builder.storeRef((0, Builder_1.beginCell)().store((0, TransactionActionPhase_1.storeTransactionActionPhase)(src.actionPhase)));\n            }\n            else {\n                builder.storeBit(false);\n            }\n            builder.storeBit(src.aborted);\n            if (src.bouncePhase) {\n                builder.storeBit(true);\n                builder.store((0, TransactionBouncePhase_1.storeTransactionBouncePhase)(src.bouncePhase));\n            }\n            else {\n                builder.storeBit(false);\n            }\n            builder.storeBit(src.destroyed);\n        }\n        else if (src.type === 'storage') {\n            builder.storeUint(0x01, 4);\n            builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));\n        }\n        else if (src.type === 'tick-tock') {\n            builder.storeUint(src.isTock ? 0x03 : 0x02, 4);\n            builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));\n            builder.store((0, TransactionComputePhase_1.storeTransactionComputePhase)(src.computePhase));\n            if (src.actionPhase) {\n                builder.storeBit(true);\n                builder.storeRef((0, Builder_1.beginCell)().store((0, TransactionActionPhase_1.storeTransactionActionPhase)(src.actionPhase)));\n            }\n            else {\n                builder.storeBit(false);\n            }\n            builder.storeBit(src.aborted);\n            builder.storeBit(src.destroyed);\n        }\n        else if (src.type === 'split-prepare') {\n            builder.storeUint(0x04, 4);\n            builder.store((0, SplitMergeInfo_1.storeSplitMergeInfo)(src.splitInfo));\n            if (src.storagePhase) {\n                builder.storeBit(true);\n                builder.store((0, TransactionStoragePhase_1.storeTransactionsStoragePhase)(src.storagePhase));\n            }\n            else {\n                builder.storeBit(false);\n            }\n            builder.store((0, TransactionComputePhase_1.storeTransactionComputePhase)(src.computePhase));\n            if (src.actionPhase) {\n                builder.storeBit(true);\n                builder.store((0, TransactionActionPhase_1.storeTransactionActionPhase)(src.actionPhase));\n            }\n            else {\n                builder.storeBit(false);\n            }\n            builder.storeBit(src.aborted);\n            builder.storeBit(src.destroyed);\n        }\n        else if (src.type === 'split-install') {\n            builder.storeUint(0x05, 4);\n            builder.store((0, SplitMergeInfo_1.storeSplitMergeInfo)(src.splitInfo));\n            builder.storeRef((0, Builder_1.beginCell)().store((0, Transaction_1.storeTransaction)(src.prepareTransaction)));\n            builder.storeBit(src.installed);\n        }\n        else {\n            throw Error(`Unsupported transaction description type ${src.type}`);\n        }\n    };\n}\nexports.storeTransactionDescription = storeTransactionDescription;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}