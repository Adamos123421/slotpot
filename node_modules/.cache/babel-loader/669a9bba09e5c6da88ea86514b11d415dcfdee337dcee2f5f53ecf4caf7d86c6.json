{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HttpApi = void 0;\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst TonCache_1 = require(\"./TonCache\");\nconst dataloader_1 = __importDefault(require(\"dataloader\"));\nconst axios_1 = __importDefault(require(\"axios\"));\nconst zod_1 = require(\"zod\");\nconst version = require('../../../package.json').version;\nconst blockIdExt = zod_1.z.object({\n  '@type': zod_1.z.literal('ton.blockIdExt'),\n  workchain: zod_1.z.number(),\n  shard: zod_1.z.string(),\n  seqno: zod_1.z.number(),\n  root_hash: zod_1.z.string(),\n  file_hash: zod_1.z.string()\n});\nconst addressInformation = zod_1.z.object({\n  balance: zod_1.z.union([zod_1.z.number(), zod_1.z.string()]),\n  state: zod_1.z.union([zod_1.z.literal('active'), zod_1.z.literal('uninitialized'), zod_1.z.literal('frozen')]),\n  data: zod_1.z.string(),\n  code: zod_1.z.string(),\n  last_transaction_id: zod_1.z.object({\n    '@type': zod_1.z.literal('internal.transactionId'),\n    lt: zod_1.z.string(),\n    hash: zod_1.z.string()\n  }),\n  block_id: blockIdExt,\n  sync_utime: zod_1.z.number()\n});\nconst bocResponse = zod_1.z.object({\n  '@type': zod_1.z.literal('ok')\n});\nconst feeResponse = zod_1.z.object({\n  '@type': zod_1.z.literal('query.fees'),\n  source_fees: zod_1.z.object({\n    '@type': zod_1.z.literal('fees'),\n    in_fwd_fee: zod_1.z.number(),\n    storage_fee: zod_1.z.number(),\n    gas_fee: zod_1.z.number(),\n    fwd_fee: zod_1.z.number()\n  })\n});\nconst callGetMethod = zod_1.z.object({\n  gas_used: zod_1.z.number(),\n  exit_code: zod_1.z.number(),\n  stack: zod_1.z.array(zod_1.z.unknown())\n});\nconst messageData = zod_1.z.union([zod_1.z.object({\n  '@type': zod_1.z.literal('msg.dataRaw'),\n  'body': zod_1.z.string()\n}), zod_1.z.object({\n  '@type': zod_1.z.literal('msg.dataText'),\n  'text': zod_1.z.string()\n}), zod_1.z.object({\n  '@type': zod_1.z.literal('msg.dataDecryptedText'),\n  'text': zod_1.z.string()\n}), zod_1.z.object({\n  '@type': zod_1.z.literal('msg.dataEncryptedText'),\n  'text': zod_1.z.string()\n})]);\nconst message = zod_1.z.object({\n  source: zod_1.z.string(),\n  destination: zod_1.z.string(),\n  value: zod_1.z.string(),\n  fwd_fee: zod_1.z.string(),\n  ihr_fee: zod_1.z.string(),\n  created_lt: zod_1.z.string(),\n  body_hash: zod_1.z.string(),\n  msg_data: messageData,\n  message: zod_1.z.string().optional()\n});\nconst transaction = zod_1.z.object({\n  data: zod_1.z.string(),\n  utime: zod_1.z.number(),\n  transaction_id: zod_1.z.object({\n    lt: zod_1.z.string(),\n    hash: zod_1.z.string()\n  }),\n  fee: zod_1.z.string(),\n  storage_fee: zod_1.z.string(),\n  other_fee: zod_1.z.string(),\n  in_msg: zod_1.z.union([zod_1.z.undefined(), message]),\n  out_msgs: zod_1.z.array(message)\n});\nconst getTransactions = zod_1.z.array(transaction);\nconst getMasterchain = zod_1.z.object({\n  state_root_hash: zod_1.z.string(),\n  last: blockIdExt,\n  init: blockIdExt\n});\nconst getShards = zod_1.z.object({\n  shards: zod_1.z.array(blockIdExt)\n});\nconst blockShortTxt = zod_1.z.object({\n  '@type': zod_1.z.literal('blocks.shortTxId'),\n  mode: zod_1.z.number(),\n  account: zod_1.z.string(),\n  lt: zod_1.z.string(),\n  hash: zod_1.z.string()\n});\nconst getBlockTransactions = zod_1.z.object({\n  id: blockIdExt,\n  req_count: zod_1.z.number(),\n  incomplete: zod_1.z.boolean(),\n  transactions: zod_1.z.array(blockShortTxt)\n});\nclass TypedCache {\n  constructor(namespace, cache, codec, keyEncoder) {\n    this.namespace = namespace;\n    this.cache = cache;\n    this.codec = codec;\n    this.keyEncoder = keyEncoder;\n  }\n  async get(key) {\n    let ex = await this.cache.get(this.namespace, this.keyEncoder(key));\n    if (ex) {\n      let decoded = this.codec.safeParse(JSON.parse(ex));\n      if (decoded.success) {\n        return decoded.data;\n      }\n    }\n    return null;\n  }\n  async set(key, value) {\n    if (value !== null) {\n      await this.cache.set(this.namespace, this.keyEncoder(key), JSON.stringify(value));\n    } else {\n      await this.cache.set(this.namespace, this.keyEncoder(key), null);\n    }\n  }\n}\nclass HttpApi {\n  constructor(endpoint, parameters) {\n    this.endpoint = endpoint;\n    this.cache = new TonCache_1.InMemoryCache();\n    this.parameters = {\n      timeout: parameters?.timeout || 30000,\n      apiKey: parameters?.apiKey,\n      adapter: parameters?.adapter\n    };\n    // Shard\n    this.shardCache = new TypedCache('ton-shard', this.cache, zod_1.z.array(blockIdExt), src => src + '');\n    this.shardLoader = new dataloader_1.default(async src => {\n      return await Promise.all(src.map(async v => {\n        const cached = await this.shardCache.get(v);\n        if (cached) {\n          return cached;\n        }\n        let loaded = (await this.doCall('shards', {\n          seqno: v\n        }, getShards)).shards;\n        await this.shardCache.set(v, loaded);\n        return loaded;\n      }));\n    });\n    // Shard Transactions\n    this.shardTransactionsCache = new TypedCache('ton-shard-tx', this.cache, getBlockTransactions, src => src.workchain + ':' + src.shard + ':' + src.seqno);\n    this.shardTransactionsLoader = new dataloader_1.default(async src => {\n      return await Promise.all(src.map(async v => {\n        const cached = await this.shardTransactionsCache.get(v);\n        if (cached) {\n          return cached;\n        }\n        let loaded = await this.doCall('getBlockTransactions', {\n          workchain: v.workchain,\n          seqno: v.seqno,\n          shard: v.shard\n        }, getBlockTransactions);\n        await this.shardTransactionsCache.set(v, loaded);\n        return loaded;\n      }));\n    }, {\n      cacheKeyFn: src => src.workchain + ':' + src.shard + ':' + src.seqno\n    });\n  }\n  getAddressInformation(address) {\n    return this.doCall('getAddressInformation', {\n      address: address.toString()\n    }, addressInformation);\n  }\n  async getTransactions(address, opts) {\n    const inclusive = opts.inclusive;\n    delete opts.inclusive;\n    // Convert hash\n    let hash = undefined;\n    if (opts.hash) {\n      hash = Buffer.from(opts.hash, 'base64').toString('hex');\n    }\n    // Adjust limit\n    let limit = opts.limit;\n    if (opts.hash && opts.lt && inclusive !== true) {\n      limit++;\n    }\n    // Do request\n    let res = await this.doCall('getTransactions', {\n      address: address.toString(),\n      ...opts,\n      limit,\n      hash\n    }, getTransactions);\n    if (res.length > limit) {\n      res = res.slice(0, limit);\n    }\n    // Adjust result\n    if (opts.hash && opts.lt && inclusive !== true) {\n      res.shift();\n      return res;\n    } else {\n      return res;\n    }\n  }\n  async getMasterchainInfo() {\n    return await this.doCall('getMasterchainInfo', {}, getMasterchain);\n  }\n  async getShards(seqno) {\n    return await this.shardLoader.load(seqno);\n  }\n  async getBlockTransactions(workchain, seqno, shard) {\n    return await this.shardTransactionsLoader.load({\n      workchain,\n      seqno,\n      shard\n    });\n  }\n  async getTransaction(address, lt, hash) {\n    let convHash = Buffer.from(hash, 'base64').toString('hex');\n    let res = await this.doCall('getTransactions', {\n      address: address.toString(),\n      lt,\n      hash: convHash,\n      limit: 1\n    }, getTransactions);\n    let ex = res.find(v => v.transaction_id.lt === lt && v.transaction_id.hash === hash);\n    if (ex) {\n      return ex;\n    } else {\n      return null;\n    }\n  }\n  async callGetMethod(address, method, stack) {\n    return await this.doCall('runGetMethod', {\n      address: address.toString(),\n      method,\n      stack: serializeStack(stack)\n    }, callGetMethod);\n  }\n  async sendBoc(body) {\n    await this.doCall('sendBoc', {\n      boc: body.toString('base64')\n    }, bocResponse);\n  }\n  async estimateFee(address, args) {\n    return await this.doCall('estimateFee', {\n      address: address.toString(),\n      body: args.body.toBoc().toString('base64'),\n      'init_data': args.initData ? args.initData.toBoc().toString('base64') : '',\n      'init_code': args.initCode ? args.initCode.toBoc().toString('base64') : '',\n      ignore_chksig: args.ignoreSignature\n    }, feeResponse);\n  }\n  async tryLocateResultTx(source, destination, created_lt) {\n    return await this.doCall('tryLocateResultTx', {\n      source: source.toString(),\n      destination: destination.toString(),\n      created_lt\n    }, transaction);\n  }\n  async tryLocateSourceTx(source, destination, created_lt) {\n    return await this.doCall('tryLocateSourceTx', {\n      source: source.toString(),\n      destination: destination.toString(),\n      created_lt\n    }, transaction);\n  }\n  async doCall(method, body, codec) {\n    let headers = {\n      'Content-Type': 'application/json',\n      'X-Ton-Client-Version': version\n    };\n    if (this.parameters.apiKey) {\n      headers['X-API-Key'] = this.parameters.apiKey;\n    }\n    let res = await axios_1.default.post(this.endpoint, JSON.stringify({\n      id: '1',\n      jsonrpc: '2.0',\n      method: method,\n      params: body\n    }), {\n      headers,\n      timeout: this.parameters.timeout,\n      adapter: this.parameters.adapter\n    });\n    if (res.status !== 200 || !res.data.ok) {\n      throw Error('Received error: ' + JSON.stringify(res.data));\n    }\n    let decoded = codec.safeParse(res.data.result);\n    if (decoded.success) {\n      return decoded.data;\n    } else {\n      throw Error('Malformed response: ' + decoded.error.format()._errors.join(', '));\n    }\n  }\n}\nexports.HttpApi = HttpApi;\nfunction serializeStack(src) {\n  let stack = [];\n  for (let s of src) {\n    if (s.type === 'int') {\n      stack.push(['num', s.value.toString()]);\n    } else if (s.type === 'cell') {\n      stack.push(['tvm.Cell', s.cell.toBoc().toString('base64')]);\n    } else if (s.type === 'slice') {\n      stack.push(['tvm.Slice', s.cell.toBoc().toString('base64')]);\n    } else if (s.type === 'builder') {\n      stack.push(['tvm.Builder', s.cell.toBoc().toString('base64')]);\n    } else {\n      throw Error('Unsupported stack item type: ' + s.type);\n    }\n  }\n  return stack;\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","HttpApi","TonCache_1","require","dataloader_1","axios_1","zod_1","version","blockIdExt","z","object","literal","workchain","number","shard","string","seqno","root_hash","file_hash","addressInformation","balance","union","state","data","code","last_transaction_id","lt","hash","block_id","sync_utime","bocResponse","feeResponse","source_fees","in_fwd_fee","storage_fee","gas_fee","fwd_fee","callGetMethod","gas_used","exit_code","stack","array","unknown","messageData","message","source","destination","ihr_fee","created_lt","body_hash","msg_data","optional","transaction","utime","transaction_id","fee","other_fee","in_msg","undefined","out_msgs","getTransactions","getMasterchain","state_root_hash","last","init","getShards","shards","blockShortTxt","mode","account","getBlockTransactions","id","req_count","incomplete","boolean","transactions","TypedCache","constructor","namespace","cache","codec","keyEncoder","get","key","ex","decoded","safeParse","JSON","parse","success","set","stringify","endpoint","parameters","InMemoryCache","timeout","apiKey","adapter","shardCache","src","shardLoader","default","Promise","all","map","v","cached","loaded","doCall","shardTransactionsCache","shardTransactionsLoader","cacheKeyFn","getAddressInformation","address","toString","opts","inclusive","Buffer","from","limit","res","length","slice","shift","getMasterchainInfo","load","getTransaction","convHash","find","method","serializeStack","sendBoc","body","boc","estimateFee","args","toBoc","initData","initCode","ignore_chksig","ignoreSignature","tryLocateResultTx","tryLocateSourceTx","headers","post","jsonrpc","params","status","ok","Error","result","error","format","_errors","join","s","type","push","cell"],"sources":["C:/Users/adams/Downloads/GLL/slotpot/node_modules/@ton/ton/dist/client/api/HttpApi.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpApi = void 0;\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nconst TonCache_1 = require(\"./TonCache\");\nconst dataloader_1 = __importDefault(require(\"dataloader\"));\nconst axios_1 = __importDefault(require(\"axios\"));\nconst zod_1 = require(\"zod\");\nconst version = require('../../../package.json').version;\nconst blockIdExt = zod_1.z.object({\n    '@type': zod_1.z.literal('ton.blockIdExt'),\n    workchain: zod_1.z.number(),\n    shard: zod_1.z.string(),\n    seqno: zod_1.z.number(),\n    root_hash: zod_1.z.string(),\n    file_hash: zod_1.z.string()\n});\nconst addressInformation = zod_1.z.object({\n    balance: zod_1.z.union([zod_1.z.number(), zod_1.z.string()]),\n    state: zod_1.z.union([zod_1.z.literal('active'), zod_1.z.literal('uninitialized'), zod_1.z.literal('frozen')]),\n    data: zod_1.z.string(),\n    code: zod_1.z.string(),\n    last_transaction_id: zod_1.z.object({\n        '@type': zod_1.z.literal('internal.transactionId'),\n        lt: zod_1.z.string(),\n        hash: zod_1.z.string()\n    }),\n    block_id: blockIdExt,\n    sync_utime: zod_1.z.number()\n});\nconst bocResponse = zod_1.z.object({\n    '@type': zod_1.z.literal('ok')\n});\nconst feeResponse = zod_1.z.object({\n    '@type': zod_1.z.literal('query.fees'),\n    source_fees: zod_1.z.object({\n        '@type': zod_1.z.literal('fees'),\n        in_fwd_fee: zod_1.z.number(),\n        storage_fee: zod_1.z.number(),\n        gas_fee: zod_1.z.number(),\n        fwd_fee: zod_1.z.number()\n    })\n});\nconst callGetMethod = zod_1.z.object({\n    gas_used: zod_1.z.number(),\n    exit_code: zod_1.z.number(),\n    stack: zod_1.z.array(zod_1.z.unknown())\n});\nconst messageData = zod_1.z.union([\n    zod_1.z.object({\n        '@type': zod_1.z.literal('msg.dataRaw'),\n        'body': zod_1.z.string()\n    }),\n    zod_1.z.object({\n        '@type': zod_1.z.literal('msg.dataText'),\n        'text': zod_1.z.string()\n    }),\n    zod_1.z.object({\n        '@type': zod_1.z.literal('msg.dataDecryptedText'),\n        'text': zod_1.z.string()\n    }),\n    zod_1.z.object({\n        '@type': zod_1.z.literal('msg.dataEncryptedText'),\n        'text': zod_1.z.string()\n    })\n]);\nconst message = zod_1.z.object({\n    source: zod_1.z.string(),\n    destination: zod_1.z.string(),\n    value: zod_1.z.string(),\n    fwd_fee: zod_1.z.string(),\n    ihr_fee: zod_1.z.string(),\n    created_lt: zod_1.z.string(),\n    body_hash: zod_1.z.string(),\n    msg_data: messageData,\n    message: zod_1.z.string().optional()\n});\nconst transaction = zod_1.z.object({\n    data: zod_1.z.string(),\n    utime: zod_1.z.number(),\n    transaction_id: zod_1.z.object({\n        lt: zod_1.z.string(),\n        hash: zod_1.z.string()\n    }),\n    fee: zod_1.z.string(),\n    storage_fee: zod_1.z.string(),\n    other_fee: zod_1.z.string(),\n    in_msg: zod_1.z.union([zod_1.z.undefined(), message]),\n    out_msgs: zod_1.z.array(message)\n});\nconst getTransactions = zod_1.z.array(transaction);\nconst getMasterchain = zod_1.z.object({\n    state_root_hash: zod_1.z.string(),\n    last: blockIdExt,\n    init: blockIdExt\n});\nconst getShards = zod_1.z.object({\n    shards: zod_1.z.array(blockIdExt)\n});\nconst blockShortTxt = zod_1.z.object({\n    '@type': zod_1.z.literal('blocks.shortTxId'),\n    mode: zod_1.z.number(),\n    account: zod_1.z.string(),\n    lt: zod_1.z.string(),\n    hash: zod_1.z.string()\n});\nconst getBlockTransactions = zod_1.z.object({\n    id: blockIdExt,\n    req_count: zod_1.z.number(),\n    incomplete: zod_1.z.boolean(),\n    transactions: zod_1.z.array(blockShortTxt)\n});\nclass TypedCache {\n    constructor(namespace, cache, codec, keyEncoder) {\n        this.namespace = namespace;\n        this.cache = cache;\n        this.codec = codec;\n        this.keyEncoder = keyEncoder;\n    }\n    async get(key) {\n        let ex = await this.cache.get(this.namespace, this.keyEncoder(key));\n        if (ex) {\n            let decoded = this.codec.safeParse(JSON.parse(ex));\n            if (decoded.success) {\n                return decoded.data;\n            }\n        }\n        return null;\n    }\n    async set(key, value) {\n        if (value !== null) {\n            await this.cache.set(this.namespace, this.keyEncoder(key), JSON.stringify(value));\n        }\n        else {\n            await this.cache.set(this.namespace, this.keyEncoder(key), null);\n        }\n    }\n}\nclass HttpApi {\n    constructor(endpoint, parameters) {\n        this.endpoint = endpoint;\n        this.cache = new TonCache_1.InMemoryCache();\n        this.parameters = {\n            timeout: parameters?.timeout || 30000,\n            apiKey: parameters?.apiKey,\n            adapter: parameters?.adapter\n        };\n        // Shard\n        this.shardCache = new TypedCache('ton-shard', this.cache, zod_1.z.array(blockIdExt), (src) => src + '');\n        this.shardLoader = new dataloader_1.default(async (src) => {\n            return await Promise.all(src.map(async (v) => {\n                const cached = await this.shardCache.get(v);\n                if (cached) {\n                    return cached;\n                }\n                let loaded = (await this.doCall('shards', { seqno: v }, getShards)).shards;\n                await this.shardCache.set(v, loaded);\n                return loaded;\n            }));\n        });\n        // Shard Transactions\n        this.shardTransactionsCache = new TypedCache('ton-shard-tx', this.cache, getBlockTransactions, (src) => src.workchain + ':' + src.shard + ':' + src.seqno);\n        this.shardTransactionsLoader = new dataloader_1.default(async (src) => {\n            return await Promise.all(src.map(async (v) => {\n                const cached = await this.shardTransactionsCache.get(v);\n                if (cached) {\n                    return cached;\n                }\n                let loaded = await this.doCall('getBlockTransactions', { workchain: v.workchain, seqno: v.seqno, shard: v.shard }, getBlockTransactions);\n                await this.shardTransactionsCache.set(v, loaded);\n                return loaded;\n            }));\n        }, { cacheKeyFn: (src) => src.workchain + ':' + src.shard + ':' + src.seqno });\n    }\n    getAddressInformation(address) {\n        return this.doCall('getAddressInformation', { address: address.toString() }, addressInformation);\n    }\n    async getTransactions(address, opts) {\n        const inclusive = opts.inclusive;\n        delete opts.inclusive;\n        // Convert hash\n        let hash = undefined;\n        if (opts.hash) {\n            hash = Buffer.from(opts.hash, 'base64').toString('hex');\n        }\n        // Adjust limit\n        let limit = opts.limit;\n        if (opts.hash && opts.lt && inclusive !== true) {\n            limit++;\n        }\n        // Do request\n        let res = await this.doCall('getTransactions', { address: address.toString(), ...opts, limit, hash }, getTransactions);\n        if (res.length > limit) {\n            res = res.slice(0, limit);\n        }\n        // Adjust result\n        if (opts.hash && opts.lt && inclusive !== true) {\n            res.shift();\n            return res;\n        }\n        else {\n            return res;\n        }\n    }\n    async getMasterchainInfo() {\n        return await this.doCall('getMasterchainInfo', {}, getMasterchain);\n    }\n    async getShards(seqno) {\n        return await this.shardLoader.load(seqno);\n    }\n    async getBlockTransactions(workchain, seqno, shard) {\n        return await this.shardTransactionsLoader.load({ workchain, seqno, shard });\n    }\n    async getTransaction(address, lt, hash) {\n        let convHash = Buffer.from(hash, 'base64').toString('hex');\n        let res = await this.doCall('getTransactions', { address: address.toString(), lt, hash: convHash, limit: 1 }, getTransactions);\n        let ex = res.find((v) => v.transaction_id.lt === lt && v.transaction_id.hash === hash);\n        if (ex) {\n            return ex;\n        }\n        else {\n            return null;\n        }\n    }\n    async callGetMethod(address, method, stack) {\n        return await this.doCall('runGetMethod', { address: address.toString(), method, stack: serializeStack(stack) }, callGetMethod);\n    }\n    async sendBoc(body) {\n        await this.doCall('sendBoc', { boc: body.toString('base64') }, bocResponse);\n    }\n    async estimateFee(address, args) {\n        return await this.doCall('estimateFee', {\n            address: address.toString(),\n            body: args.body.toBoc().toString('base64'),\n            'init_data': args.initData ? args.initData.toBoc().toString('base64') : '',\n            'init_code': args.initCode ? args.initCode.toBoc().toString('base64') : '',\n            ignore_chksig: args.ignoreSignature\n        }, feeResponse);\n    }\n    async tryLocateResultTx(source, destination, created_lt) {\n        return await this.doCall('tryLocateResultTx', { source: source.toString(), destination: destination.toString(), created_lt }, transaction);\n    }\n    async tryLocateSourceTx(source, destination, created_lt) {\n        return await this.doCall('tryLocateSourceTx', { source: source.toString(), destination: destination.toString(), created_lt }, transaction);\n    }\n    async doCall(method, body, codec) {\n        let headers = {\n            'Content-Type': 'application/json',\n            'X-Ton-Client-Version': version,\n        };\n        if (this.parameters.apiKey) {\n            headers['X-API-Key'] = this.parameters.apiKey;\n        }\n        let res = await axios_1.default.post(this.endpoint, JSON.stringify({\n            id: '1',\n            jsonrpc: '2.0',\n            method: method,\n            params: body\n        }), {\n            headers,\n            timeout: this.parameters.timeout,\n            adapter: this.parameters.adapter\n        });\n        if (res.status !== 200 || !res.data.ok) {\n            throw Error('Received error: ' + JSON.stringify(res.data));\n        }\n        let decoded = codec.safeParse(res.data.result);\n        if (decoded.success) {\n            return decoded.data;\n        }\n        else {\n            throw Error('Malformed response: ' + decoded.error.format()._errors.join(', '));\n        }\n    }\n}\nexports.HttpApi = HttpApi;\nfunction serializeStack(src) {\n    let stack = [];\n    for (let s of src) {\n        if (s.type === 'int') {\n            stack.push(['num', s.value.toString()]);\n        }\n        else if (s.type === 'cell') {\n            stack.push(['tvm.Cell', s.cell.toBoc().toString('base64')]);\n        }\n        else if (s.type === 'slice') {\n            stack.push(['tvm.Slice', s.cell.toBoc().toString('base64')]);\n        }\n        else if (s.type === 'builder') {\n            stack.push(['tvm.Builder', s.cell.toBoc().toString('base64')]);\n        }\n        else {\n            throw Error('Unsupported stack item type: ' + s.type);\n        }\n    }\n    return stack;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}