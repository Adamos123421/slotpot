{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adams\\\\OneDrive\\\\Desktop\\\\Work\\\\slotpot\\\\src\\\\components\\\\RecentWinners.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { backendApi } from '../services/backendApi';\nimport './Leaderboard.css'; // Reuse the existing styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecentWinners = () => {\n  _s();\n  const [recentWinners, setRecentWinners] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // Generate avatar function (copied from Leaderboard)\n  const generateAvatar = (name, avatar = null, address = null) => {\n    if (avatar) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: avatar,\n        alt: name,\n        className: \"telegram-avatar-small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 14\n      }, this);\n    }\n    const fallbackSrc = address ? `https://robohash.org/${address}.png?size=50x50` : null;\n    if (fallbackSrc) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: fallbackSrc,\n        alt: name,\n        className: \"robohash-avatar-small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Color-based fallback\n    const colors = ['#8b5cf6', '#ef4444', '#f59e0b', '#10b981', '#3b82f6', '#ec4899'];\n    const colorIndex = name.length % colors.length;\n    const backgroundColor = colors[colorIndex];\n    const initial = name.charAt(0).toUpperCase();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-fallback-small\",\n      style: {\n        backgroundColor\n      },\n      children: initial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    let active = true;\n    async function loadRecentWinners() {\n      if (!active) return;\n      setLoading(true);\n      try {\n        const data = await backendApi.fetchJson('/api/stats/recent-games');\n        if (!active) return;\n        setRecentWinners((data || []).map((g, idx) => ({\n          id: idx,\n          round: g.roundNumber || 'N/A',\n          username: g.displayName || g.currentUsername || g.username || (g.winnerDisplay || '').replace(/\\.\\.\\./, '...') || 'Unknown',\n          avatar: g.avatar,\n          // Use cached avatar from backend\n          winAmount: g.prize ? `${g.prize.toFixed(3)} TON` : 'Unknown',\n          winnerAddress: g.winnerAddress // For fallback avatar generation\n        })));\n      } catch (error) {\n        console.error('Failed to load recent winners:', error);\n        if (active) setRecentWinners([]);\n      } finally {\n        if (active) setLoading(false);\n      }\n    }\n    loadRecentWinners();\n    const interval = setInterval(loadRecentWinners, 30000); // Update every 30 seconds\n\n    return () => {\n      active = false;\n      clearInterval(interval);\n    };\n  }, []);\n  if (loading && recentWinners.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recent-winners-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-title\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Recent Winners\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-state\",\n        children: \"Loading recent winners...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recent-winners-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-title\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\uD83C\\uDFC6 Recent Winners\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"winners-list\",\n      children: [recentWinners.slice(0, 5).map((winner, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"winner-rank\",\n          children: [\"#\", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"winner-avatar-small\",\n          children: generateAvatar(winner.username, winner.avatar, winner.winnerAddress)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"winner-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"winner-name-small\",\n            children: winner.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"winner-round\",\n            children: [\"Round #\", winner.round]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"winner-amount\",\n          children: winner.winAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, winner.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)), recentWinners.length === 0 && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-winners\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83C\\uDFAF No recent winners yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(RecentWinners, \"mbWWdCXUIW4oSv2c5frBgxq5EqA=\");\n_c = RecentWinners;\nexport default RecentWinners;\nvar _c;\n$RefreshReg$(_c, \"RecentWinners\");","map":{"version":3,"names":["React","useState","useEffect","backendApi","jsxDEV","_jsxDEV","RecentWinners","_s","recentWinners","setRecentWinners","loading","setLoading","generateAvatar","name","avatar","address","src","alt","className","fileName","_jsxFileName","lineNumber","columnNumber","fallbackSrc","colors","colorIndex","length","backgroundColor","initial","charAt","toUpperCase","style","children","active","loadRecentWinners","data","fetchJson","map","g","idx","id","round","roundNumber","username","displayName","currentUsername","winnerDisplay","replace","winAmount","prize","toFixed","winnerAddress","error","console","interval","setInterval","clearInterval","slice","winner","index","_c","$RefreshReg$"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/src/components/RecentWinners.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { backendApi } from '../services/backendApi';\r\nimport './Leaderboard.css'; // Reuse the existing styles\r\n\r\nconst RecentWinners = () => {\r\n  const [recentWinners, setRecentWinners] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Generate avatar function (copied from Leaderboard)\r\n  const generateAvatar = (name, avatar = null, address = null) => {\r\n    if (avatar) {\r\n      return <img src={avatar} alt={name} className=\"telegram-avatar-small\" />;\r\n    }\r\n\r\n    const fallbackSrc = address ? `https://robohash.org/${address}.png?size=50x50` : null;\r\n    if (fallbackSrc) {\r\n      return <img src={fallbackSrc} alt={name} className=\"robohash-avatar-small\" />;\r\n    }\r\n\r\n    // Color-based fallback\r\n    const colors = ['#8b5cf6', '#ef4444', '#f59e0b', '#10b981', '#3b82f6', '#ec4899'];\r\n    const colorIndex = name.length % colors.length;\r\n    const backgroundColor = colors[colorIndex];\r\n    const initial = name.charAt(0).toUpperCase();\r\n\r\n    return (\r\n      <div \r\n        className=\"avatar-fallback-small\"\r\n        style={{ backgroundColor }}\r\n      >\r\n        {initial}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    async function loadRecentWinners() {\r\n      if (!active) return;\r\n      setLoading(true);\r\n      try {\r\n        const data = await backendApi.fetchJson('/api/stats/recent-games');\r\n        if (!active) return;\r\n        \r\n        setRecentWinners(\r\n          (data || []).map((g, idx) => ({\r\n            id: idx,\r\n            round: g.roundNumber || 'N/A',\r\n            username: g.displayName || g.currentUsername || g.username || (g.winnerDisplay || '').replace(/\\.\\.\\./, '...') || 'Unknown',\r\n            avatar: g.avatar, // Use cached avatar from backend\r\n            winAmount: g.prize ? `${g.prize.toFixed(3)} TON` : 'Unknown',\r\n            winnerAddress: g.winnerAddress // For fallback avatar generation\r\n          }))\r\n        );\r\n      } catch (error) {\r\n        console.error('Failed to load recent winners:', error);\r\n        if (active) setRecentWinners([]);\r\n      } finally {\r\n        if (active) setLoading(false);\r\n      }\r\n    }\r\n\r\n    loadRecentWinners();\r\n    const interval = setInterval(loadRecentWinners, 30000); // Update every 30 seconds\r\n\r\n    return () => {\r\n      active = false;\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  if (loading && recentWinners.length === 0) {\r\n    return (\r\n      <div className=\"recent-winners-section\">\r\n        <div className=\"section-title\">\r\n          <span>Recent Winners</span>\r\n        </div>\r\n        <div className=\"loading-state\">Loading recent winners...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"recent-winners-section\">\r\n      <div className=\"section-title\">\r\n        <span>🏆 Recent Winners</span>\r\n      </div>\r\n      \r\n      <div className=\"winners-list\">\r\n        {recentWinners.slice(0, 5).map((winner, index) => (\r\n          <div key={winner.id} className=\"winner-item\">\r\n            <div className=\"winner-rank\">#{index + 1}</div>\r\n            <div className=\"winner-avatar-small\">\r\n              {generateAvatar(winner.username, winner.avatar, winner.winnerAddress)}\r\n            </div>\r\n            <div className=\"winner-details\">\r\n              <div className=\"winner-name-small\">{winner.username}</div>\r\n              <div className=\"winner-round\">Round #{winner.round}</div>\r\n            </div>\r\n            <div className=\"winner-amount\">\r\n              {winner.winAmount}\r\n            </div>\r\n          </div>\r\n        ))}\r\n        \r\n        {recentWinners.length === 0 && !loading && (\r\n          <div className=\"no-winners\">\r\n            <span>🎯 No recent winners yet</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecentWinners;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}