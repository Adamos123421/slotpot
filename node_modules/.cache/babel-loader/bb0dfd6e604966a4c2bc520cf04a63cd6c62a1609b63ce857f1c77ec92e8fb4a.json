{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adams\\\\OneDrive\\\\Desktop\\\\Work\\\\slotpot\\\\src\\\\components\\\\OptimizedCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './OptimizedCarousel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptimizedCarousel = ({\n  players,\n  isSpinning,\n  onSpinComplete,\n  contractWinner,\n  totalJackpotValue\n}) => {\n  _s();\n  const [wheelState, setWheelState] = useState('idle'); // 'idle', 'spinning', 'winner'\n  const [lockedPlayers, setLockedPlayers] = useState([]);\n  const wheelRef = useRef();\n  const currentPosition = useRef(0);\n\n  // Lock players when spinning starts\n  useEffect(() => {\n    if (isSpinning && contractWinner && players.length > 0) {\n      setLockedPlayers([...players]);\n      setWheelState('spinning');\n    }\n  }, [isSpinning, contractWinner, players]);\n\n  // Use locked players during animation\n  const effectivePlayers = wheelState === 'spinning' || wheelState === 'winner' ? lockedPlayers : players;\n\n  // Render player card with optimized structure\n  const renderPlayerCard = useCallback((player, index) => {\n    if (!player) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"roulette-card waiting\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"avatar-placeholder\",\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"player-name\",\n              children: \"Waiting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bet-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"coin-icon grayscale\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bet-amount\",\n                children: \"0.000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, `waiting-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    }\n    const amount = player.bet || player.amount || 0;\n    const isActive = amount > 0;\n    const avatar = player.avatar && player.avatar !== '❓' && player.avatar !== '👤' ? player.avatar : `https://robohash.org/${player.address || player.name}.png?size=100x100`;\n    const username = player.username || player.displayName || player.name || 'Player';\n    const bet = amount.toFixed(3);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `roulette-card ${isActive ? 'active' : 'inactive'}`,\n      \"data-player-id\": player.address || index,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatar,\n            alt: username,\n            className: \"player-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"player-name\",\n            children: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bet-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `coin-icon ${!isActive ? 'grayscale' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bet-amount\",\n              children: bet\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, `${player.address || index}-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }, []);\n\n  // Find winner position with optimized logic\n  const findWinnerPosition = useCallback(winner => {\n    if (!winner || !effectivePlayers.length) return -1;\n\n    // Try multiple matching strategies\n    for (let i = 0; i < effectivePlayers.length; i++) {\n      const player = effectivePlayers[i];\n      if (!player) continue;\n\n      // Direct address match\n      if (winner.winner && player.address === winner.winner) {\n        return i;\n      }\n\n      // Username match\n      if (winner.username && player.username === winner.username) {\n        return i;\n      }\n\n      // Display name match\n      if (winner.displayName && player.displayName === winner.displayName) {\n        return i;\n      }\n\n      // Winner name match\n      if (winner.winnerName && player.username === winner.winnerName) {\n        return i;\n      }\n    }\n    return -1;\n  }, [effectivePlayers]);\n\n  // Perform spin with CSS-based animation\n  const performSpin = useCallback(winnerPosition => {\n    if (!wheelRef.current || winnerPosition === -1) return;\n    const wheel = wheelRef.current;\n    const wheelWidth = wheel.offsetWidth;\n    const centerOffset = wheelWidth / 2;\n    const cardWidth = 166; // Fixed card width\n    const cardSpacing = 20; // Fixed spacing\n    const totalCardSpacing = cardWidth + cardSpacing;\n\n    // Calculate final position to center winner\n    const winnerOffset = winnerPosition * totalCardSpacing;\n    const cycleLength = effectivePlayers.length * totalCardSpacing;\n    const minimumSpinDistance = cycleLength * 3; // 3 full cycles minimum\n    const targetCycle = Math.ceil((Math.abs(currentPosition.current) + minimumSpinDistance) / cycleLength);\n    const finalWinnerPosition = targetCycle * cycleLength + winnerOffset;\n    const finalPosition = -(finalWinnerPosition + cardWidth / 2 - centerOffset - 20);\n\n    // Apply CSS animation classes\n    wheel.classList.add('spinning');\n    wheel.style.setProperty('--final-position', `${finalPosition}px`);\n    wheel.style.setProperty('--current-position', `${currentPosition.current}px`);\n\n    // Update position\n    currentPosition.current = finalPosition;\n\n    // Animation complete callback\n    setTimeout(() => {\n      setWheelState('winner');\n      wheel.classList.remove('spinning');\n      if (onSpinComplete) onSpinComplete();\n    }, 5000); // Match CSS animation duration\n  }, [effectivePlayers.length, onSpinComplete]);\n\n  // Start spin when contract winner is set\n  useEffect(() => {\n    if (isSpinning && contractWinner && effectivePlayers.length > 0) {\n      const winnerPosition = findWinnerPosition(contractWinner);\n      if (winnerPosition !== -1) {\n        performSpin(winnerPosition);\n      }\n    }\n  }, [isSpinning, contractWinner, effectivePlayers, findWinnerPosition, performSpin]);\n\n  // Reset wheel state when not spinning\n  useEffect(() => {\n    if (!isSpinning) {\n      setWheelState('idle');\n      setLockedPlayers([]);\n    }\n  }, [isSpinning]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"optimized-carousel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDFB0 Jackpot: \", (totalJackpotValue === null || totalJackpotValue === void 0 ? void 0 : totalJackpotValue.toFixed(3)) || '0.000', \" TON\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), contractWinner && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner-announcement\",\n        children: [\"Winner: \", contractWinner.username || contractWinner.displayName || contractWinner.winnerName || 'Unknown']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-viewport\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ref: wheelRef,\n        className: `roulette-wheel ${wheelState}`,\n        style: {\n          transform: `translate3d(${currentPosition.current}px, 0px, 0px)`,\n          willChange: wheelState === 'spinning' ? 'transform' : 'auto'\n        },\n        children: Array.from({\n          length: 50\n        }, (_, cycleIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"roulette-row\",\n          children: effectivePlayers.map((player, playerIndex) => renderPlayerCard(player, playerIndex))\n        }, `cycle-${cycleIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-indicator\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"indicator-arrow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(OptimizedCarousel, \"8Ohf9//+0JA6GzoLCyYxE1xUfEE=\");\n_c = OptimizedCarousel;\nexport default OptimizedCarousel;\nvar _c;\n$RefreshReg$(_c, \"OptimizedCarousel\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","jsxDEV","_jsxDEV","OptimizedCarousel","players","isSpinning","onSpinComplete","contractWinner","totalJackpotValue","_s","wheelState","setWheelState","lockedPlayers","setLockedPlayers","wheelRef","currentPosition","length","effectivePlayers","renderPlayerCard","player","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","amount","bet","isActive","avatar","address","name","username","displayName","toFixed","src","alt","findWinnerPosition","winner","i","winnerName","performSpin","winnerPosition","current","wheel","wheelWidth","offsetWidth","centerOffset","cardWidth","cardSpacing","totalCardSpacing","winnerOffset","cycleLength","minimumSpinDistance","targetCycle","Math","ceil","abs","finalWinnerPosition","finalPosition","classList","add","style","setProperty","setTimeout","remove","ref","transform","willChange","Array","from","_","cycleIndex","map","playerIndex","_c","$RefreshReg$"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/src/components/OptimizedCarousel.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport './OptimizedCarousel.css';\r\n\r\nconst OptimizedCarousel = ({ \r\n  players, \r\n  isSpinning, \r\n  onSpinComplete, \r\n  contractWinner,\r\n  totalJackpotValue \r\n}) => {\r\n  const [wheelState, setWheelState] = useState('idle'); // 'idle', 'spinning', 'winner'\r\n  const [lockedPlayers, setLockedPlayers] = useState([]);\r\n  const wheelRef = useRef();\r\n  const currentPosition = useRef(0);\r\n  \r\n  // Lock players when spinning starts\r\n  useEffect(() => {\r\n    if (isSpinning && contractWinner && players.length > 0) {\r\n      setLockedPlayers([...players]);\r\n      setWheelState('spinning');\r\n    }\r\n  }, [isSpinning, contractWinner, players]);\r\n  \r\n  // Use locked players during animation\r\n  const effectivePlayers = wheelState === 'spinning' || wheelState === 'winner' ? lockedPlayers : players;\r\n  \r\n  // Render player card with optimized structure\r\n  const renderPlayerCard = useCallback((player, index) => {\r\n    if (!player) {\r\n      return (\r\n        <div className=\"roulette-card waiting\" key={`waiting-${index}`}>\r\n          <div className=\"card-content\">\r\n            <div className=\"avatar-container\">\r\n              <div className=\"avatar-placeholder\">?</div>\r\n            </div>\r\n            <div className=\"player-info\">\r\n              <p className=\"player-name\">Waiting</p>\r\n              <div className=\"bet-info\">\r\n                <div className=\"coin-icon grayscale\"></div>\r\n                <span className=\"bet-amount\">0.000</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    const amount = player.bet || player.amount || 0;\r\n    const isActive = amount > 0;\r\n    const avatar = player.avatar && player.avatar !== '❓' && player.avatar !== '👤' ? \r\n      player.avatar : \r\n      `https://robohash.org/${player.address || player.name}.png?size=100x100`;\r\n    const username = player.username || player.displayName || player.name || 'Player';\r\n    const bet = amount.toFixed(3);\r\n    \r\n    return (\r\n      <div \r\n        className={`roulette-card ${isActive ? 'active' : 'inactive'}`} \r\n        key={`${player.address || index}-${index}`}\r\n        data-player-id={player.address || index}\r\n      >\r\n        <div className=\"card-content\">\r\n          <div className=\"avatar-container\">\r\n            <img src={avatar} alt={username} className=\"player-avatar\" />\r\n          </div>\r\n          <div className=\"player-info\">\r\n            <p className=\"player-name\">{username}</p>\r\n            <div className=\"bet-info\">\r\n              <div className={`coin-icon ${!isActive ? 'grayscale' : ''}`}></div>\r\n              <span className=\"bet-amount\">{bet}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }, []);\r\n\r\n  // Find winner position with optimized logic\r\n  const findWinnerPosition = useCallback((winner) => {\r\n    if (!winner || !effectivePlayers.length) return -1;\r\n    \r\n    // Try multiple matching strategies\r\n    for (let i = 0; i < effectivePlayers.length; i++) {\r\n      const player = effectivePlayers[i];\r\n      if (!player) continue;\r\n      \r\n      // Direct address match\r\n      if (winner.winner && player.address === winner.winner) {\r\n        return i;\r\n      }\r\n      \r\n      // Username match\r\n      if (winner.username && player.username === winner.username) {\r\n        return i;\r\n      }\r\n      \r\n      // Display name match\r\n      if (winner.displayName && player.displayName === winner.displayName) {\r\n        return i;\r\n      }\r\n      \r\n      // Winner name match\r\n      if (winner.winnerName && player.username === winner.winnerName) {\r\n        return i;\r\n      }\r\n    }\r\n    \r\n    return -1;\r\n  }, [effectivePlayers]);\r\n\r\n  // Perform spin with CSS-based animation\r\n  const performSpin = useCallback((winnerPosition) => {\r\n    if (!wheelRef.current || winnerPosition === -1) return;\r\n    \r\n    const wheel = wheelRef.current;\r\n    const wheelWidth = wheel.offsetWidth;\r\n    const centerOffset = wheelWidth / 2;\r\n    const cardWidth = 166; // Fixed card width\r\n    const cardSpacing = 20; // Fixed spacing\r\n    const totalCardSpacing = cardWidth + cardSpacing;\r\n    \r\n    // Calculate final position to center winner\r\n    const winnerOffset = winnerPosition * totalCardSpacing;\r\n    const cycleLength = effectivePlayers.length * totalCardSpacing;\r\n    const minimumSpinDistance = cycleLength * 3; // 3 full cycles minimum\r\n    const targetCycle = Math.ceil((Math.abs(currentPosition.current) + minimumSpinDistance) / cycleLength);\r\n    const finalWinnerPosition = (targetCycle * cycleLength) + winnerOffset;\r\n    const finalPosition = -(finalWinnerPosition + (cardWidth / 2) - centerOffset - 20);\r\n    \r\n    // Apply CSS animation classes\r\n    wheel.classList.add('spinning');\r\n    wheel.style.setProperty('--final-position', `${finalPosition}px`);\r\n    wheel.style.setProperty('--current-position', `${currentPosition.current}px`);\r\n    \r\n    // Update position\r\n    currentPosition.current = finalPosition;\r\n    \r\n    // Animation complete callback\r\n    setTimeout(() => {\r\n      setWheelState('winner');\r\n      wheel.classList.remove('spinning');\r\n      if (onSpinComplete) onSpinComplete();\r\n    }, 5000); // Match CSS animation duration\r\n    \r\n  }, [effectivePlayers.length, onSpinComplete]);\r\n\r\n  // Start spin when contract winner is set\r\n  useEffect(() => {\r\n    if (isSpinning && contractWinner && effectivePlayers.length > 0) {\r\n      const winnerPosition = findWinnerPosition(contractWinner);\r\n      if (winnerPosition !== -1) {\r\n        performSpin(winnerPosition);\r\n      }\r\n    }\r\n  }, [isSpinning, contractWinner, effectivePlayers, findWinnerPosition, performSpin]);\r\n\r\n  // Reset wheel state when not spinning\r\n  useEffect(() => {\r\n    if (!isSpinning) {\r\n      setWheelState('idle');\r\n      setLockedPlayers([]);\r\n    }\r\n  }, [isSpinning]);\r\n\r\n  return (\r\n    <div className=\"optimized-carousel-container\">\r\n      <div className=\"carousel-header\">\r\n        <h3>🎰 Jackpot: {totalJackpotValue?.toFixed(3) || '0.000'} TON</h3>\r\n        {contractWinner && (\r\n          <div className=\"winner-announcement\">\r\n            Winner: {contractWinner.username || contractWinner.displayName || contractWinner.winnerName || 'Unknown'}\r\n          </div>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"carousel-viewport\">\r\n        <div \r\n          ref={wheelRef}\r\n          className={`roulette-wheel ${wheelState}`}\r\n          style={{\r\n            transform: `translate3d(${currentPosition.current}px, 0px, 0px)`,\r\n            willChange: wheelState === 'spinning' ? 'transform' : 'auto'\r\n          }}\r\n        >\r\n          {/* Create multiple cycles for smooth infinite scroll */}\r\n          {Array.from({ length: 50 }, (_, cycleIndex) => (\r\n            <div key={`cycle-${cycleIndex}`} className=\"roulette-row\">\r\n              {effectivePlayers.map((player, playerIndex) => \r\n                renderPlayerCard(player, playerIndex)\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        {/* Center indicator */}\r\n        <div className=\"center-indicator\">\r\n          <div className=\"indicator-arrow\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptimizedCarousel;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}