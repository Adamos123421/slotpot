{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adams\\\\OneDrive\\\\Desktop\\\\Work\\\\slotpot\\\\src\\\\components\\\\SimpleCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay } from 'swiper/modules';\nimport 'swiper/css';\nimport './SimpleCarousel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleCarousel = ({\n  players,\n  winner,\n  isSpinning,\n  onWinnerLand\n}) => {\n  _s();\n  const swiperRef = useRef(null);\n  const [isCustomSpinning, setIsCustomSpinning] = useState(false);\n  const [spinSpeed, setSpinSpeed] = useState(50);\n  const [showingWinner, setShowingWinner] = useState(false);\n  const [lockedPosition, setLockedPosition] = useState(null);\n  const animationRef = useRef(null);\n  const targetIndexRef = useRef(null);\n  const spinPhaseRef = useRef('idle'); // 'idle', 'spinning', 'slowing', 'locked'\n  const winnerTimeoutRef = useRef(null);\n\n  // Handle swiper initialization\n  const handleSwiperInit = swiper => {\n    swiperRef.current = swiper;\n  };\n\n  // COMPLETELY LOCK CAROUSEL AT SPECIFIC POSITION\n  const lockCarouselAtPosition = useCallback(targetIndex => {\n    if (!swiperRef.current) return;\n    console.log('🔒 LOCKING carousel at winner position:', targetIndex);\n\n    // Calculate the exact position for the winner to be centered\n    const slideWidth = 120; // Width of each slide + gap\n    const containerWidth = swiperRef.current.el.clientWidth;\n    const centerOffset = containerWidth / 2 - slideWidth / 2;\n\n    // Calculate position to center the winner slide\n    const targetPosition = -(targetIndex * slideWidth) + centerOffset;\n\n    // FORCE STOP ALL SWIPER FUNCTIONALITY\n    if (swiperRef.current.autoplay) {\n      swiperRef.current.autoplay.stop();\n      swiperRef.current.autoplay.pause();\n      swiperRef.current.autoplay.running = false;\n    }\n\n    // Disable all Swiper interactions\n    swiperRef.current.allowSlideNext = false;\n    swiperRef.current.allowSlidePrev = false;\n    swiperRef.current.allowTouchMove = false;\n\n    // Get the wrapper element and FORCE position\n    const wrapper = swiperRef.current.wrapperEl;\n    if (wrapper) {\n      // Remove all CSS classes that might interfere\n      wrapper.style.transition = 'none';\n      wrapper.style.transitionDuration = '0ms';\n      wrapper.style.transitionDelay = '0ms';\n      wrapper.style.animation = 'none';\n\n      // FORCE the exact position\n      wrapper.style.transform = `translate3d(${targetPosition}px, 0px, 0px)`;\n\n      // Lock it in place by setting position as important\n      wrapper.style.setProperty('transform', `translate3d(${targetPosition}px, 0px, 0px)`, 'important');\n      wrapper.style.setProperty('transition', 'none', 'important');\n    }\n\n    // Disable all slide transitions\n    const slides = swiperRef.current.slides;\n    if (slides) {\n      slides.forEach(slide => {\n        slide.style.transition = 'none';\n        slide.style.transitionDuration = '0ms';\n      });\n    }\n\n    // Set locked state\n    setLockedPosition(targetPosition);\n    setShowingWinner(true);\n    spinPhaseRef.current = 'locked';\n    console.log('🏆 Carousel LOCKED at position:', targetPosition);\n\n    // Trigger winner callback\n    setTimeout(() => {\n      onWinnerLand === null || onWinnerLand === void 0 ? void 0 : onWinnerLand();\n    }, 500);\n\n    // Keep locked for 8 seconds\n    winnerTimeoutRef.current = setTimeout(() => {\n      unlockCarousel();\n    }, 8000);\n  }, [onWinnerLand]);\n\n  // UNLOCK CAROUSEL AND RESUME NORMAL OPERATION\n  const unlockCarousel = useCallback(() => {\n    if (!swiperRef.current) return;\n    console.log('🔓 UNLOCKING carousel - resuming normal operation');\n\n    // Re-enable Swiper functionality\n    swiperRef.current.allowSlideNext = true;\n    swiperRef.current.allowSlidePrev = true;\n    swiperRef.current.allowTouchMove = false; // Keep touch disabled\n\n    // Reset wrapper styles\n    const wrapper = swiperRef.current.wrapperEl;\n    if (wrapper) {\n      wrapper.style.transition = '';\n      wrapper.style.transitionDuration = '';\n      wrapper.style.transitionDelay = '';\n      wrapper.style.animation = '';\n      wrapper.style.removeProperty('transform');\n    }\n\n    // Reset slide styles\n    const slides = swiperRef.current.slides;\n    if (slides) {\n      slides.forEach(slide => {\n        slide.style.transition = '';\n        slide.style.transitionDuration = '';\n      });\n    }\n\n    // Reset states\n    setLockedPosition(null);\n    setShowingWinner(false);\n    spinPhaseRef.current = 'idle';\n\n    // Resume autoplay if no winner\n    if (!winner && swiperRef.current.autoplay) {\n      swiperRef.current.autoplay.running = true;\n      swiperRef.current.autoplay.start();\n    }\n  }, [winner]);\n\n  // Natural casino-style spin animation\n  const startCasinoSpin = useCallback(() => {\n    if (!swiperRef.current || isCustomSpinning) return;\n    console.log('🎰 Starting casino-style spin animation');\n    setIsCustomSpinning(true);\n    setShowingWinner(false);\n    setLockedPosition(null);\n    spinPhaseRef.current = 'spinning';\n\n    // Stop any existing autoplay\n    if (swiperRef.current.autoplay) {\n      swiperRef.current.autoplay.stop();\n    }\n\n    // Start fast spinning\n    let currentSpeed = 20; // Start very fast\n    setSpinSpeed(currentSpeed);\n    const spinInterval = setInterval(() => {\n      if (swiperRef.current && spinPhaseRef.current === 'spinning') {\n        // Move to next slide\n        swiperRef.current.slideNext(currentSpeed);\n      }\n    }, currentSpeed);\n\n    // Save interval reference for cleanup\n    animationRef.current = spinInterval;\n    return spinInterval;\n  }, [isCustomSpinning]);\n\n  // Natural deceleration to winner - ends with LOCK instead of slideTo\n  const startSlowDownToWinner = useCallback(winnerIndex => {\n    if (!swiperRef.current || spinPhaseRef.current !== 'spinning') return;\n    console.log('🎯 Starting slow-down to winner at index:', winnerIndex);\n    spinPhaseRef.current = 'slowing';\n\n    // Clear fast spinning\n    if (animationRef.current) {\n      clearInterval(animationRef.current);\n    }\n\n    // Start deceleration animation\n    let speed = 50; // Start medium speed\n    let slideCount = 0;\n    const maxSlides = 20; // Maximum slides before forcing stop\n\n    const decelerateInterval = setInterval(() => {\n      if (!swiperRef.current) {\n        clearInterval(decelerateInterval);\n        return;\n      }\n      slideCount++;\n\n      // Move to next slide\n      swiperRef.current.slideNext(speed);\n\n      // Check if we should stop (after enough deceleration)\n      if (slideCount >= maxSlides || speed > 1000) {\n        clearInterval(decelerateInterval);\n\n        // LOCK at winner position instead of using slideTo\n        setTimeout(() => {\n          setIsCustomSpinning(false);\n          lockCarouselAtPosition(winnerIndex);\n        }, 500);\n      } else {\n        // Gradually slow down\n        speed = Math.min(speed * 1.15, 1200); // Faster deceleration\n        setSpinSpeed(speed);\n      }\n    }, speed);\n    animationRef.current = decelerateInterval;\n  }, [lockCarouselAtPosition]);\n\n  // Handle winner announcement with realistic spin\n  useEffect(() => {\n    if (winner && swiperRef.current && players && !isCustomSpinning && !showingWinner) {\n      const winnerIndex = players.findIndex(p => p && (p.address === winner.address || p.username === winner.username || p.address === winner.winner || p.address === winner.fullAddress || p.username === winner.displayName));\n      if (winnerIndex !== -1) {\n        targetIndexRef.current = winnerIndex;\n        console.log('🏆 Winner found at index:', winnerIndex, 'Starting casino spin...');\n\n        // Clear any existing winner timeout\n        if (winnerTimeoutRef.current) {\n          clearTimeout(winnerTimeoutRef.current);\n        }\n\n        // Start spinning, then slow down to winner\n        startCasinoSpin();\n        setTimeout(() => {\n          startSlowDownToWinner(winnerIndex);\n        }, 2500); // Spin for 2.5 seconds before starting to slow down\n      }\n    }\n  }, [winner, players, isCustomSpinning, showingWinner, startCasinoSpin, startSlowDownToWinner]);\n\n  // Handle regular spinning state (not winner selection)\n  useEffect(() => {\n    // Don't do anything if locked or showing winner\n    if (showingWinner || spinPhaseRef.current === 'locked') {\n      return;\n    }\n    if (isSpinning && !winner && !isCustomSpinning && !showingWinner) {\n      // Regular fast spinning while waiting for winner\n      if (swiperRef.current && swiperRef.current.autoplay) {\n        swiperRef.current.autoplay.start();\n      }\n    } else if (!isSpinning && !winner && !isCustomSpinning && !showingWinner && spinPhaseRef.current === 'idle') {\n      // Normal slow movement when not spinning and not showing winner\n      if (swiperRef.current && swiperRef.current.autoplay) {\n        swiperRef.current.autoplay.start();\n      }\n    }\n  }, [isSpinning, winner, isCustomSpinning, showingWinner]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (animationRef.current) {\n        clearInterval(animationRef.current);\n      }\n      if (winnerTimeoutRef.current) {\n        clearTimeout(winnerTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Prevent autoplay restart during locked state\n  useEffect(() => {\n    if (showingWinner || spinPhaseRef.current === 'locked') {\n      // Force stop during locked state\n      if (swiperRef.current && swiperRef.current.autoplay) {\n        swiperRef.current.autoplay.stop();\n        swiperRef.current.autoplay.running = false;\n      }\n      return;\n    }\n\n    // Only restart normal autoplay if we're in idle state\n    if (!winner && !isCustomSpinning && spinPhaseRef.current === 'idle' && swiperRef.current && swiperRef.current.autoplay) {\n      swiperRef.current.autoplay.running = true;\n      swiperRef.current.autoplay.start();\n    }\n  }, [players.length, isCustomSpinning, showingWinner, winner]);\n\n  // Reset states when winner prop is cleared (new round)\n  useEffect(() => {\n    if (!winner && showingWinner) {\n      console.log('🔄 Winner cleared - resetting carousel states');\n      unlockCarousel();\n    }\n  }, [winner, showingWinner, unlockCarousel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `simple-carousel-container ${showingWinner ? 'winner-showing' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `carousel-arrow ${isCustomSpinning && spinPhaseRef.current === 'slowing' ? 'winner-approaching' : spinPhaseRef.current === 'locked' || showingWinner ? 'winner-landed' : ''}`,\n      children: \"\\u2B07\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n      ref: swiperRef,\n      modules: [Autoplay],\n      spaceBetween: 10,\n      slidesPerView: \"auto\",\n      centeredSlides: true,\n      loop: true,\n      loopedSlides: players.length * 6,\n      autoplay: showingWinner || spinPhaseRef.current === 'locked' ? false : {\n        delay: isSpinning && !isCustomSpinning && !showingWinner ? 15 : 400,\n        disableOnInteraction: false,\n        pauseOnMouseEnter: false\n      },\n      speed: isCustomSpinning ? spinSpeed : isSpinning && !showingWinner ? 30 : 300,\n      className: `player-swiper ${(isSpinning || isCustomSpinning) && !showingWinner ? 'spinning' : ''} ${showingWinner ? 'winner-display' : ''}`,\n      allowTouchMove: false,\n      onSwiper: handleSwiperInit,\n      children: [...Array(6)].map((_, setIndex) => players.map((player, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        className: \"player-slide\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `player-card ${winner && player && (player.address === winner.address || player.username === winner.username || player.address === winner.winner || player.address === winner.fullAddress || player.username === winner.displayName) ? 'winner' : player ? 'active' : 'waiting'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-avatar\",\n            children: player ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-avatar-content\",\n              children: player.username ? player.username[0].toUpperCase() : '?'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"waiting-icon\",\n              children: \"\\u2753\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-name\",\n              children: player ? player.username || player.displayName || 'Player' : 'Waiting'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-bet\",\n              children: player ? `${(player.amount || 0).toFixed(2)} TON` : '0.00 TON'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 19\n            }, this), winner && player && (player.address === winner.address || player.username === winner.username || player.address === winner.winner || player.address === winner.fullAddress || player.username === winner.displayName) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"winner-prize\",\n              children: [\"Won \", parseFloat(winner.prize || 0).toFixed(3), \" TON\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this), winner && player && (player.address === winner.address || player.username === winner.username || player.address === winner.winner || player.address === winner.fullAddress || player.username === winner.displayName) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"winner-crown\",\n            children: \"\\uD83D\\uDC51\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 15\n        }, this)\n      }, `${setIndex}-${(player === null || player === void 0 ? void 0 : player.address) || `waiting-${index}`}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleCarousel, \"nkgUlth1mREv9CcHBZy3npH9APM=\");\n_c = SimpleCarousel;\nexport default SimpleCarousel;\nvar _c;\n$RefreshReg$(_c, \"SimpleCarousel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","Swiper","SwiperSlide","Autoplay","jsxDEV","_jsxDEV","SimpleCarousel","players","winner","isSpinning","onWinnerLand","_s","swiperRef","isCustomSpinning","setIsCustomSpinning","spinSpeed","setSpinSpeed","showingWinner","setShowingWinner","lockedPosition","setLockedPosition","animationRef","targetIndexRef","spinPhaseRef","winnerTimeoutRef","handleSwiperInit","swiper","current","lockCarouselAtPosition","targetIndex","console","log","slideWidth","containerWidth","el","clientWidth","centerOffset","targetPosition","autoplay","stop","pause","running","allowSlideNext","allowSlidePrev","allowTouchMove","wrapper","wrapperEl","style","transition","transitionDuration","transitionDelay","animation","transform","setProperty","slides","forEach","slide","setTimeout","unlockCarousel","removeProperty","start","startCasinoSpin","currentSpeed","spinInterval","setInterval","slideNext","startSlowDownToWinner","winnerIndex","clearInterval","speed","slideCount","maxSlides","decelerateInterval","Math","min","findIndex","p","address","username","fullAddress","displayName","clearTimeout","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","modules","spaceBetween","slidesPerView","centeredSlides","loop","loopedSlides","delay","disableOnInteraction","pauseOnMouseEnter","onSwiper","Array","map","_","setIndex","player","index","toUpperCase","amount","toFixed","parseFloat","prize","_c","$RefreshReg$"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/src/components/SimpleCarousel.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay } from 'swiper/modules';\nimport 'swiper/css';\nimport './SimpleCarousel.css';\n\nconst SimpleCarousel = ({ \n  players, \n  winner, \n  isSpinning, \n  onWinnerLand \n}) => {\n  const swiperRef = useRef(null);\n  const [isCustomSpinning, setIsCustomSpinning] = useState(false);\n  const [spinSpeed, setSpinSpeed] = useState(50);\n  const [showingWinner, setShowingWinner] = useState(false);\n  const [lockedPosition, setLockedPosition] = useState(null);\n  const animationRef = useRef(null);\n  const targetIndexRef = useRef(null);\n  const spinPhaseRef = useRef('idle'); // 'idle', 'spinning', 'slowing', 'locked'\n  const winnerTimeoutRef = useRef(null);\n\n  // Handle swiper initialization\n  const handleSwiperInit = (swiper) => {\n    swiperRef.current = swiper;\n  };\n\n  // COMPLETELY LOCK CAROUSEL AT SPECIFIC POSITION\n  const lockCarouselAtPosition = useCallback((targetIndex) => {\n    if (!swiperRef.current) return;\n    \n    console.log('🔒 LOCKING carousel at winner position:', targetIndex);\n    \n    // Calculate the exact position for the winner to be centered\n    const slideWidth = 120; // Width of each slide + gap\n    const containerWidth = swiperRef.current.el.clientWidth;\n    const centerOffset = containerWidth / 2 - slideWidth / 2;\n    \n    // Calculate position to center the winner slide\n    const targetPosition = -(targetIndex * slideWidth) + centerOffset;\n    \n    // FORCE STOP ALL SWIPER FUNCTIONALITY\n    if (swiperRef.current.autoplay) {\n      swiperRef.current.autoplay.stop();\n      swiperRef.current.autoplay.pause();\n      swiperRef.current.autoplay.running = false;\n    }\n    \n    // Disable all Swiper interactions\n    swiperRef.current.allowSlideNext = false;\n    swiperRef.current.allowSlidePrev = false;\n    swiperRef.current.allowTouchMove = false;\n    \n    // Get the wrapper element and FORCE position\n    const wrapper = swiperRef.current.wrapperEl;\n    if (wrapper) {\n      // Remove all CSS classes that might interfere\n      wrapper.style.transition = 'none';\n      wrapper.style.transitionDuration = '0ms';\n      wrapper.style.transitionDelay = '0ms';\n      wrapper.style.animation = 'none';\n      \n      // FORCE the exact position\n      wrapper.style.transform = `translate3d(${targetPosition}px, 0px, 0px)`;\n      \n      // Lock it in place by setting position as important\n      wrapper.style.setProperty('transform', `translate3d(${targetPosition}px, 0px, 0px)`, 'important');\n      wrapper.style.setProperty('transition', 'none', 'important');\n    }\n    \n    // Disable all slide transitions\n    const slides = swiperRef.current.slides;\n    if (slides) {\n      slides.forEach(slide => {\n        slide.style.transition = 'none';\n        slide.style.transitionDuration = '0ms';\n      });\n    }\n    \n    // Set locked state\n    setLockedPosition(targetPosition);\n    setShowingWinner(true);\n    spinPhaseRef.current = 'locked';\n    \n    console.log('🏆 Carousel LOCKED at position:', targetPosition);\n    \n    // Trigger winner callback\n    setTimeout(() => {\n      onWinnerLand?.();\n    }, 500);\n    \n    // Keep locked for 8 seconds\n    winnerTimeoutRef.current = setTimeout(() => {\n      unlockCarousel();\n    }, 8000);\n    \n  }, [onWinnerLand]);\n\n  // UNLOCK CAROUSEL AND RESUME NORMAL OPERATION\n  const unlockCarousel = useCallback(() => {\n    if (!swiperRef.current) return;\n    \n    console.log('🔓 UNLOCKING carousel - resuming normal operation');\n    \n    // Re-enable Swiper functionality\n    swiperRef.current.allowSlideNext = true;\n    swiperRef.current.allowSlidePrev = true;\n    swiperRef.current.allowTouchMove = false; // Keep touch disabled\n    \n    // Reset wrapper styles\n    const wrapper = swiperRef.current.wrapperEl;\n    if (wrapper) {\n      wrapper.style.transition = '';\n      wrapper.style.transitionDuration = '';\n      wrapper.style.transitionDelay = '';\n      wrapper.style.animation = '';\n      wrapper.style.removeProperty('transform');\n    }\n    \n    // Reset slide styles\n    const slides = swiperRef.current.slides;\n    if (slides) {\n      slides.forEach(slide => {\n        slide.style.transition = '';\n        slide.style.transitionDuration = '';\n      });\n    }\n    \n    // Reset states\n    setLockedPosition(null);\n    setShowingWinner(false);\n    spinPhaseRef.current = 'idle';\n    \n    // Resume autoplay if no winner\n    if (!winner && swiperRef.current.autoplay) {\n      swiperRef.current.autoplay.running = true;\n      swiperRef.current.autoplay.start();\n    }\n  }, [winner]);\n\n  // Natural casino-style spin animation\n  const startCasinoSpin = useCallback(() => {\n    if (!swiperRef.current || isCustomSpinning) return;\n    \n    console.log('🎰 Starting casino-style spin animation');\n    setIsCustomSpinning(true);\n    setShowingWinner(false);\n    setLockedPosition(null);\n    spinPhaseRef.current = 'spinning';\n    \n    // Stop any existing autoplay\n    if (swiperRef.current.autoplay) {\n      swiperRef.current.autoplay.stop();\n    }\n    \n    // Start fast spinning\n    let currentSpeed = 20; // Start very fast\n    setSpinSpeed(currentSpeed);\n    \n    const spinInterval = setInterval(() => {\n      if (swiperRef.current && spinPhaseRef.current === 'spinning') {\n        // Move to next slide\n        swiperRef.current.slideNext(currentSpeed);\n      }\n    }, currentSpeed);\n    \n    // Save interval reference for cleanup\n    animationRef.current = spinInterval;\n    \n    return spinInterval;\n  }, [isCustomSpinning]);\n\n  // Natural deceleration to winner - ends with LOCK instead of slideTo\n  const startSlowDownToWinner = useCallback((winnerIndex) => {\n    if (!swiperRef.current || spinPhaseRef.current !== 'spinning') return;\n    \n    console.log('🎯 Starting slow-down to winner at index:', winnerIndex);\n    spinPhaseRef.current = 'slowing';\n    \n    // Clear fast spinning\n    if (animationRef.current) {\n      clearInterval(animationRef.current);\n    }\n    \n    // Start deceleration animation\n    let speed = 50; // Start medium speed\n    let slideCount = 0;\n    const maxSlides = 20; // Maximum slides before forcing stop\n    \n    const decelerateInterval = setInterval(() => {\n      if (!swiperRef.current) {\n        clearInterval(decelerateInterval);\n        return;\n      }\n      \n      slideCount++;\n      \n      // Move to next slide\n      swiperRef.current.slideNext(speed);\n      \n      // Check if we should stop (after enough deceleration)\n      if (slideCount >= maxSlides || speed > 1000) {\n        clearInterval(decelerateInterval);\n        \n        // LOCK at winner position instead of using slideTo\n        setTimeout(() => {\n          setIsCustomSpinning(false);\n          lockCarouselAtPosition(winnerIndex);\n        }, 500);\n      } else {\n        // Gradually slow down\n        speed = Math.min(speed * 1.15, 1200); // Faster deceleration\n        setSpinSpeed(speed);\n      }\n    }, speed);\n    \n    animationRef.current = decelerateInterval;\n  }, [lockCarouselAtPosition]);\n\n  // Handle winner announcement with realistic spin\n  useEffect(() => {\n    if (winner && swiperRef.current && players && !isCustomSpinning && !showingWinner) {\n      const winnerIndex = players.findIndex(p => \n        p && (\n          p.address === winner.address || \n          p.username === winner.username ||\n          p.address === winner.winner ||\n          p.address === winner.fullAddress ||\n          p.username === winner.displayName\n        )\n      );\n      \n      if (winnerIndex !== -1) {\n        targetIndexRef.current = winnerIndex;\n        console.log('🏆 Winner found at index:', winnerIndex, 'Starting casino spin...');\n        \n        // Clear any existing winner timeout\n        if (winnerTimeoutRef.current) {\n          clearTimeout(winnerTimeoutRef.current);\n        }\n        \n        // Start spinning, then slow down to winner\n        startCasinoSpin();\n        \n        setTimeout(() => {\n          startSlowDownToWinner(winnerIndex);\n        }, 2500); // Spin for 2.5 seconds before starting to slow down\n      }\n    }\n  }, [winner, players, isCustomSpinning, showingWinner, startCasinoSpin, startSlowDownToWinner]);\n\n  // Handle regular spinning state (not winner selection)\n  useEffect(() => {\n    // Don't do anything if locked or showing winner\n    if (showingWinner || spinPhaseRef.current === 'locked') {\n      return;\n    }\n\n    if (isSpinning && !winner && !isCustomSpinning && !showingWinner) {\n      // Regular fast spinning while waiting for winner\n      if (swiperRef.current && swiperRef.current.autoplay) {\n        swiperRef.current.autoplay.start();\n      }\n    } else if (!isSpinning && !winner && !isCustomSpinning && !showingWinner && spinPhaseRef.current === 'idle') {\n      // Normal slow movement when not spinning and not showing winner\n      if (swiperRef.current && swiperRef.current.autoplay) {\n        swiperRef.current.autoplay.start();\n      }\n    }\n  }, [isSpinning, winner, isCustomSpinning, showingWinner]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (animationRef.current) {\n        clearInterval(animationRef.current);\n      }\n      if (winnerTimeoutRef.current) {\n        clearTimeout(winnerTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  // Prevent autoplay restart during locked state\n  useEffect(() => {\n    if (showingWinner || spinPhaseRef.current === 'locked') {\n      // Force stop during locked state\n      if (swiperRef.current && swiperRef.current.autoplay) {\n        swiperRef.current.autoplay.stop();\n        swiperRef.current.autoplay.running = false;\n      }\n      return;\n    }\n    \n    // Only restart normal autoplay if we're in idle state\n    if (!winner && !isCustomSpinning && spinPhaseRef.current === 'idle' && swiperRef.current && swiperRef.current.autoplay) {\n      swiperRef.current.autoplay.running = true;\n      swiperRef.current.autoplay.start();\n    }\n  }, [players.length, isCustomSpinning, showingWinner, winner]);\n\n  // Reset states when winner prop is cleared (new round)\n  useEffect(() => {\n    if (!winner && showingWinner) {\n      console.log('🔄 Winner cleared - resetting carousel states');\n      unlockCarousel();\n    }\n  }, [winner, showingWinner, unlockCarousel]);\n\n  return (\n    <div className={`simple-carousel-container ${showingWinner ? 'winner-showing' : ''}`}>\n      {/* Target Arrow */}\n      <div className={`carousel-arrow ${\n        isCustomSpinning && spinPhaseRef.current === 'slowing' ? 'winner-approaching' : \n        spinPhaseRef.current === 'locked' || showingWinner ? 'winner-landed' : ''\n      }`}>⬇️</div>\n      \n      <Swiper\n        ref={swiperRef}\n        modules={[Autoplay]}\n        spaceBetween={10}\n        slidesPerView=\"auto\"\n        centeredSlides={true}\n        loop={true}\n        loopedSlides={players.length * 6}\n        autoplay={showingWinner || spinPhaseRef.current === 'locked' ? false : {\n          delay: isSpinning && !isCustomSpinning && !showingWinner ? 15 : 400,\n          disableOnInteraction: false,\n          pauseOnMouseEnter: false,\n        }}\n        speed={isCustomSpinning ? spinSpeed : (isSpinning && !showingWinner ? 30 : 300)}\n        className={`player-swiper ${(isSpinning || isCustomSpinning) && !showingWinner ? 'spinning' : ''} ${showingWinner ? 'winner-display' : ''}`}\n        allowTouchMove={false}\n        onSwiper={handleSwiperInit}\n      >\n        {/* Create 6 sets for much smoother infinite scroll */}\n        {[...Array(6)].map((_, setIndex) => \n          players.map((player, index) => (\n            <SwiperSlide key={`${setIndex}-${player?.address || `waiting-${index}`}`} className=\"player-slide\">\n              <div className={`player-card ${\n                winner && player && (\n                  player.address === winner.address || \n                  player.username === winner.username ||\n                  player.address === winner.winner ||\n                  player.address === winner.fullAddress ||\n                  player.username === winner.displayName\n                ) ? 'winner' : player ? 'active' : 'waiting'\n              }`}>\n                <div className=\"player-avatar\">\n                  {player ? (\n                    <div className=\"player-avatar-content\">\n                      {player.username ? player.username[0].toUpperCase() : '?'}\n                    </div>\n                  ) : (\n                    <div className=\"waiting-icon\">❓</div>\n                  )}\n                </div>\n                <div className=\"player-info\">\n                  <div className=\"player-name\">\n                    {player ? (player.username || player.displayName || 'Player') : 'Waiting'}\n                  </div>\n                  <div className=\"player-bet\">\n                    {player ? `${(player.amount || 0).toFixed(2)} TON` : '0.00 TON'}\n                  </div>\n                  {winner && player && (\n                    player.address === winner.address || \n                    player.username === winner.username ||\n                    player.address === winner.winner ||\n                    player.address === winner.fullAddress ||\n                    player.username === winner.displayName\n                  ) && (\n                    <div className=\"winner-prize\">\n                      Won {parseFloat(winner.prize || 0).toFixed(3)} TON\n                    </div>\n                  )}\n                </div>\n                {winner && player && (\n                  player.address === winner.address || \n                  player.username === winner.username ||\n                  player.address === winner.winner ||\n                  player.address === winner.fullAddress ||\n                  player.username === winner.displayName\n                ) && (\n                  <div className=\"winner-crown\">👑</div>\n                )}\n              </div>\n            </SwiperSlide>\n          ))\n        )}\n      </Swiper>\n    </div>\n  );\n};\n\nexport default SimpleCarousel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}