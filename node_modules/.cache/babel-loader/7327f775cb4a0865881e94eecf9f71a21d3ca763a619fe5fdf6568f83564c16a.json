{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.storeStateInit = exports.loadStateInit = void 0;\nconst Dictionary_1 = require(\"../dict/Dictionary\");\nconst SimpleLibrary_1 = require(\"./SimpleLibrary\");\nconst TickTock_1 = require(\"./TickTock\");\n;\nfunction loadStateInit(slice) {\n  // Split Depth\n  let splitDepth;\n  if (slice.loadBit()) {\n    splitDepth = slice.loadUint(5);\n  }\n  // TickTock\n  let special;\n  if (slice.loadBit()) {\n    special = (0, TickTock_1.loadTickTock)(slice);\n  }\n  // Code and Data\n  let code = slice.loadMaybeRef();\n  let data = slice.loadMaybeRef();\n  // Libs\n  let libraries = slice.loadDict(Dictionary_1.Dictionary.Keys.BigUint(256), SimpleLibrary_1.SimpleLibraryValue);\n  if (libraries.size === 0) {\n    libraries = undefined;\n  }\n  return {\n    splitDepth,\n    special,\n    code,\n    data,\n    libraries\n  };\n}\nexports.loadStateInit = loadStateInit;\nfunction storeStateInit(src) {\n  return builder => {\n    if (src.splitDepth !== null && src.splitDepth !== undefined) {\n      builder.storeBit(true);\n      builder.storeUint(src.splitDepth, 5);\n    } else {\n      builder.storeBit(false);\n    }\n    if (src.special !== null && src.special !== undefined) {\n      builder.storeBit(true);\n      builder.store((0, TickTock_1.storeTickTock)(src.special));\n    } else {\n      builder.storeBit(false);\n    }\n    builder.storeMaybeRef(src.code);\n    builder.storeMaybeRef(src.data);\n    builder.storeDict(src.libraries);\n  };\n}\nexports.storeStateInit = storeStateInit;","map":{"version":3,"names":["Object","defineProperty","exports","value","storeStateInit","loadStateInit","Dictionary_1","require","SimpleLibrary_1","TickTock_1","slice","splitDepth","loadBit","loadUint","special","loadTickTock","code","loadMaybeRef","data","libraries","loadDict","Dictionary","Keys","BigUint","SimpleLibraryValue","size","undefined","src","builder","storeBit","storeUint","store","storeTickTock","storeMaybeRef","storeDict"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/node_modules/@ton/core/dist/types/StateInit.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeStateInit = exports.loadStateInit = void 0;\nconst Dictionary_1 = require(\"../dict/Dictionary\");\nconst SimpleLibrary_1 = require(\"./SimpleLibrary\");\nconst TickTock_1 = require(\"./TickTock\");\n;\nfunction loadStateInit(slice) {\n    // Split Depth\n    let splitDepth;\n    if (slice.loadBit()) {\n        splitDepth = slice.loadUint(5);\n    }\n    // TickTock\n    let special;\n    if (slice.loadBit()) {\n        special = (0, TickTock_1.loadTickTock)(slice);\n    }\n    // Code and Data\n    let code = slice.loadMaybeRef();\n    let data = slice.loadMaybeRef();\n    // Libs\n    let libraries = slice.loadDict(Dictionary_1.Dictionary.Keys.BigUint(256), SimpleLibrary_1.SimpleLibraryValue);\n    if (libraries.size === 0) {\n        libraries = undefined;\n    }\n    return {\n        splitDepth,\n        special,\n        code,\n        data,\n        libraries\n    };\n}\nexports.loadStateInit = loadStateInit;\nfunction storeStateInit(src) {\n    return (builder) => {\n        if (src.splitDepth !== null && src.splitDepth !== undefined) {\n            builder.storeBit(true);\n            builder.storeUint(src.splitDepth, 5);\n        }\n        else {\n            builder.storeBit(false);\n        }\n        if (src.special !== null && src.special !== undefined) {\n            builder.storeBit(true);\n            builder.store((0, TickTock_1.storeTickTock)(src.special));\n        }\n        else {\n            builder.storeBit(false);\n        }\n        builder.storeMaybeRef(src.code);\n        builder.storeMaybeRef(src.data);\n        builder.storeDict(src.libraries);\n    };\n}\nexports.storeStateInit = storeStateInit;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,cAAc,GAAGF,OAAO,CAACG,aAAa,GAAG,KAAK,CAAC;AACvD,MAAMC,YAAY,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAClD,MAAMC,eAAe,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAClD,MAAME,UAAU,GAAGF,OAAO,CAAC,YAAY,CAAC;AACxC;AACA,SAASF,aAAaA,CAACK,KAAK,EAAE;EAC1B;EACA,IAAIC,UAAU;EACd,IAAID,KAAK,CAACE,OAAO,CAAC,CAAC,EAAE;IACjBD,UAAU,GAAGD,KAAK,CAACG,QAAQ,CAAC,CAAC,CAAC;EAClC;EACA;EACA,IAAIC,OAAO;EACX,IAAIJ,KAAK,CAACE,OAAO,CAAC,CAAC,EAAE;IACjBE,OAAO,GAAG,CAAC,CAAC,EAAEL,UAAU,CAACM,YAAY,EAAEL,KAAK,CAAC;EACjD;EACA;EACA,IAAIM,IAAI,GAAGN,KAAK,CAACO,YAAY,CAAC,CAAC;EAC/B,IAAIC,IAAI,GAAGR,KAAK,CAACO,YAAY,CAAC,CAAC;EAC/B;EACA,IAAIE,SAAS,GAAGT,KAAK,CAACU,QAAQ,CAACd,YAAY,CAACe,UAAU,CAACC,IAAI,CAACC,OAAO,CAAC,GAAG,CAAC,EAAEf,eAAe,CAACgB,kBAAkB,CAAC;EAC7G,IAAIL,SAAS,CAACM,IAAI,KAAK,CAAC,EAAE;IACtBN,SAAS,GAAGO,SAAS;EACzB;EACA,OAAO;IACHf,UAAU;IACVG,OAAO;IACPE,IAAI;IACJE,IAAI;IACJC;EACJ,CAAC;AACL;AACAjB,OAAO,CAACG,aAAa,GAAGA,aAAa;AACrC,SAASD,cAAcA,CAACuB,GAAG,EAAE;EACzB,OAAQC,OAAO,IAAK;IAChB,IAAID,GAAG,CAAChB,UAAU,KAAK,IAAI,IAAIgB,GAAG,CAAChB,UAAU,KAAKe,SAAS,EAAE;MACzDE,OAAO,CAACC,QAAQ,CAAC,IAAI,CAAC;MACtBD,OAAO,CAACE,SAAS,CAACH,GAAG,CAAChB,UAAU,EAAE,CAAC,CAAC;IACxC,CAAC,MACI;MACDiB,OAAO,CAACC,QAAQ,CAAC,KAAK,CAAC;IAC3B;IACA,IAAIF,GAAG,CAACb,OAAO,KAAK,IAAI,IAAIa,GAAG,CAACb,OAAO,KAAKY,SAAS,EAAE;MACnDE,OAAO,CAACC,QAAQ,CAAC,IAAI,CAAC;MACtBD,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,EAAEtB,UAAU,CAACuB,aAAa,EAAEL,GAAG,CAACb,OAAO,CAAC,CAAC;IAC7D,CAAC,MACI;MACDc,OAAO,CAACC,QAAQ,CAAC,KAAK,CAAC;IAC3B;IACAD,OAAO,CAACK,aAAa,CAACN,GAAG,CAACX,IAAI,CAAC;IAC/BY,OAAO,CAACK,aAAa,CAACN,GAAG,CAACT,IAAI,CAAC;IAC/BU,OAAO,CAACM,SAAS,CAACP,GAAG,CAACR,SAAS,CAAC;EACpC,CAAC;AACL;AACAjB,OAAO,CAACE,cAAc,GAAGA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}