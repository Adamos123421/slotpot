{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adams\\\\Downloads\\\\GLL\\\\slotpot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { TonConnectUIProvider } from '@tonconnect/ui-react';\nimport Chat from './components/Chat';\nimport GameArea from './components/GameArea';\nimport MobileChat from './components/MobileChat';\nimport WalletConnection from './components/WalletConnection';\nimport WinnerBroadcast from './components/WinnerBroadcast';\nimport useTelegramWebApp from './hooks/useTelegramWebApp';\nimport useJackpotContract from './hooks/useJackpotContract';\nimport socketService from './services/socketService';\nimport winnerCoordinator from './services/winnerCoordinator';\nimport { tonConnectConfig, uiOptions } from './config/tonconnect';\nimport { MessageCircle, Trophy, Users, DollarSign } from 'lucide-react';\nimport './App.css';\nimport './components/Header.css';\n\n// TON Connect manifest URL - use remote manifest to avoid 500 errors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst manifestUrl = \"https://raw.githubusercontent.com/Vodka2134156/kzsks/main/manifest.json\";\nfunction AppContent() {\n  _s();\n  var _contractState$timer2;\n  // Local UI state\n  const [currentRound, setCurrentRound] = useState(53408);\n  const [timeRemaining, setTimeRemaining] = useState(30);\n  const [activeTab, setActiveTab] = useState('jackpot');\n  const [betAmount, setBetAmount] = useState(0.11);\n  const [showWinnerAnnouncement, setShowWinnerAnnouncement] = useState(false);\n\n  // Winner state management (moved from GameArea.js)\n  const [waitingForWinner, setWaitingForWinner] = useState(false);\n  const [contractWinner, setContractWinner] = useState(null);\n  const [postWinnerLoading, setPostWinnerLoading] = useState(false);\n  const [isAnyWinnerDisplayActive, setIsAnyWinnerDisplayActive] = useState(false);\n\n  // Bettors state (managed centrally to avoid duplicates)\n  const [gameBettors, setGameBettors] = useState([]);\n\n  // Refs to avoid stale closures in socket handlers\n  const gameBettorsRef = useRef([]);\n  const contractWinnerRef = useRef(null);\n  const showWinnerAnnouncementRef = useRef(false);\n  const lastWinnerTimestampRef = useRef(null);\n\n  // Keep refs in sync with state\n  useEffect(() => {\n    gameBettorsRef.current = gameBettors;\n  }, [gameBettors]);\n  useEffect(() => {\n    contractWinnerRef.current = contractWinner;\n  }, [contractWinner]);\n  useEffect(() => {\n    showWinnerAnnouncementRef.current = showWinnerAnnouncement;\n  }, [showWinnerAnnouncement]);\n\n  // Centralized winner announcement manager\n  const showWinnerAnnouncements = useCallback((winnerData, source = 'unknown') => {\n    const winnerTimestamp = winnerData.timestamp;\n\n    // Use coordinator to check if should block\n    if (winnerCoordinator.shouldBlock(winnerTimestamp)) {\n      console.log(`🔄 Winner announcement blocked by coordinator (${source})`);\n      return false;\n    }\n    console.log(`🎉 Showing winner announcements from ${source}:`, winnerData);\n\n    // Set coordination flag via coordinator\n    winnerCoordinator.setActive(true, winnerTimestamp);\n    setIsAnyWinnerDisplayActive(true);\n    lastWinnerTimestampRef.current = winnerTimestamp;\n\n    // Show App.js winner notification\n    setContractWinner(winnerData);\n    setShowWinnerAnnouncement(true);\n    setWaitingForWinner(false);\n\n    // Auto-clear everything after 6 seconds\n    setTimeout(() => {\n      setShowWinnerAnnouncement(false);\n      setContractWinner(null);\n      setPostWinnerLoading(false);\n      setIsAnyWinnerDisplayActive(false);\n      winnerCoordinator.setActive(false);\n    }, 6000);\n    return true;\n  }, []);\n\n  // Telegram integration\n  const {\n    user,\n    hapticFeedback,\n    showAlert,\n    hasRealUserData\n  } = useTelegramWebApp();\n\n  // Smart contract integration\n  const {\n    contractState,\n    userStats,\n    adminInfo,\n    isLoadingContract,\n    isLoadingUserStats,\n    isPlacingBet,\n    placeBet,\n    isConnected,\n    address,\n    currentBettors\n  } = useJackpotContract();\n\n  // Use real contract data or fallback to simulated data\n  const jackpotValue = contractState.totalJackpot;\n  const isLive = contractState.isActive;\n  const userWinChance = parseFloat(userStats.winChancePercentage) || 0;\n  const userBetTotal = userStats.betAmount || 0;\n\n  // Use automation timer or fallback to UI timer\n  useEffect(() => {\n    var _contractState$timer;\n    // Always sync with backend timer when it changes\n    if (((_contractState$timer = contractState.timer) === null || _contractState$timer === void 0 ? void 0 : _contractState$timer.timeRemaining) !== undefined) {\n      setTimeRemaining(contractState.timer.timeRemaining);\n    } else {\n      setTimeRemaining(30);\n    }\n  }, [(_contractState$timer2 = contractState.timer) === null || _contractState$timer2 === void 0 ? void 0 : _contractState$timer2.timeRemaining]);\n\n  // Local countdown timer (runs between backend updates)\n  useEffect(() => {\n    if (!isLive || timeRemaining <= 0) return;\n    const countdown = setInterval(() => {\n      setTimeRemaining(prev => {\n        const newTime = Math.max(0, prev - 1);\n\n        // If we reach 0, don't reset - let backend handle the transition\n        if (newTime === 0) {\n          console.log('⏰ Local timer reached 0, waiting for backend...');\n        }\n        return newTime;\n      });\n    }, 1000);\n    return () => clearInterval(countdown);\n  }, [isLive, timeRemaining > 0]); // Restart countdown when timer changes or game goes live\n\n  // Socket integration for immediate synchronization - SINGLE CONNECTION POINT\n  useEffect(() => {\n    console.log('🔌 App.js: Establishing single socket connection for entire app...');\n    socketService.connect();\n\n    // Listen for timer updates from socket\n    socketService.on('timer', timerData => {\n      console.log('⏰ App: Socket timer update:', timerData);\n      setTimeRemaining(timerData.timeRemaining);\n      if (timerData.roundNumber) {\n        setCurrentRound(timerData.roundNumber);\n      }\n      // Note: Contract state timer will be updated via fullGameUpdate/contractStateUpdate events\n    });\n\n    // Listen for new round events\n    socketService.on('newRound', roundData => {\n      console.log('🎰 App: New round detected via socket:', roundData);\n      setTimeRemaining(roundData.timeRemaining);\n      setCurrentRound(roundData.roundNumber);\n      setIsAnyWinnerDisplayActive(false);\n      winnerCoordinator.reset();\n      lastWinnerTimestampRef.current = null; // Clear duplicate protection for new round\n    });\n\n    // Listen for game state updates\n    socketService.on('gameState', gameState => {\n      console.log('🎮 App: Game state update:', gameState);\n      if (gameState.timeRemaining !== undefined) {\n        setTimeRemaining(gameState.timeRemaining);\n      }\n      if (gameState.currentRound) {\n        // Extract roundNumber if currentRound is an object, otherwise use the value directly\n        const roundNumber = typeof gameState.currentRound === 'object' && gameState.currentRound.roundNumber ? gameState.currentRound.roundNumber : gameState.currentRound;\n        setCurrentRound(roundNumber);\n      }\n\n      // Handle winner-related states\n      if (gameState.isWaitingForWinner !== undefined) {\n        setWaitingForWinner(gameState.isWaitingForWinner);\n      }\n\n      // Update bettors data centrally (avoids duplicate processing)\n      if (gameState.bettors && Array.isArray(gameState.bettors)) {\n        // Only log if bettors count changed to reduce spam\n        if (gameState.bettors.length !== gameBettorsRef.current.length) {\n          console.log('🎮 App: Updating bettors from gameState:', gameState.bettors.length, 'bettors');\n        }\n        setGameBettors(gameState.bettors);\n      }\n\n      // Check for winner announcement in game state (prevent duplicates with stronger protection)\n      if (gameState.winnerAnnouncement) {\n        showWinnerAnnouncements(gameState.winnerAnnouncement, 'gameState');\n      }\n    });\n\n    // Listen for comprehensive game data updates\n    socketService.on('fullGameUpdate', gameData => {\n      console.log('🎮 App: Full game update:', gameData);\n      // These updates will trigger re-renders via useJackpotContract hook\n      // The hook will detect the changes and update accordingly\n    });\n\n    // Listen for bettors updates\n    socketService.on('bettorsUpdate', data => {\n      console.log('💰 App: Bettors update:', data);\n      // Force a refresh of contract state to sync with socket data\n      // This ensures jackpot value and user stats stay in sync\n    });\n\n    // Listen for waiting for winner events\n    socketService.on('waitingForWinner', isWaiting => {\n      console.log('🎯 App: Waiting for winner state changed:', isWaiting);\n      setWaitingForWinner(isWaiting);\n    });\n\n    // Listen for winner announcements (primary)\n    socketService.on('winner', winnerData => {\n      console.log('🏆 App: Winner announced:', winnerData);\n      setWaitingForWinner(false);\n      setPostWinnerLoading(true);\n\n      // Use centralized manager\n      showWinnerAnnouncements(winnerData, 'winner event');\n    });\n\n    // Listen for direct winner announcements (fallback/reliable delivery)\n    socketService.on('winnerAnnouncement', winnerData => {\n      console.log('🎯 App: Direct winner announcement:', winnerData);\n      setWaitingForWinner(false);\n\n      // Use centralized manager\n      showWinnerAnnouncements(winnerData, 'direct announcement');\n    });\n\n    // Listen for round resets\n    socketService.on('roundReset', () => {\n      console.log('🔄 App: Round reset');\n      setWaitingForWinner(false);\n      setPostWinnerLoading(false);\n      setShowWinnerAnnouncement(false);\n      setContractWinner(null);\n      setIsAnyWinnerDisplayActive(false);\n      winnerCoordinator.reset();\n      lastWinnerTimestampRef.current = null; // Clear duplicate protection for new round\n    });\n    return () => {\n      console.log('🔌 App.js: Cleaning up socket listeners...');\n      socketService.off('timer');\n      socketService.off('newRound');\n      socketService.off('gameState');\n      socketService.off('fullGameUpdate');\n      socketService.off('bettorsUpdate');\n      socketService.off('waitingForWinner');\n      socketService.off('winner');\n      socketService.off('winnerAnnouncement');\n      socketService.off('roundReset');\n      // Disconnect when app unmounts to prevent memory leaks\n      socketService.disconnect();\n    };\n  }, []);\n  const handleBetChange = e => {\n    const value = parseFloat(e.target.value) || 0;\n    setBetAmount(Math.max(0, Math.min(value, 10))); // Min 0, Max 10\n  };\n  const handleTabChange = tab => {\n    hapticFeedback('light');\n    setActiveTab(tab);\n  };\n\n  // Enhanced bet placement with real smart contract\n  const handlePlaceBet = async () => {\n    console.log(`🔥 BET BUTTON CLICKED - Amount: ${betAmount} TON`);\n    if (betAmount <= 0) {\n      showAlert('Please enter a valid bet amount');\n      return;\n    }\n    if (!isConnected) {\n      showAlert('Please connect your wallet first');\n      return;\n    }\n    if (!contractState.isActive) {\n      showAlert('Jackpot is not currently active\\n\\n🤖 Automated system will start a new round soon...');\n      return;\n    }\n    try {\n      console.log(`🚀 Starting bet placement process...`);\n      hapticFeedback('medium');\n\n      // This will call the contract with opcode 0x03\n      const result = await placeBet(betAmount);\n      if (result.success) {\n        hapticFeedback('success');\n        showAlert(`✅ Bet placed successfully!\\n${betAmount} TON in round #${currentRound}\\nTransaction: ${result.txHash.slice(0, 8)}...`);\n        console.log('🎉 Bet placement completed:', result);\n      }\n    } catch (error) {\n      hapticFeedback('error');\n      showAlert(`❌ Bet failed: ${error.message}`);\n      console.error('💥 Bet error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"logo-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"logo-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"logo-text\",\n              children: \"SLOTPOT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n            className: \"nav-tabs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nav-tab active\",\n              children: [/*#__PURE__*/_jsxDEV(Trophy, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Jackpot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nav-tab\",\n              children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Coinflip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nav-tab\",\n              children: [/*#__PURE__*/_jsxDEV(Users, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Affiliates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [user && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-greeting\",\n              children: [hasRealUserData ? '👋' : '🤖', \" \", user.displayName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this), isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wallet-info\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"wallet-address\",\n                children: address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WalletConnection, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-tab-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `mobile-tab ${activeTab === 'jackpot' ? 'active' : ''}`,\n          onClick: () => handleTabChange('jackpot'),\n          children: [/*#__PURE__*/_jsxDEV(Trophy, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this), \"Jackpot\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `mobile-tab ${activeTab === 'chat' ? 'active' : ''}`,\n          onClick: () => handleTabChange('chat'),\n          children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), \"Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mobile-content-section ${activeTab === 'jackpot' ? 'active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          children: /*#__PURE__*/_jsxDEV(GameArea, {\n            jackpotValue: jackpotValue,\n            currentRound: currentRound,\n            timeRemaining: timeRemaining,\n            isLive: isLive,\n            showWinnerAnnouncement: showWinnerAnnouncement,\n            betAmount: betAmount,\n            onBetChange: handleBetChange,\n            onPlaceBet: handlePlaceBet,\n            isConnected: isConnected,\n            isLoading: isPlacingBet,\n            userWinChance: userWinChance,\n            userBetTotal: userBetTotal,\n            contractState: {\n              ...contractState,\n              userAddress: address // Add user address for bet tracking\n            },\n            isLoadingContract: isLoadingContract,\n            adminInfo: adminInfo,\n            currentBettors: gameBettors\n            // Winner state props (moved from GameArea internal state)\n            ,\n            waitingForWinner: waitingForWinner,\n            contractWinner: contractWinner,\n            postWinnerLoading: postWinnerLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mobile-content-section ${activeTab === 'chat' ? 'active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobile-chat-section\",\n          children: /*#__PURE__*/_jsxDEV(MobileChat, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-left\",\n        children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-footer-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobile-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mobile-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mobile-stat-value\",\n              children: contractState.isActive !== false ? contractState.betCount || 0 : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mobile-stat-label\",\n              children: \"Players\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mobile-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mobile-stat-value\",\n              children: [\"#\", currentRound]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mobile-stat-label\",\n              children: \"Round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), isConnected && contractState.isActive !== false && userBetTotal > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mobile-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mobile-stat-value\",\n              children: [userWinChance.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mobile-stat-label\",\n              children: \"Win Chance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mobile-games-btn\",\n          children: [/*#__PURE__*/_jsxDEV(Users, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this), \"Games\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), isLoadingContract && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"\\uD83D\\uDD04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading contract data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(WinnerBroadcast, {\n      socketService: socketService\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n}\n\n// Main App component with TON Connect Provider\n_s(AppContent, \"r3Ilv/bgXeKde12VPtQxKdAkvNQ=\", false, function () {\n  return [useTelegramWebApp, useJackpotContract];\n});\n_c = AppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(TonConnectUIProvider, {\n    manifestUrl: manifestUrl,\n    uiPreferences: uiOptions.uiPreferences,\n    language: uiOptions.language,\n    restoreConnection: uiOptions.restoreConnection,\n    actionsConfiguration: uiOptions.actionsConfiguration,\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 461,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","TonConnectUIProvider","Chat","GameArea","MobileChat","WalletConnection","WinnerBroadcast","useTelegramWebApp","useJackpotContract","socketService","winnerCoordinator","tonConnectConfig","uiOptions","MessageCircle","Trophy","Users","DollarSign","jsxDEV","_jsxDEV","manifestUrl","AppContent","_s","_contractState$timer2","currentRound","setCurrentRound","timeRemaining","setTimeRemaining","activeTab","setActiveTab","betAmount","setBetAmount","showWinnerAnnouncement","setShowWinnerAnnouncement","waitingForWinner","setWaitingForWinner","contractWinner","setContractWinner","postWinnerLoading","setPostWinnerLoading","isAnyWinnerDisplayActive","setIsAnyWinnerDisplayActive","gameBettors","setGameBettors","gameBettorsRef","contractWinnerRef","showWinnerAnnouncementRef","lastWinnerTimestampRef","current","showWinnerAnnouncements","winnerData","source","winnerTimestamp","timestamp","shouldBlock","console","log","setActive","setTimeout","user","hapticFeedback","showAlert","hasRealUserData","contractState","userStats","adminInfo","isLoadingContract","isLoadingUserStats","isPlacingBet","placeBet","isConnected","address","currentBettors","jackpotValue","totalJackpot","isLive","isActive","userWinChance","parseFloat","winChancePercentage","userBetTotal","_contractState$timer","timer","undefined","countdown","setInterval","prev","newTime","Math","max","clearInterval","connect","on","timerData","roundNumber","roundData","reset","gameState","isWaitingForWinner","bettors","Array","isArray","length","winnerAnnouncement","gameData","data","isWaiting","off","disconnect","handleBetChange","e","value","target","min","handleTabChange","tab","handlePlaceBet","result","success","txHash","slice","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","displayName","onClick","onBetChange","onPlaceBet","isLoading","userAddress","betCount","toFixed","_c","App","uiPreferences","language","restoreConnection","actionsConfiguration","_c2","$RefreshReg$"],"sources":["C:/Users/adams/Downloads/GLL/slotpot/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { TonConnectUIProvider } from '@tonconnect/ui-react';\nimport Chat from './components/Chat';\nimport GameArea from './components/GameArea';\nimport MobileChat from './components/MobileChat';\nimport WalletConnection from './components/WalletConnection';\nimport WinnerBroadcast from './components/WinnerBroadcast';\nimport useTelegramWebApp from './hooks/useTelegramWebApp';\nimport useJackpotContract from './hooks/useJackpotContract';\nimport socketService from './services/socketService';\nimport winnerCoordinator from './services/winnerCoordinator';\nimport { tonConnectConfig, uiOptions } from './config/tonconnect';\nimport { MessageCircle, Trophy, Users, DollarSign } from 'lucide-react';\nimport './App.css';\nimport './components/Header.css';\n\n// TON Connect manifest URL - use remote manifest to avoid 500 errors\nconst manifestUrl = \"https://raw.githubusercontent.com/Vodka2134156/kzsks/main/manifest.json\";\n\nfunction AppContent() {\n  // Local UI state\n  const [currentRound, setCurrentRound] = useState(53408);\n  const [timeRemaining, setTimeRemaining] = useState(30);\n  const [activeTab, setActiveTab] = useState('jackpot');\n  const [betAmount, setBetAmount] = useState(0.11);\n  const [showWinnerAnnouncement, setShowWinnerAnnouncement] = useState(false);\n  \n  // Winner state management (moved from GameArea.js)\n  const [waitingForWinner, setWaitingForWinner] = useState(false);\n  const [contractWinner, setContractWinner] = useState(null);\n  const [postWinnerLoading, setPostWinnerLoading] = useState(false);\n  const [isAnyWinnerDisplayActive, setIsAnyWinnerDisplayActive] = useState(false);\n  \n  // Bettors state (managed centrally to avoid duplicates)\n  const [gameBettors, setGameBettors] = useState([]);\n\n  // Refs to avoid stale closures in socket handlers\n  const gameBettorsRef = useRef([]);\n  const contractWinnerRef = useRef(null);\n  const showWinnerAnnouncementRef = useRef(false);\n  const lastWinnerTimestampRef = useRef(null);\n  \n  // Keep refs in sync with state\n  useEffect(() => { gameBettorsRef.current = gameBettors; }, [gameBettors]);\n  useEffect(() => { contractWinnerRef.current = contractWinner; }, [contractWinner]);\n  useEffect(() => { showWinnerAnnouncementRef.current = showWinnerAnnouncement; }, [showWinnerAnnouncement]);\n\n  // Centralized winner announcement manager\n  const showWinnerAnnouncements = useCallback((winnerData, source = 'unknown') => {\n    const winnerTimestamp = winnerData.timestamp;\n    \n    // Use coordinator to check if should block\n    if (winnerCoordinator.shouldBlock(winnerTimestamp)) {\n      console.log(`🔄 Winner announcement blocked by coordinator (${source})`);\n      return false;\n    }\n    \n    console.log(`🎉 Showing winner announcements from ${source}:`, winnerData);\n    \n    // Set coordination flag via coordinator\n    winnerCoordinator.setActive(true, winnerTimestamp);\n    setIsAnyWinnerDisplayActive(true);\n    lastWinnerTimestampRef.current = winnerTimestamp;\n    \n    // Show App.js winner notification\n    setContractWinner(winnerData);\n    setShowWinnerAnnouncement(true);\n    setWaitingForWinner(false);\n    \n    // Auto-clear everything after 6 seconds\n    setTimeout(() => {\n      setShowWinnerAnnouncement(false);\n      setContractWinner(null);\n      setPostWinnerLoading(false);\n      setIsAnyWinnerDisplayActive(false);\n      winnerCoordinator.setActive(false);\n    }, 6000);\n    \n    return true;\n  }, []);\n\n  // Telegram integration\n  const { user, hapticFeedback, showAlert, hasRealUserData } = useTelegramWebApp();\n\n  // Smart contract integration\n  const {\n    contractState,\n    userStats,\n    adminInfo,\n    isLoadingContract,\n    isLoadingUserStats,\n    isPlacingBet,\n    placeBet,\n    isConnected,\n    address,\n    currentBettors\n  } = useJackpotContract();\n\n  // Use real contract data or fallback to simulated data\n  const jackpotValue = contractState.totalJackpot;\n  const isLive = contractState.isActive;\n  const userWinChance = parseFloat(userStats.winChancePercentage) || 0;\n  const userBetTotal = userStats.betAmount || 0;\n\n  // Use automation timer or fallback to UI timer\n  useEffect(() => {\n    // Always sync with backend timer when it changes\n    if (contractState.timer?.timeRemaining !== undefined) {\n      setTimeRemaining(contractState.timer.timeRemaining);\n    } else {\n      setTimeRemaining(30);\n    }\n  }, [contractState.timer?.timeRemaining]);\n\n  // Local countdown timer (runs between backend updates)\n  useEffect(() => {\n    if (!isLive || timeRemaining <= 0) return;\n\n    const countdown = setInterval(() => {\n      setTimeRemaining(prev => {\n        const newTime = Math.max(0, prev - 1);\n        \n        // If we reach 0, don't reset - let backend handle the transition\n        if (newTime === 0) {\n          console.log('⏰ Local timer reached 0, waiting for backend...');\n        }\n        \n        return newTime;\n      });\n    }, 1000);\n\n    return () => clearInterval(countdown);\n  }, [isLive, timeRemaining > 0]); // Restart countdown when timer changes or game goes live\n\n  // Socket integration for immediate synchronization - SINGLE CONNECTION POINT\n  useEffect(() => {\n    console.log('🔌 App.js: Establishing single socket connection for entire app...');\n    socketService.connect();\n\n    // Listen for timer updates from socket\n    socketService.on('timer', (timerData) => {\n      console.log('⏰ App: Socket timer update:', timerData);\n      setTimeRemaining(timerData.timeRemaining);\n      if (timerData.roundNumber) {\n        setCurrentRound(timerData.roundNumber);\n      }\n      // Note: Contract state timer will be updated via fullGameUpdate/contractStateUpdate events\n    });\n\n    // Listen for new round events\n    socketService.on('newRound', (roundData) => {\n      console.log('🎰 App: New round detected via socket:', roundData);\n      setTimeRemaining(roundData.timeRemaining);\n      setCurrentRound(roundData.roundNumber);\n      setIsAnyWinnerDisplayActive(false);\n      winnerCoordinator.reset();\n      lastWinnerTimestampRef.current = null; // Clear duplicate protection for new round\n    });\n\n    // Listen for game state updates\n    socketService.on('gameState', (gameState) => {\n      console.log('🎮 App: Game state update:', gameState);\n      if (gameState.timeRemaining !== undefined) {\n        setTimeRemaining(gameState.timeRemaining);\n      }\n      if (gameState.currentRound) {\n        // Extract roundNumber if currentRound is an object, otherwise use the value directly\n        const roundNumber = typeof gameState.currentRound === 'object' && gameState.currentRound.roundNumber \n          ? gameState.currentRound.roundNumber \n          : gameState.currentRound;\n        setCurrentRound(roundNumber);\n      }\n      \n      // Handle winner-related states\n      if (gameState.isWaitingForWinner !== undefined) {\n        setWaitingForWinner(gameState.isWaitingForWinner);\n      }\n      \n      // Update bettors data centrally (avoids duplicate processing)\n      if (gameState.bettors && Array.isArray(gameState.bettors)) {\n        // Only log if bettors count changed to reduce spam\n        if (gameState.bettors.length !== gameBettorsRef.current.length) {\n          console.log('🎮 App: Updating bettors from gameState:', gameState.bettors.length, 'bettors');\n        }\n        setGameBettors(gameState.bettors);\n      }\n      \n      // Check for winner announcement in game state (prevent duplicates with stronger protection)\n      if (gameState.winnerAnnouncement) {\n        showWinnerAnnouncements(gameState.winnerAnnouncement, 'gameState');\n      }\n    });\n\n    // Listen for comprehensive game data updates\n    socketService.on('fullGameUpdate', (gameData) => {\n      console.log('🎮 App: Full game update:', gameData);\n      // These updates will trigger re-renders via useJackpotContract hook\n      // The hook will detect the changes and update accordingly\n    });\n\n    // Listen for bettors updates\n    socketService.on('bettorsUpdate', (data) => {\n      console.log('💰 App: Bettors update:', data);\n      // Force a refresh of contract state to sync with socket data\n      // This ensures jackpot value and user stats stay in sync\n    });\n\n    // Listen for waiting for winner events\n    socketService.on('waitingForWinner', (isWaiting) => {\n      console.log('🎯 App: Waiting for winner state changed:', isWaiting);\n      setWaitingForWinner(isWaiting);\n    });\n\n    // Listen for winner announcements (primary)\n    socketService.on('winner', (winnerData) => {\n      console.log('🏆 App: Winner announced:', winnerData);\n      setWaitingForWinner(false);\n      setPostWinnerLoading(true);\n      \n      // Use centralized manager\n      showWinnerAnnouncements(winnerData, 'winner event');\n    });\n\n    // Listen for direct winner announcements (fallback/reliable delivery)\n    socketService.on('winnerAnnouncement', (winnerData) => {\n      console.log('🎯 App: Direct winner announcement:', winnerData);\n      setWaitingForWinner(false);\n      \n      // Use centralized manager\n      showWinnerAnnouncements(winnerData, 'direct announcement');\n    });\n\n    // Listen for round resets\n    socketService.on('roundReset', () => {\n      console.log('🔄 App: Round reset');\n      setWaitingForWinner(false);\n      setPostWinnerLoading(false);\n      setShowWinnerAnnouncement(false);\n      setContractWinner(null);\n      setIsAnyWinnerDisplayActive(false);\n      winnerCoordinator.reset();\n      lastWinnerTimestampRef.current = null; // Clear duplicate protection for new round\n    });\n\n    return () => {\n      console.log('🔌 App.js: Cleaning up socket listeners...');\n      socketService.off('timer');\n      socketService.off('newRound');\n      socketService.off('gameState');\n      socketService.off('fullGameUpdate');\n      socketService.off('bettorsUpdate');\n      socketService.off('waitingForWinner');\n      socketService.off('winner');\n      socketService.off('winnerAnnouncement');\n      socketService.off('roundReset');\n      // Disconnect when app unmounts to prevent memory leaks\n      socketService.disconnect();\n    };\n  }, []);\n\n  const handleBetChange = (e) => {\n    const value = parseFloat(e.target.value) || 0;\n    setBetAmount(Math.max(0, Math.min(value, 10))); // Min 0, Max 10\n  };\n\n  const handleTabChange = (tab) => {\n    hapticFeedback('light');\n    setActiveTab(tab);\n  };\n\n  // Enhanced bet placement with real smart contract\n  const handlePlaceBet = async () => {\n    console.log(`🔥 BET BUTTON CLICKED - Amount: ${betAmount} TON`);\n    \n    if (betAmount <= 0) {\n      showAlert('Please enter a valid bet amount');\n      return;\n    }\n\n    if (!isConnected) {\n      showAlert('Please connect your wallet first');\n      return;\n    }\n\n    if (!contractState.isActive) {\n      showAlert('Jackpot is not currently active\\n\\n🤖 Automated system will start a new round soon...');\n      return;\n    }\n\n    try {\n      console.log(`🚀 Starting bet placement process...`);\n      hapticFeedback('medium');\n      \n      // This will call the contract with opcode 0x03\n      const result = await placeBet(betAmount);\n      \n      if (result.success) {\n        hapticFeedback('success');\n        showAlert(`✅ Bet placed successfully!\\n${betAmount} TON in round #${currentRound}\\nTransaction: ${result.txHash.slice(0, 8)}...`);\n        console.log('🎉 Bet placement completed:', result);\n      }\n    } catch (error) {\n      hapticFeedback('error');\n      showAlert(`❌ Bet failed: ${error.message}`);\n      console.error('💥 Bet error:', error);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      {/* Header */}\n      <header className=\"header\">\n        <div className=\"header-container\">\n          <div className=\"header-left\">\n            <div className=\"logo\">\n              <div className=\"logo-icon\">\n                <div className=\"logo-circle\"></div>\n              </div>\n              <span className=\"logo-text\">SLOTPOT</span>\n            </div>\n            \n            <nav className=\"nav-tabs\">\n              <div className=\"nav-tab active\">\n                <Trophy size={20} />\n                <span>Jackpot</span>\n              </div>\n              <div className=\"nav-tab\">\n                <DollarSign size={20} />\n                <span>Coinflip</span>\n              </div>\n              <div className=\"nav-tab\">\n                <Users size={20} />\n                <span>Affiliates</span>\n              </div>\n            </nav>\n          </div>\n          \n          <div className=\"header-right\">\n            <div className=\"user-info\">\n              {user && (\n                <span className=\"user-greeting\">\n                  {hasRealUserData ? '👋' : '🤖'} {user.displayName}\n                </span>\n              )}\n              {isConnected && (\n                <div className=\"wallet-info\">\n                  <span className=\"wallet-address\">{address}</span>\n                </div>\n              )}\n            </div>\n            <WalletConnection />\n          </div>\n        </div>\n      </header>\n      \n      <div className=\"app-container\">\n        {/* Mobile Tab Navigation */}\n        <div className=\"mobile-tab-nav\">\n          <button \n            className={`mobile-tab ${activeTab === 'jackpot' ? 'active' : ''}`}\n            onClick={() => handleTabChange('jackpot')}\n          >\n            <Trophy size={16} />\n            Jackpot\n          </button>\n          <button \n            className={`mobile-tab ${activeTab === 'chat' ? 'active' : ''}`}\n            onClick={() => handleTabChange('chat')}\n          >\n            <MessageCircle size={16} />\n            Chat\n          </button>\n        </div>\n\n        {/* Content Sections */}\n        <div className={`mobile-content-section ${activeTab === 'jackpot' ? 'active' : ''}`}>\n          <div className=\"main-content\">\n            <GameArea \n              jackpotValue={jackpotValue}\n              currentRound={currentRound}\n              timeRemaining={timeRemaining}\n              isLive={isLive}\n              showWinnerAnnouncement={showWinnerAnnouncement}\n              betAmount={betAmount}\n              onBetChange={handleBetChange}\n              onPlaceBet={handlePlaceBet}\n              isConnected={isConnected}\n              isLoading={isPlacingBet}\n              userWinChance={userWinChance}\n              userBetTotal={userBetTotal}\n              contractState={{\n                ...contractState,\n                userAddress: address // Add user address for bet tracking\n              }}\n              isLoadingContract={isLoadingContract}\n              adminInfo={adminInfo}\n              currentBettors={gameBettors}\n              // Winner state props (moved from GameArea internal state)\n              waitingForWinner={waitingForWinner}\n              contractWinner={contractWinner}\n              postWinnerLoading={postWinnerLoading}\n            />\n          </div>\n        </div>\n\n        <div className={`mobile-content-section ${activeTab === 'chat' ? 'active' : ''}`}>\n          <div className=\"mobile-chat-section\">\n            <MobileChat />\n          </div>\n        </div>\n\n        {/* Hidden desktop sidebars */}\n        <div className=\"sidebar-left\">\n          <Chat />\n        </div>\n      </div>\n\n      {/* Mobile Footer */}\n      <div className=\"mobile-footer\">\n        <div className=\"mobile-footer-content\">\n          <div className=\"mobile-stats\">\n            <div className=\"mobile-stat\">\n              <div className=\"mobile-stat-value\">{contractState.isActive !== false ? (contractState.betCount || 0) : 0}</div>\n              <div className=\"mobile-stat-label\">Players</div>\n            </div>\n            <div className=\"mobile-stat\">\n              <div className=\"mobile-stat-value\">#{currentRound}</div>\n              <div className=\"mobile-stat-label\">Round</div>\n            </div>\n            {isConnected && contractState.isActive !== false && userBetTotal > 0 && (\n              <div className=\"mobile-stat\">\n                <div className=\"mobile-stat-value\">{userWinChance.toFixed(1)}%</div>\n                <div className=\"mobile-stat-label\">Win Chance</div>\n              </div>\n            )}\n          </div>\n          <button className=\"mobile-games-btn\">\n            <Users size={14} />\n            Games\n          </button>\n        </div>\n      </div>\n\n      {/* Contract Status Indicator */}\n      {isLoadingContract && (\n        <div className=\"loading-overlay\">\n          <div className=\"loading-spinner\">🔄</div>\n          <span>Loading contract data...</span>\n        </div>\n      )}\n\n      {/* Winner Broadcast Component */}\n      <WinnerBroadcast socketService={socketService} />\n    </div>\n  );\n}\n\n// Main App component with TON Connect Provider\nfunction App() {\n  return (\n    <TonConnectUIProvider \n      manifestUrl={manifestUrl}\n      uiPreferences={uiOptions.uiPreferences}\n      language={uiOptions.language}\n      restoreConnection={uiOptions.restoreConnection}\n      actionsConfiguration={uiOptions.actionsConfiguration}\n    >\n      <AppContent />\n    </TonConnectUIProvider>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}