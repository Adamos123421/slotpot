{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.storeTransaction = exports.loadTransaction = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst Dictionary_1 = require(\"../dict/Dictionary\");\nconst AccountStatus_1 = require(\"./AccountStatus\");\nconst CurrencyCollection_1 = require(\"./CurrencyCollection\");\nconst HashUpdate_1 = require(\"./HashUpdate\");\nconst Message_1 = require(\"./Message\");\nconst TransactionDescription_1 = require(\"./TransactionDescription\");\nfunction loadTransaction(slice) {\n  let raw = slice.asCell();\n  if (slice.loadUint(4) !== 0x07) {\n    throw Error('Invalid data');\n  }\n  let address = slice.loadUintBig(256);\n  let lt = slice.loadUintBig(64);\n  let prevTransactionHash = slice.loadUintBig(256);\n  let prevTransactionLt = slice.loadUintBig(64);\n  let now = slice.loadUint(32);\n  let outMessagesCount = slice.loadUint(15);\n  let oldStatus = (0, AccountStatus_1.loadAccountStatus)(slice);\n  let endStatus = (0, AccountStatus_1.loadAccountStatus)(slice);\n  let msgRef = slice.loadRef();\n  let msgSlice = msgRef.beginParse();\n  let inMessage = msgSlice.loadBit() ? (0, Message_1.loadMessage)(msgSlice.loadRef().beginParse()) : undefined;\n  let outMessages = msgSlice.loadDict(Dictionary_1.Dictionary.Keys.Uint(15), Message_1.MessageValue);\n  msgSlice.endParse();\n  let totalFees = (0, CurrencyCollection_1.loadCurrencyCollection)(slice);\n  let stateUpdate = (0, HashUpdate_1.loadHashUpdate)(slice.loadRef().beginParse());\n  let description = (0, TransactionDescription_1.loadTransactionDescription)(slice.loadRef().beginParse());\n  return {\n    address,\n    lt,\n    prevTransactionHash,\n    prevTransactionLt,\n    now,\n    outMessagesCount,\n    oldStatus,\n    endStatus,\n    inMessage,\n    outMessages,\n    totalFees,\n    stateUpdate,\n    description,\n    raw,\n    hash: () => raw.hash()\n  };\n}\nexports.loadTransaction = loadTransaction;\nfunction storeTransaction(src) {\n  return builder => {\n    builder.storeUint(0x07, 4);\n    builder.storeUint(src.address, 256);\n    builder.storeUint(src.lt, 64);\n    builder.storeUint(src.prevTransactionHash, 256);\n    builder.storeUint(src.prevTransactionLt, 64);\n    builder.storeUint(src.now, 32);\n    builder.storeUint(src.outMessagesCount, 15);\n    builder.store((0, AccountStatus_1.storeAccountStatus)(src.oldStatus));\n    builder.store((0, AccountStatus_1.storeAccountStatus)(src.endStatus));\n    let msgBuilder = (0, Builder_1.beginCell)();\n    if (src.inMessage) {\n      msgBuilder.storeBit(true);\n      msgBuilder.storeRef((0, Builder_1.beginCell)().store((0, Message_1.storeMessage)(src.inMessage)));\n    } else {\n      msgBuilder.storeBit(false);\n    }\n    msgBuilder.storeDict(src.outMessages);\n    builder.storeRef(msgBuilder);\n    builder.store((0, CurrencyCollection_1.storeCurrencyCollection)(src.totalFees));\n    builder.storeRef((0, Builder_1.beginCell)().store((0, HashUpdate_1.storeHashUpdate)(src.stateUpdate)));\n    builder.storeRef((0, Builder_1.beginCell)().store((0, TransactionDescription_1.storeTransactionDescription)(src.description)));\n  };\n}\nexports.storeTransaction = storeTransaction;","map":{"version":3,"names":["Object","defineProperty","exports","value","storeTransaction","loadTransaction","Builder_1","require","Dictionary_1","AccountStatus_1","CurrencyCollection_1","HashUpdate_1","Message_1","TransactionDescription_1","slice","raw","asCell","loadUint","Error","address","loadUintBig","lt","prevTransactionHash","prevTransactionLt","now","outMessagesCount","oldStatus","loadAccountStatus","endStatus","msgRef","loadRef","msgSlice","beginParse","inMessage","loadBit","loadMessage","undefined","outMessages","loadDict","Dictionary","Keys","Uint","MessageValue","endParse","totalFees","loadCurrencyCollection","stateUpdate","loadHashUpdate","description","loadTransactionDescription","hash","src","builder","storeUint","store","storeAccountStatus","msgBuilder","beginCell","storeBit","storeRef","storeMessage","storeDict","storeCurrencyCollection","storeHashUpdate","storeTransactionDescription"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/node_modules/@ton/core/dist/types/Transaction.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeTransaction = exports.loadTransaction = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst Dictionary_1 = require(\"../dict/Dictionary\");\nconst AccountStatus_1 = require(\"./AccountStatus\");\nconst CurrencyCollection_1 = require(\"./CurrencyCollection\");\nconst HashUpdate_1 = require(\"./HashUpdate\");\nconst Message_1 = require(\"./Message\");\nconst TransactionDescription_1 = require(\"./TransactionDescription\");\nfunction loadTransaction(slice) {\n    let raw = slice.asCell();\n    if (slice.loadUint(4) !== 0x07) {\n        throw Error('Invalid data');\n    }\n    let address = slice.loadUintBig(256);\n    let lt = slice.loadUintBig(64);\n    let prevTransactionHash = slice.loadUintBig(256);\n    let prevTransactionLt = slice.loadUintBig(64);\n    let now = slice.loadUint(32);\n    let outMessagesCount = slice.loadUint(15);\n    let oldStatus = (0, AccountStatus_1.loadAccountStatus)(slice);\n    let endStatus = (0, AccountStatus_1.loadAccountStatus)(slice);\n    let msgRef = slice.loadRef();\n    let msgSlice = msgRef.beginParse();\n    let inMessage = msgSlice.loadBit() ? (0, Message_1.loadMessage)(msgSlice.loadRef().beginParse()) : undefined;\n    let outMessages = msgSlice.loadDict(Dictionary_1.Dictionary.Keys.Uint(15), Message_1.MessageValue);\n    msgSlice.endParse();\n    let totalFees = (0, CurrencyCollection_1.loadCurrencyCollection)(slice);\n    let stateUpdate = (0, HashUpdate_1.loadHashUpdate)(slice.loadRef().beginParse());\n    let description = (0, TransactionDescription_1.loadTransactionDescription)(slice.loadRef().beginParse());\n    return {\n        address,\n        lt,\n        prevTransactionHash,\n        prevTransactionLt,\n        now,\n        outMessagesCount,\n        oldStatus,\n        endStatus,\n        inMessage,\n        outMessages,\n        totalFees,\n        stateUpdate,\n        description,\n        raw,\n        hash: () => raw.hash(),\n    };\n}\nexports.loadTransaction = loadTransaction;\nfunction storeTransaction(src) {\n    return (builder) => {\n        builder.storeUint(0x07, 4);\n        builder.storeUint(src.address, 256);\n        builder.storeUint(src.lt, 64);\n        builder.storeUint(src.prevTransactionHash, 256);\n        builder.storeUint(src.prevTransactionLt, 64);\n        builder.storeUint(src.now, 32);\n        builder.storeUint(src.outMessagesCount, 15);\n        builder.store((0, AccountStatus_1.storeAccountStatus)(src.oldStatus));\n        builder.store((0, AccountStatus_1.storeAccountStatus)(src.endStatus));\n        let msgBuilder = (0, Builder_1.beginCell)();\n        if (src.inMessage) {\n            msgBuilder.storeBit(true);\n            msgBuilder.storeRef((0, Builder_1.beginCell)().store((0, Message_1.storeMessage)(src.inMessage)));\n        }\n        else {\n            msgBuilder.storeBit(false);\n        }\n        msgBuilder.storeDict(src.outMessages);\n        builder.storeRef(msgBuilder);\n        builder.store((0, CurrencyCollection_1.storeCurrencyCollection)(src.totalFees));\n        builder.storeRef((0, Builder_1.beginCell)().store((0, HashUpdate_1.storeHashUpdate)(src.stateUpdate)));\n        builder.storeRef((0, Builder_1.beginCell)().store((0, TransactionDescription_1.storeTransactionDescription)(src.description)));\n    };\n}\nexports.storeTransaction = storeTransaction;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}