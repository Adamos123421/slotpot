{"ast":null,"code":"import{useEffect,useState}from'react';const useTelegramWebApp=()=>{var _window$Telegram2,_webApp$initDataUnsaf;const[webApp,setWebApp]=useState(null);const[user,setUser]=useState(null);const[isExpanded,setIsExpanded]=useState(false);const[initData,setInitData]=useState(null);useEffect(()=>{var _window$Telegram;const app=(_window$Telegram=window.Telegram)===null||_window$Telegram===void 0?void 0:_window$Telegram.WebApp;if(app){var _app$initDataUnsafe;app.ready();app.expand();// Set theme colors to match our design\napp.setHeaderColor('#1a1b2e');app.setBackgroundColor('#1a1b2e');// Enable closing confirmation\napp.enableClosingConfirmation();setWebApp(app);// Get real user data\nconst userData=(_app$initDataUnsafe=app.initDataUnsafe)===null||_app$initDataUnsafe===void 0?void 0:_app$initDataUnsafe.user;const rawInitData=app.initData;if(userData){setUser({id:userData.id,firstName:userData.first_name,lastName:userData.last_name,username:userData.username,languageCode:userData.language_code,isPremium:userData.is_premium||false,photoUrl:userData.photo_url,// Formatted display name\ndisplayName:userData.first_name+(userData.last_name?\" \".concat(userData.last_name):''),// Short name for UI\nshortName:userData.first_name||userData.username||'User'});setInitData(rawInitData);console.log('ðŸ“± Real Telegram user data loaded:',userData);}else{// Fallback to mock data for testing\nconsole.log('ðŸ“± No Telegram user data - using mock');setUser({id:123456789,firstName:\"Test\",lastName:\"User\",username:\"testuser\",languageCode:\"en\",isPremium:false,displayName:\"Test User\",shortName:\"Test\",photoUrl:null});}setIsExpanded(true);// Handle back button\napp.BackButton.onClick(()=>{app.close();});}else{console.log('Telegram WebApp not available - running in browser mode');// Set mock user for browser testing\nsetUser({id:123456789,firstName:\"Test\",lastName:\"User\",username:\"testuser\",languageCode:\"en\",isPremium:false,displayName:\"Test User\",shortName:\"Test\",photoUrl:null});}},[]);const showAlert=message=>{if(webApp){webApp.showAlert(message);}else{window.alert(message);}};const showConfirm=(message,callback)=>{if(webApp){webApp.showConfirm(message,callback);}else{callback(window.confirm(message));}};const hapticFeedback=function(){let type=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'impact';if(webApp!==null&&webApp!==void 0&&webApp.HapticFeedback){switch(type){case'light':webApp.HapticFeedback.impactOccurred('light');break;case'medium':webApp.HapticFeedback.impactOccurred('medium');break;case'heavy':webApp.HapticFeedback.impactOccurred('heavy');break;case'error':webApp.HapticFeedback.notificationOccurred('error');break;case'success':webApp.HapticFeedback.notificationOccurred('success');break;case'warning':webApp.HapticFeedback.notificationOccurred('warning');break;default:webApp.HapticFeedback.impactOccurred('medium');}}};// Open external link (for wallet connections)\nconst openLink=url=>{if(webApp){webApp.openLink(url);}else{window.open(url,'_blank');}};// Show main button (for betting actions)\nconst showMainButton=(text,onClick)=>{if(webApp!==null&&webApp!==void 0&&webApp.MainButton){webApp.MainButton.setText(text);webApp.MainButton.show();webApp.MainButton.onClick(onClick);}};const hideMainButton=()=>{if(webApp!==null&&webApp!==void 0&&webApp.MainButton){webApp.MainButton.hide();}};// Get user avatar URL or generate one\nconst getUserAvatar=()=>{var _user$shortName,_user$shortName$charA;if(user!==null&&user!==void 0&&user.photoUrl){return user.photoUrl;}// Generate avatar based on user initials\nconst initials=(user===null||user===void 0?void 0:(_user$shortName=user.shortName)===null||_user$shortName===void 0?void 0:(_user$shortName$charA=_user$shortName.charAt(0))===null||_user$shortName$charA===void 0?void 0:_user$shortName$charA.toUpperCase())||'U';return\"https://ui-avatars.com/api/?name=\".concat(initials,\"&background=6366f1&color=ffffff&size=128\");};return{webApp,user,isExpanded,initData,showAlert,showConfirm,hapticFeedback,openLink,showMainButton,hideMainButton,getUserAvatar,isReady:!!webApp,isTelegramEnv:!!((_window$Telegram2=window.Telegram)!==null&&_window$Telegram2!==void 0&&_window$Telegram2.WebApp),// Helper to check if we have real user data\nhasRealUserData:!!(webApp&&(_webApp$initDataUnsaf=webApp.initDataUnsafe)!==null&&_webApp$initDataUnsaf!==void 0&&_webApp$initDataUnsaf.user)};};export default useTelegramWebApp;","map":{"version":3,"names":["useEffect","useState","useTelegramWebApp","_window$Telegram2","_webApp$initDataUnsaf","webApp","setWebApp","user","setUser","isExpanded","setIsExpanded","initData","setInitData","_window$Telegram","app","window","Telegram","WebApp","_app$initDataUnsafe","ready","expand","setHeaderColor","setBackgroundColor","enableClosingConfirmation","userData","initDataUnsafe","rawInitData","id","firstName","first_name","lastName","last_name","username","languageCode","language_code","isPremium","is_premium","photoUrl","photo_url","displayName","concat","shortName","console","log","BackButton","onClick","close","showAlert","message","alert","showConfirm","callback","confirm","hapticFeedback","type","arguments","length","undefined","HapticFeedback","impactOccurred","notificationOccurred","openLink","url","open","showMainButton","text","MainButton","setText","show","hideMainButton","hide","getUserAvatar","_user$shortName","_user$shortName$charA","initials","charAt","toUpperCase","isReady","isTelegramEnv","hasRealUserData"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/src/hooks/useTelegramWebApp.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst useTelegramWebApp = () => {\r\n  const [webApp, setWebApp] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n  const [initData, setInitData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const app = window.Telegram?.WebApp;\r\n    \r\n    if (app) {\r\n      app.ready();\r\n      app.expand();\r\n      \r\n      // Set theme colors to match our design\r\n      app.setHeaderColor('#1a1b2e');\r\n      app.setBackgroundColor('#1a1b2e');\r\n      \r\n      // Enable closing confirmation\r\n      app.enableClosingConfirmation();\r\n      \r\n      setWebApp(app);\r\n      \r\n      // Get real user data\r\n      const userData = app.initDataUnsafe?.user;\r\n      const rawInitData = app.initData;\r\n      \r\n      if (userData) {\r\n        setUser({\r\n          id: userData.id,\r\n          firstName: userData.first_name,\r\n          lastName: userData.last_name,\r\n          username: userData.username,\r\n          languageCode: userData.language_code,\r\n          isPremium: userData.is_premium || false,\r\n          photoUrl: userData.photo_url,\r\n          // Formatted display name\r\n          displayName: userData.first_name + (userData.last_name ? ` ${userData.last_name}` : ''),\r\n          // Short name for UI\r\n          shortName: userData.first_name || userData.username || 'User'\r\n        });\r\n        \r\n        setInitData(rawInitData);\r\n        console.log('ðŸ“± Real Telegram user data loaded:', userData);\r\n      } else {\r\n        // Fallback to mock data for testing\r\n        console.log('ðŸ“± No Telegram user data - using mock');\r\n        setUser({\r\n          id: 123456789,\r\n          firstName: \"Test\",\r\n          lastName: \"User\", \r\n          username: \"testuser\",\r\n          languageCode: \"en\",\r\n          isPremium: false,\r\n          displayName: \"Test User\",\r\n          shortName: \"Test\",\r\n          photoUrl: null\r\n        });\r\n      }\r\n      \r\n      setIsExpanded(true);\r\n      \r\n      // Handle back button\r\n      app.BackButton.onClick(() => {\r\n        app.close();\r\n      });\r\n      \r\n    } else {\r\n      console.log('Telegram WebApp not available - running in browser mode');\r\n      // Set mock user for browser testing\r\n      setUser({\r\n        id: 123456789,\r\n        firstName: \"Test\",\r\n        lastName: \"User\",\r\n        username: \"testuser\", \r\n        languageCode: \"en\",\r\n        isPremium: false,\r\n        displayName: \"Test User\",\r\n        shortName: \"Test\",\r\n        photoUrl: null\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const showAlert = (message) => {\r\n    if (webApp) {\r\n      webApp.showAlert(message);\r\n    } else {\r\n      window.alert(message);\r\n    }\r\n  };\r\n\r\n  const showConfirm = (message, callback) => {\r\n    if (webApp) {\r\n      webApp.showConfirm(message, callback);\r\n    } else {\r\n      callback(window.confirm(message));\r\n    }\r\n  };\r\n\r\n  const hapticFeedback = (type = 'impact') => {\r\n    if (webApp?.HapticFeedback) {\r\n      switch (type) {\r\n        case 'light':\r\n          webApp.HapticFeedback.impactOccurred('light');\r\n          break;\r\n        case 'medium':\r\n          webApp.HapticFeedback.impactOccurred('medium');\r\n          break;\r\n        case 'heavy':\r\n          webApp.HapticFeedback.impactOccurred('heavy');\r\n          break;\r\n        case 'error':\r\n          webApp.HapticFeedback.notificationOccurred('error');\r\n          break;\r\n        case 'success':\r\n          webApp.HapticFeedback.notificationOccurred('success');\r\n          break;\r\n        case 'warning':\r\n          webApp.HapticFeedback.notificationOccurred('warning');\r\n          break;\r\n        default:\r\n          webApp.HapticFeedback.impactOccurred('medium');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Open external link (for wallet connections)\r\n  const openLink = (url) => {\r\n    if (webApp) {\r\n      webApp.openLink(url);\r\n    } else {\r\n      window.open(url, '_blank');\r\n    }\r\n  };\r\n\r\n  // Show main button (for betting actions)\r\n  const showMainButton = (text, onClick) => {\r\n    if (webApp?.MainButton) {\r\n      webApp.MainButton.setText(text);\r\n      webApp.MainButton.show();\r\n      webApp.MainButton.onClick(onClick);\r\n    }\r\n  };\r\n\r\n  const hideMainButton = () => {\r\n    if (webApp?.MainButton) {\r\n      webApp.MainButton.hide();\r\n    }\r\n  };\r\n\r\n  // Get user avatar URL or generate one\r\n  const getUserAvatar = () => {\r\n    if (user?.photoUrl) {\r\n      return user.photoUrl;\r\n    }\r\n    \r\n    // Generate avatar based on user initials\r\n    const initials = user?.shortName?.charAt(0)?.toUpperCase() || 'U';\r\n    return `https://ui-avatars.com/api/?name=${initials}&background=6366f1&color=ffffff&size=128`;\r\n  };\r\n\r\n  return {\r\n    webApp,\r\n    user,\r\n    isExpanded,\r\n    initData,\r\n    showAlert,\r\n    showConfirm,\r\n    hapticFeedback,\r\n    openLink,\r\n    showMainButton,\r\n    hideMainButton,\r\n    getUserAvatar,\r\n    isReady: !!webApp,\r\n    isTelegramEnv: !!window.Telegram?.WebApp,\r\n    // Helper to check if we have real user data\r\n    hasRealUserData: !!(webApp && webApp.initDataUnsafe?.user)\r\n  };\r\n};\r\n\r\nexport default useTelegramWebApp; "],"mappings":"AAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,KAAAC,iBAAA,CAAAC,qBAAA,CAC9B,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGL,QAAQ,CAAC,IAAI,CAAC,CAC1C,KAAM,CAACM,IAAI,CAAEC,OAAO,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACQ,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAE9CD,SAAS,CAAC,IAAM,KAAAa,gBAAA,CACd,KAAM,CAAAC,GAAG,EAAAD,gBAAA,CAAGE,MAAM,CAACC,QAAQ,UAAAH,gBAAA,iBAAfA,gBAAA,CAAiBI,MAAM,CAEnC,GAAIH,GAAG,CAAE,KAAAI,mBAAA,CACPJ,GAAG,CAACK,KAAK,CAAC,CAAC,CACXL,GAAG,CAACM,MAAM,CAAC,CAAC,CAEZ;AACAN,GAAG,CAACO,cAAc,CAAC,SAAS,CAAC,CAC7BP,GAAG,CAACQ,kBAAkB,CAAC,SAAS,CAAC,CAEjC;AACAR,GAAG,CAACS,yBAAyB,CAAC,CAAC,CAE/BjB,SAAS,CAACQ,GAAG,CAAC,CAEd;AACA,KAAM,CAAAU,QAAQ,EAAAN,mBAAA,CAAGJ,GAAG,CAACW,cAAc,UAAAP,mBAAA,iBAAlBA,mBAAA,CAAoBX,IAAI,CACzC,KAAM,CAAAmB,WAAW,CAAGZ,GAAG,CAACH,QAAQ,CAEhC,GAAIa,QAAQ,CAAE,CACZhB,OAAO,CAAC,CACNmB,EAAE,CAAEH,QAAQ,CAACG,EAAE,CACfC,SAAS,CAAEJ,QAAQ,CAACK,UAAU,CAC9BC,QAAQ,CAAEN,QAAQ,CAACO,SAAS,CAC5BC,QAAQ,CAAER,QAAQ,CAACQ,QAAQ,CAC3BC,YAAY,CAAET,QAAQ,CAACU,aAAa,CACpCC,SAAS,CAAEX,QAAQ,CAACY,UAAU,EAAI,KAAK,CACvCC,QAAQ,CAAEb,QAAQ,CAACc,SAAS,CAC5B;AACAC,WAAW,CAAEf,QAAQ,CAACK,UAAU,EAAIL,QAAQ,CAACO,SAAS,KAAAS,MAAA,CAAOhB,QAAQ,CAACO,SAAS,EAAK,EAAE,CAAC,CACvF;AACAU,SAAS,CAAEjB,QAAQ,CAACK,UAAU,EAAIL,QAAQ,CAACQ,QAAQ,EAAI,MACzD,CAAC,CAAC,CAEFpB,WAAW,CAACc,WAAW,CAAC,CACxBgB,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAEnB,QAAQ,CAAC,CAC7D,CAAC,IAAM,CACL;AACAkB,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC,CACpDnC,OAAO,CAAC,CACNmB,EAAE,CAAE,SAAS,CACbC,SAAS,CAAE,MAAM,CACjBE,QAAQ,CAAE,MAAM,CAChBE,QAAQ,CAAE,UAAU,CACpBC,YAAY,CAAE,IAAI,CAClBE,SAAS,CAAE,KAAK,CAChBI,WAAW,CAAE,WAAW,CACxBE,SAAS,CAAE,MAAM,CACjBJ,QAAQ,CAAE,IACZ,CAAC,CAAC,CACJ,CAEA3B,aAAa,CAAC,IAAI,CAAC,CAEnB;AACAI,GAAG,CAAC8B,UAAU,CAACC,OAAO,CAAC,IAAM,CAC3B/B,GAAG,CAACgC,KAAK,CAAC,CAAC,CACb,CAAC,CAAC,CAEJ,CAAC,IAAM,CACLJ,OAAO,CAACC,GAAG,CAAC,yDAAyD,CAAC,CACtE;AACAnC,OAAO,CAAC,CACNmB,EAAE,CAAE,SAAS,CACbC,SAAS,CAAE,MAAM,CACjBE,QAAQ,CAAE,MAAM,CAChBE,QAAQ,CAAE,UAAU,CACpBC,YAAY,CAAE,IAAI,CAClBE,SAAS,CAAE,KAAK,CAChBI,WAAW,CAAE,WAAW,CACxBE,SAAS,CAAE,MAAM,CACjBJ,QAAQ,CAAE,IACZ,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAU,SAAS,CAAIC,OAAO,EAAK,CAC7B,GAAI3C,MAAM,CAAE,CACVA,MAAM,CAAC0C,SAAS,CAACC,OAAO,CAAC,CAC3B,CAAC,IAAM,CACLjC,MAAM,CAACkC,KAAK,CAACD,OAAO,CAAC,CACvB,CACF,CAAC,CAED,KAAM,CAAAE,WAAW,CAAGA,CAACF,OAAO,CAAEG,QAAQ,GAAK,CACzC,GAAI9C,MAAM,CAAE,CACVA,MAAM,CAAC6C,WAAW,CAACF,OAAO,CAAEG,QAAQ,CAAC,CACvC,CAAC,IAAM,CACLA,QAAQ,CAACpC,MAAM,CAACqC,OAAO,CAACJ,OAAO,CAAC,CAAC,CACnC,CACF,CAAC,CAED,KAAM,CAAAK,cAAc,CAAG,QAAAA,CAAA,CAAqB,IAApB,CAAAC,IAAI,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,QAAQ,CACrC,GAAIlD,MAAM,SAANA,MAAM,WAANA,MAAM,CAAEqD,cAAc,CAAE,CAC1B,OAAQJ,IAAI,EACV,IAAK,OAAO,CACVjD,MAAM,CAACqD,cAAc,CAACC,cAAc,CAAC,OAAO,CAAC,CAC7C,MACF,IAAK,QAAQ,CACXtD,MAAM,CAACqD,cAAc,CAACC,cAAc,CAAC,QAAQ,CAAC,CAC9C,MACF,IAAK,OAAO,CACVtD,MAAM,CAACqD,cAAc,CAACC,cAAc,CAAC,OAAO,CAAC,CAC7C,MACF,IAAK,OAAO,CACVtD,MAAM,CAACqD,cAAc,CAACE,oBAAoB,CAAC,OAAO,CAAC,CACnD,MACF,IAAK,SAAS,CACZvD,MAAM,CAACqD,cAAc,CAACE,oBAAoB,CAAC,SAAS,CAAC,CACrD,MACF,IAAK,SAAS,CACZvD,MAAM,CAACqD,cAAc,CAACE,oBAAoB,CAAC,SAAS,CAAC,CACrD,MACF,QACEvD,MAAM,CAACqD,cAAc,CAACC,cAAc,CAAC,QAAQ,CAAC,CAClD,CACF,CACF,CAAC,CAED;AACA,KAAM,CAAAE,QAAQ,CAAIC,GAAG,EAAK,CACxB,GAAIzD,MAAM,CAAE,CACVA,MAAM,CAACwD,QAAQ,CAACC,GAAG,CAAC,CACtB,CAAC,IAAM,CACL/C,MAAM,CAACgD,IAAI,CAACD,GAAG,CAAE,QAAQ,CAAC,CAC5B,CACF,CAAC,CAED;AACA,KAAM,CAAAE,cAAc,CAAGA,CAACC,IAAI,CAAEpB,OAAO,GAAK,CACxC,GAAIxC,MAAM,SAANA,MAAM,WAANA,MAAM,CAAE6D,UAAU,CAAE,CACtB7D,MAAM,CAAC6D,UAAU,CAACC,OAAO,CAACF,IAAI,CAAC,CAC/B5D,MAAM,CAAC6D,UAAU,CAACE,IAAI,CAAC,CAAC,CACxB/D,MAAM,CAAC6D,UAAU,CAACrB,OAAO,CAACA,OAAO,CAAC,CACpC,CACF,CAAC,CAED,KAAM,CAAAwB,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAIhE,MAAM,SAANA,MAAM,WAANA,MAAM,CAAE6D,UAAU,CAAE,CACtB7D,MAAM,CAAC6D,UAAU,CAACI,IAAI,CAAC,CAAC,CAC1B,CACF,CAAC,CAED;AACA,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,KAAAC,eAAA,CAAAC,qBAAA,CAC1B,GAAIlE,IAAI,SAAJA,IAAI,WAAJA,IAAI,CAAE8B,QAAQ,CAAE,CAClB,MAAO,CAAA9B,IAAI,CAAC8B,QAAQ,CACtB,CAEA;AACA,KAAM,CAAAqC,QAAQ,CAAG,CAAAnE,IAAI,SAAJA,IAAI,kBAAAiE,eAAA,CAAJjE,IAAI,CAAEkC,SAAS,UAAA+B,eAAA,kBAAAC,qBAAA,CAAfD,eAAA,CAAiBG,MAAM,CAAC,CAAC,CAAC,UAAAF,qBAAA,iBAA1BA,qBAAA,CAA4BG,WAAW,CAAC,CAAC,GAAI,GAAG,CACjE,0CAAApC,MAAA,CAA2CkC,QAAQ,6CACrD,CAAC,CAED,MAAO,CACLrE,MAAM,CACNE,IAAI,CACJE,UAAU,CACVE,QAAQ,CACRoC,SAAS,CACTG,WAAW,CACXG,cAAc,CACdQ,QAAQ,CACRG,cAAc,CACdK,cAAc,CACdE,aAAa,CACbM,OAAO,CAAE,CAAC,CAACxE,MAAM,CACjByE,aAAa,CAAE,CAAC,GAAA3E,iBAAA,CAACY,MAAM,CAACC,QAAQ,UAAAb,iBAAA,WAAfA,iBAAA,CAAiBc,MAAM,EACxC;AACA8D,eAAe,CAAE,CAAC,EAAE1E,MAAM,GAAAD,qBAAA,CAAIC,MAAM,CAACoB,cAAc,UAAArB,qBAAA,WAArBA,qBAAA,CAAuBG,IAAI,CAC3D,CAAC,CACH,CAAC,CAED,cAAe,CAAAL,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}