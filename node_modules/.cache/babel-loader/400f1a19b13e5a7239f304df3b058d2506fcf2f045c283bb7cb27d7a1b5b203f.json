{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{Send,Users,Wifi,WifiOff,RefreshCw}from'lucide-react';import useChat from'../hooks/useChat';import'./MobileChat.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const MobileChat=()=>{var _serverStats$gameStat,_serverStats$gameStat2;const[newMessage,setNewMessage]=useState('');const[showConnectionError,setShowConnectionError]=useState(false);const[isUserScrolling,setIsUserScrolling]=useState(false);const[unreadCount,setUnreadCount]=useState(0);const messagesEndRef=useRef(null);const inputRef=useRef(null);const chatMessagesRef=useRef(null);const scrollTimeoutRef=useRef(null);const lastMessageCountRef=useRef(0);const{messages,isConnected,isTyping,typingUsers,connectionError,serverStats,isLoadingStats,sendMessage,handleTyping,reconnect,refreshStats,getChatStats,userInfo}=useChat();const scrollToBottom=function(){let force=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;if(force||!isUserScrolling){var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});setUnreadCount(0);// Clear unread count when scrolling to bottom\n}};const checkIfUserIsAtBottom=()=>{if(!chatMessagesRef.current)return true;const{scrollTop,scrollHeight,clientHeight}=chatMessagesRef.current;const threshold=100;// pixels from bottom\nreturn scrollHeight-scrollTop-clientHeight<threshold;};const handleScroll=()=>{// Clear any existing timeout\nif(scrollTimeoutRef.current){clearTimeout(scrollTimeoutRef.current);}const isAtBottom=checkIfUserIsAtBottom();setIsUserScrolling(!isAtBottom);// Clear unread count if user scrolls to bottom\nif(isAtBottom&&unreadCount>0){setUnreadCount(0);}// Set a timeout to prevent auto-scroll interference\nscrollTimeoutRef.current=setTimeout(()=>{scrollTimeoutRef.current=null;},150);};const handleScrollToBottomClick=()=>{setIsUserScrolling(false);scrollToBottom(true);};useEffect(()=>{// Only auto-scroll for new messages if user hasn't manually scrolled up\n// and no scroll timeout is active (meaning user isn't currently scrolling)\nconst lastMessage=messages[messages.length-1];const isOwnMessage=lastMessage===null||lastMessage===void 0?void 0:lastMessage.isOwnMessage;const newMessageAdded=messages.length>lastMessageCountRef.current;if(newMessageAdded&&!scrollTimeoutRef.current){if(isOwnMessage){// Always scroll to bottom for user's own messages\nsetIsUserScrolling(false);scrollToBottom(true);}else{// Only scroll if user is already at bottom\nif(!isUserScrolling){scrollToBottom(false);}else{// Increment unread count if user is scrolled up\nsetUnreadCount(prev=>prev+1);}}}lastMessageCountRef.current=messages.length;},[messages]);// Removed isUserScrolling from dependencies\n// Reset user scrolling state when they send a message\nuseEffect(()=>{var _messages;if(messages.length>0&&(_messages=messages[messages.length-1])!==null&&_messages!==void 0&&_messages.isOwnMessage){setIsUserScrolling(false);setUnreadCount(0);}},[messages]);// Show connection error temporarily\nuseEffect(()=>{if(connectionError){setShowConnectionError(true);const timer=setTimeout(()=>setShowConnectionError(false),5000);return()=>clearTimeout(timer);}},[connectionError]);// Cleanup timeout on unmount\nuseEffect(()=>{return()=>{if(scrollTimeoutRef.current){clearTimeout(scrollTimeoutRef.current);}};},[]);const handleSendMessage=e=>{e.preventDefault();if(!newMessage.trim()||!isConnected)return;const success=sendMessage(newMessage);if(success){var _inputRef$current;setNewMessage('');setIsUserScrolling(false);// Ensure we scroll to bottom after sending\n(_inputRef$current=inputRef.current)===null||_inputRef$current===void 0?void 0:_inputRef$current.focus();}};const handleInputChange=e=>{const value=e.target.value;setNewMessage(value);// Send typing indicator\nif(value.trim()&&!isTyping){handleTyping(true);}else if(!value.trim()&&isTyping){handleTyping(false);}};const handleInputBlur=()=>{// Stop typing when input loses focus\nif(isTyping){handleTyping(false);}};const getMessageType=message=>{if(message.type==='system')return'system';if(message.type==='bet')return'bet';if(message.isOwnMessage)return'own';return'user';};const getUserLevel=username=>{// Generate consistent level based on username\nconst hash=username.split('').reduce((acc,char)=>{return acc+char.charCodeAt(0);},0);return hash%50+1;};const generateAvatar=name=>{const colors=['#8b5cf6','#a855f7','#06b6d4','#10b981','#f59e0b','#ef4444','#ec4899','#8b5cf6'];const colorIndex=name.charCodeAt(0)%colors.length;return/*#__PURE__*/_jsx(\"div\",{className:\"generated-avatar-mobile\",style:{backgroundColor:colors[colorIndex]},children:name.charAt(0).toUpperCase()});};const formatTypingUsers=()=>{if(typingUsers.length===0)return'';if(typingUsers.length===1)return\"\".concat(typingUsers[0],\" is typing...\");if(typingUsers.length===2)return\"\".concat(typingUsers[0],\" and \").concat(typingUsers[1],\" are typing...\");return\"\".concat(typingUsers[0],\" and \").concat(typingUsers.length-1,\" others are typing...\");};const stats=getChatStats();return/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-chat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-chat-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-title-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-icon\",children:\"\\uD83D\\uDCAC\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"chat-title\",children:\"Degen Chat\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-status\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"status-dot \".concat(isConnected?'connected':'disconnected'),children:isConnected?/*#__PURE__*/_jsx(Wifi,{size:8}):/*#__PURE__*/_jsx(WifiOff,{size:8})}),/*#__PURE__*/_jsx(\"span\",{className:\"online-count\",children:isLoadingStats?'...':serverStats.connectedUsers})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-header-controls\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:refreshStats,className:\"refresh-btn-mobile\",title:\"Refresh\",disabled:isLoadingStats,children:/*#__PURE__*/_jsx(RefreshCw,{size:12,className:isLoadingStats?'spinning':''})}),!isConnected&&/*#__PURE__*/_jsx(\"button\",{onClick:reconnect,className:\"reconnect-btn-mobile\",title:\"Reconnect\",children:/*#__PURE__*/_jsx(RefreshCw,{size:12})})]})]}),showConnectionError&&/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-connection-error\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u26A0\\uFE0F Connection failed. \"}),/*#__PURE__*/_jsx(\"button\",{onClick:reconnect,className:\"error-reconnect-btn-mobile\",children:\"Reconnect\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"live-airdrop-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"airdrop-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"live-indicator\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"live-dot\"}),/*#__PURE__*/_jsx(\"span\",{children:\"LIVE\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"airdrop-title\",children:\"JACKPOT\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"airdrop-amount\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"currency-symbol\",children:\"\\u2248\"}),/*#__PURE__*/_jsx(\"span\",{className:\"amount\",children:((_serverStats$gameStat=serverStats.gameState)===null||_serverStats$gameStat===void 0?void 0:(_serverStats$gameStat2=_serverStats$gameStat.jackpot)===null||_serverStats$gameStat2===void 0?void 0:_serverStats$gameStat2.toFixed(3))||'0.000'}),/*#__PURE__*/_jsx(Users,{size:16,className:\"users-icon\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-chat-messages\",ref:chatMessagesRef,onScroll:handleScroll,children:[messages.length===0&&isConnected&&/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-chat-empty\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-icon\",children:\"\\uD83D\\uDCAC\"}),/*#__PURE__*/_jsx(\"p\",{children:\"No messages yet!\"}),/*#__PURE__*/_jsx(\"small\",{children:\"Start the conversation\"})]}),messages.map(message=>/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-message \".concat(getMessageType(message)),children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-avatar\",children:generateAvatar(message.username||message.user)}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-header\",children:[message.type==='system'?/*#__PURE__*/_jsx(\"span\",{className:\"username system\",children:\"System\"}):message.type==='bet'?/*#__PURE__*/_jsx(\"span\",{className:\"username bet\",children:\"\\uD83C\\uDFB0 Bet\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"username\",children:message.username}),/*#__PURE__*/_jsx(\"span\",{className:\"user-level\",children:getUserLevel(message.username)}),message.username===userInfo.username&&userInfo.isPremium&&/*#__PURE__*/_jsx(\"span\",{className:\"premium-badge-mobile\",children:\"\\u2B50\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"timestamp\",children:message.formattedTime})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-text\",children:message.message})]})]},message.id)),typingUsers.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-typing-indicator\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"typing-dots-mobile\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsx(\"span\",{className:\"typing-text-mobile\",children:formatTypingUsers()})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef}),isUserScrolling&&unreadCount>0&&/*#__PURE__*/_jsxs(\"button\",{className:\"new-messages-indicator\",onClick:handleScrollToBottomClick,children:[/*#__PURE__*/_jsx(\"span\",{className:\"new-message-count\",children:unreadCount}),/*#__PURE__*/_jsxs(\"span\",{className:\"new-message-text\",children:[\"new message\",unreadCount>1?'s':'']}),/*#__PURE__*/_jsx(\"span\",{className:\"scroll-down-arrow\",children:\"\\u2193\"})]})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"mobile-message-input\",onSubmit:handleSendMessage,children:[/*#__PURE__*/_jsx(\"input\",{ref:inputRef,type:\"text\",value:newMessage,onChange:handleInputChange,onBlur:handleInputBlur,placeholder:isConnected?\"Type Message Here...\":\"Connecting...\",className:\"message-input\",maxLength:500,disabled:!isConnected}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-btn\",disabled:!newMessage.trim()||!isConnected,children:/*#__PURE__*/_jsx(Send,{size:16})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mobile-chat-footer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-rules\",children:/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCAC Chat Rules\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-count\",children:[/*#__PURE__*/_jsx(Users,{size:12}),/*#__PURE__*/_jsx(\"span\",{children:stats.totalMessages})]}),userInfo.isRealUser&&/*#__PURE__*/_jsx(\"div\",{className:\"telegram-badge-mobile\",children:\"\\uD83D\\uDCF1 Telegram\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"server-status-mobile\",children:[\"\\uD83C\\uDF10 \",serverStats.serverStatus]})]})]});};export default MobileChat;","map":{"version":3,"names":["React","useState","useEffect","useRef","Send","Users","Wifi","WifiOff","RefreshCw","useChat","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MobileChat","_serverStats$gameStat","_serverStats$gameStat2","newMessage","setNewMessage","showConnectionError","setShowConnectionError","isUserScrolling","setIsUserScrolling","unreadCount","setUnreadCount","messagesEndRef","inputRef","chatMessagesRef","scrollTimeoutRef","lastMessageCountRef","messages","isConnected","isTyping","typingUsers","connectionError","serverStats","isLoadingStats","sendMessage","handleTyping","reconnect","refreshStats","getChatStats","userInfo","scrollToBottom","force","arguments","length","undefined","_messagesEndRef$curre","current","scrollIntoView","behavior","checkIfUserIsAtBottom","scrollTop","scrollHeight","clientHeight","threshold","handleScroll","clearTimeout","isAtBottom","setTimeout","handleScrollToBottomClick","lastMessage","isOwnMessage","newMessageAdded","prev","_messages","timer","handleSendMessage","e","preventDefault","trim","success","_inputRef$current","focus","handleInputChange","value","target","handleInputBlur","getMessageType","message","type","getUserLevel","username","hash","split","reduce","acc","char","charCodeAt","generateAvatar","name","colors","colorIndex","className","style","backgroundColor","children","charAt","toUpperCase","formatTypingUsers","concat","stats","size","connectedUsers","onClick","title","disabled","gameState","jackpot","toFixed","ref","onScroll","map","user","isPremium","formattedTime","id","onSubmit","onChange","onBlur","placeholder","maxLength","totalMessages","isRealUser","serverStatus"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/src/components/MobileChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Send, Users, Wifi, WifiOff, RefreshCw } from 'lucide-react';\nimport useChat from '../hooks/useChat';\nimport './MobileChat.css';\n\nconst MobileChat = () => {\n  const [newMessage, setNewMessage] = useState('');\n  const [showConnectionError, setShowConnectionError] = useState(false);\n  const [isUserScrolling, setIsUserScrolling] = useState(false);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const chatMessagesRef = useRef(null);\n  const scrollTimeoutRef = useRef(null);\n  const lastMessageCountRef = useRef(0);\n\n  const {\n    messages,\n    isConnected,\n    isTyping,\n    typingUsers,\n    connectionError,\n    serverStats,\n    isLoadingStats,\n    sendMessage,\n    handleTyping,\n    reconnect,\n    refreshStats,\n    getChatStats,\n    userInfo\n  } = useChat();\n\n  const scrollToBottom = (force = false) => {\n    if (force || !isUserScrolling) {\n      messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n      setUnreadCount(0); // Clear unread count when scrolling to bottom\n    }\n  };\n\n  const checkIfUserIsAtBottom = () => {\n    if (!chatMessagesRef.current) return true;\n    \n    const { scrollTop, scrollHeight, clientHeight } = chatMessagesRef.current;\n    const threshold = 100; // pixels from bottom\n    return scrollHeight - scrollTop - clientHeight < threshold;\n  };\n\n  const handleScroll = () => {\n    // Clear any existing timeout\n    if (scrollTimeoutRef.current) {\n      clearTimeout(scrollTimeoutRef.current);\n    }\n    \n    const isAtBottom = checkIfUserIsAtBottom();\n    setIsUserScrolling(!isAtBottom);\n    \n    // Clear unread count if user scrolls to bottom\n    if (isAtBottom && unreadCount > 0) {\n      setUnreadCount(0);\n    }\n    \n    // Set a timeout to prevent auto-scroll interference\n    scrollTimeoutRef.current = setTimeout(() => {\n      scrollTimeoutRef.current = null;\n    }, 150);\n  };\n\n  const handleScrollToBottomClick = () => {\n    setIsUserScrolling(false);\n    scrollToBottom(true);\n  };\n\n  useEffect(() => {\n    // Only auto-scroll for new messages if user hasn't manually scrolled up\n    // and no scroll timeout is active (meaning user isn't currently scrolling)\n    const lastMessage = messages[messages.length - 1];\n    const isOwnMessage = lastMessage?.isOwnMessage;\n    const newMessageAdded = messages.length > lastMessageCountRef.current;\n    \n    if (newMessageAdded && !scrollTimeoutRef.current) {\n      if (isOwnMessage) {\n        // Always scroll to bottom for user's own messages\n        setIsUserScrolling(false);\n        scrollToBottom(true);\n      } else {\n        // Only scroll if user is already at bottom\n        if (!isUserScrolling) {\n          scrollToBottom(false);\n        } else {\n          // Increment unread count if user is scrolled up\n          setUnreadCount(prev => prev + 1);\n        }\n      }\n    }\n    \n    lastMessageCountRef.current = messages.length;\n  }, [messages]); // Removed isUserScrolling from dependencies\n\n  // Reset user scrolling state when they send a message\n  useEffect(() => {\n    if (messages.length > 0 && messages[messages.length - 1]?.isOwnMessage) {\n      setIsUserScrolling(false);\n      setUnreadCount(0);\n    }\n  }, [messages]);\n\n  // Show connection error temporarily\n  useEffect(() => {\n    if (connectionError) {\n      setShowConnectionError(true);\n      const timer = setTimeout(() => setShowConnectionError(false), 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [connectionError]);\n\n  // Cleanup timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (scrollTimeoutRef.current) {\n        clearTimeout(scrollTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    if (!newMessage.trim() || !isConnected) return;\n\n    const success = sendMessage(newMessage);\n    if (success) {\n      setNewMessage('');\n      setIsUserScrolling(false); // Ensure we scroll to bottom after sending\n      inputRef.current?.focus();\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setNewMessage(value);\n    \n    // Send typing indicator\n    if (value.trim() && !isTyping) {\n      handleTyping(true);\n    } else if (!value.trim() && isTyping) {\n      handleTyping(false);\n    }\n  };\n\n  const handleInputBlur = () => {\n    // Stop typing when input loses focus\n    if (isTyping) {\n      handleTyping(false);\n    }\n  };\n\n  const getMessageType = (message) => {\n    if (message.type === 'system') return 'system';\n    if (message.type === 'bet') return 'bet';\n    if (message.isOwnMessage) return 'own';\n    return 'user';\n  };\n\n  const getUserLevel = (username) => {\n    // Generate consistent level based on username\n    const hash = username.split('').reduce((acc, char) => {\n      return acc + char.charCodeAt(0);\n    }, 0);\n    return (hash % 50) + 1;\n  };\n\n  const generateAvatar = (name) => {\n    const colors = ['#8b5cf6', '#a855f7', '#06b6d4', '#10b981', '#f59e0b', '#ef4444', '#ec4899', '#8b5cf6'];\n    const colorIndex = name.charCodeAt(0) % colors.length;\n    \n    return (\n      <div \n        className=\"generated-avatar-mobile\"\n        style={{ backgroundColor: colors[colorIndex] }}\n      >\n        {name.charAt(0).toUpperCase()}\n      </div>\n    );\n  };\n\n  const formatTypingUsers = () => {\n    if (typingUsers.length === 0) return '';\n    if (typingUsers.length === 1) return `${typingUsers[0]} is typing...`;\n    if (typingUsers.length === 2) return `${typingUsers[0]} and ${typingUsers[1]} are typing...`;\n    return `${typingUsers[0]} and ${typingUsers.length - 1} others are typing...`;\n  };\n\n  const stats = getChatStats();\n\n  return (\n    <div className=\"mobile-chat-container\">\n      {/* Chat Header */}\n      <div className=\"mobile-chat-header\">\n        <div className=\"chat-title-section\">\n          <div className=\"chat-icon\">💬</div>\n          <div className=\"chat-info\">\n            <span className=\"chat-title\">Degen Chat</span>\n            <div className=\"chat-status\">\n              <div className={`status-dot ${isConnected ? 'connected' : 'disconnected'}`}>\n                {isConnected ? <Wifi size={8} /> : <WifiOff size={8} />}\n              </div>\n              <span className=\"online-count\">\n                {isLoadingStats ? '...' : serverStats.connectedUsers}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"mobile-header-controls\">\n          <button \n            onClick={refreshStats} \n            className=\"refresh-btn-mobile\"\n            title=\"Refresh\"\n            disabled={isLoadingStats}\n          >\n            <RefreshCw size={12} className={isLoadingStats ? 'spinning' : ''} />\n          </button>\n          {!isConnected && (\n            <button \n              onClick={reconnect} \n              className=\"reconnect-btn-mobile\"\n              title=\"Reconnect\"\n            >\n              <RefreshCw size={12} />\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Connection Error Banner */}\n      {showConnectionError && (\n        <div className=\"mobile-connection-error\">\n          <span>⚠️ Connection failed. </span>\n          <button onClick={reconnect} className=\"error-reconnect-btn-mobile\">\n            Reconnect\n          </button>\n        </div>\n      )}\n\n      {/* Live Airdrop Section - Using real jackpot data */}\n      <div className=\"live-airdrop-section\">\n        <div className=\"airdrop-header\">\n          <div className=\"live-indicator\">\n            <div className=\"live-dot\"></div>\n            <span>LIVE</span>\n          </div>\n          <div className=\"airdrop-title\">JACKPOT</div>\n        </div>\n        <div className=\"airdrop-amount\">\n          <span className=\"currency-symbol\">≈</span>\n          <span className=\"amount\">\n            {serverStats.gameState?.jackpot?.toFixed(3) || '0.000'}\n          </span>\n          <Users size={16} className=\"users-icon\" />\n        </div>\n      </div>\n\n      {/* Chat Messages */}\n      <div className=\"mobile-chat-messages\" ref={chatMessagesRef} onScroll={handleScroll}>\n        {messages.length === 0 && isConnected && (\n          <div className=\"mobile-chat-empty\">\n            <div className=\"chat-icon\">💬</div>\n            <p>No messages yet!</p>\n            <small>Start the conversation</small>\n          </div>\n        )}\n\n        {messages.map((message) => (\n          <div key={message.id} className={`mobile-message ${getMessageType(message)}`}>\n            <div className=\"message-avatar\">\n              {generateAvatar(message.username || message.user)}\n            </div>\n            <div className=\"message-content\">\n              <div className=\"message-header\">\n                {message.type === 'system' ? (\n                  <span className=\"username system\">System</span>\n                ) : message.type === 'bet' ? (\n                  <span className=\"username bet\">🎰 Bet</span>\n                ) : (\n                  <>\n                    <span className=\"username\">{message.username}</span>\n                    <span className=\"user-level\">{getUserLevel(message.username)}</span>\n                    {message.username === userInfo.username && userInfo.isPremium && (\n                      <span className=\"premium-badge-mobile\">⭐</span>\n                    )}\n                  </>\n                )}\n                <span className=\"timestamp\">{message.formattedTime}</span>\n              </div>\n              <div className=\"message-text\">\n                {message.message}\n              </div>\n            </div>\n          </div>\n        ))}\n\n        {/* Typing Indicator */}\n        {typingUsers.length > 0 && (\n          <div className=\"mobile-typing-indicator\">\n            <div className=\"typing-dots-mobile\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n            <span className=\"typing-text-mobile\">{formatTypingUsers()}</span>\n          </div>\n        )}\n\n        <div ref={messagesEndRef} />\n\n        {/* New Messages Indicator */}\n        {isUserScrolling && unreadCount > 0 && (\n          <button \n            className=\"new-messages-indicator\"\n            onClick={handleScrollToBottomClick}\n          >\n            <span className=\"new-message-count\">{unreadCount}</span>\n            <span className=\"new-message-text\">new message{unreadCount > 1 ? 's' : ''}</span>\n            <span className=\"scroll-down-arrow\">↓</span>\n          </button>\n        )}\n      </div>\n\n      {/* Message Input */}\n      <form className=\"mobile-message-input\" onSubmit={handleSendMessage}>\n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={newMessage}\n          onChange={handleInputChange}\n          onBlur={handleInputBlur}\n          placeholder={isConnected ? \"Type Message Here...\" : \"Connecting...\"}\n          className=\"message-input\"\n          maxLength={500}\n          disabled={!isConnected}\n        />\n        <button \n          type=\"submit\" \n          className=\"send-btn\" \n          disabled={!newMessage.trim() || !isConnected}\n        >\n          <Send size={16} />\n        </button>\n      </form>\n\n      {/* Chat Footer */}\n      <div className=\"mobile-chat-footer\">\n        <div className=\"chat-rules\">\n          <span>💬 Chat Rules</span>\n        </div>\n        <div className=\"user-count\">\n          <Users size={12} />\n          <span>{stats.totalMessages}</span>\n        </div>\n        {userInfo.isRealUser && (\n          <div className=\"telegram-badge-mobile\">\n            📱 Telegram\n          </div>\n        )}\n        <div className=\"server-status-mobile\">\n          🌐 {serverStats.serverStatus}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MobileChat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}