{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.writeString = exports.stringToCell = exports.readString = void 0;\nconst Builder_1 = require(\"../Builder\");\nfunction readBuffer(slice) {\n  // Check consistency\n  if (slice.remainingBits % 8 !== 0) {\n    throw new Error(`Invalid string length: ${slice.remainingBits}`);\n  }\n  if (slice.remainingRefs !== 0 && slice.remainingRefs !== 1) {\n    throw new Error(`invalid number of refs: ${slice.remainingRefs}`);\n  }\n  // Read string\n  let res;\n  if (slice.remainingBits === 0) {\n    res = Buffer.alloc(0);\n  } else {\n    res = slice.loadBuffer(slice.remainingBits / 8);\n  }\n  // Read tail\n  if (slice.remainingRefs === 1) {\n    res = Buffer.concat([res, readBuffer(slice.loadRef().beginParse())]);\n  }\n  return res;\n}\nfunction readString(slice) {\n  return readBuffer(slice).toString();\n}\nexports.readString = readString;\nfunction writeBuffer(src, builder) {\n  if (src.length > 0) {\n    let bytes = Math.floor(builder.availableBits / 8);\n    if (src.length > bytes) {\n      let a = src.subarray(0, bytes);\n      let t = src.subarray(bytes);\n      builder = builder.storeBuffer(a);\n      let bb = (0, Builder_1.beginCell)();\n      writeBuffer(t, bb);\n      builder = builder.storeRef(bb.endCell());\n    } else {\n      builder = builder.storeBuffer(src);\n    }\n  }\n}\nfunction stringToCell(src) {\n  let builder = (0, Builder_1.beginCell)();\n  writeBuffer(Buffer.from(src), builder);\n  return builder.endCell();\n}\nexports.stringToCell = stringToCell;\nfunction writeString(src, builder) {\n  writeBuffer(Buffer.from(src), builder);\n}\nexports.writeString = writeString;","map":{"version":3,"names":["Object","defineProperty","exports","value","writeString","stringToCell","readString","Builder_1","require","readBuffer","slice","remainingBits","Error","remainingRefs","res","Buffer","alloc","loadBuffer","concat","loadRef","beginParse","toString","writeBuffer","src","builder","length","bytes","Math","floor","availableBits","a","subarray","t","storeBuffer","bb","beginCell","storeRef","endCell","from"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/node_modules/@ton/core/dist/boc/utils/strings.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeString = exports.stringToCell = exports.readString = void 0;\nconst Builder_1 = require(\"../Builder\");\nfunction readBuffer(slice) {\n    // Check consistency\n    if (slice.remainingBits % 8 !== 0) {\n        throw new Error(`Invalid string length: ${slice.remainingBits}`);\n    }\n    if (slice.remainingRefs !== 0 && slice.remainingRefs !== 1) {\n        throw new Error(`invalid number of refs: ${slice.remainingRefs}`);\n    }\n    // Read string\n    let res;\n    if (slice.remainingBits === 0) {\n        res = Buffer.alloc(0);\n    }\n    else {\n        res = slice.loadBuffer(slice.remainingBits / 8);\n    }\n    // Read tail\n    if (slice.remainingRefs === 1) {\n        res = Buffer.concat([res, readBuffer(slice.loadRef().beginParse())]);\n    }\n    return res;\n}\nfunction readString(slice) {\n    return readBuffer(slice).toString();\n}\nexports.readString = readString;\nfunction writeBuffer(src, builder) {\n    if (src.length > 0) {\n        let bytes = Math.floor(builder.availableBits / 8);\n        if (src.length > bytes) {\n            let a = src.subarray(0, bytes);\n            let t = src.subarray(bytes);\n            builder = builder.storeBuffer(a);\n            let bb = (0, Builder_1.beginCell)();\n            writeBuffer(t, bb);\n            builder = builder.storeRef(bb.endCell());\n        }\n        else {\n            builder = builder.storeBuffer(src);\n        }\n    }\n}\nfunction stringToCell(src) {\n    let builder = (0, Builder_1.beginCell)();\n    writeBuffer(Buffer.from(src), builder);\n    return builder.endCell();\n}\nexports.stringToCell = stringToCell;\nfunction writeString(src, builder) {\n    writeBuffer(Buffer.from(src), builder);\n}\nexports.writeString = writeString;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}