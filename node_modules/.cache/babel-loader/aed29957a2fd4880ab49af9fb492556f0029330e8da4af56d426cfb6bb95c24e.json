{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport apiService from '../services/apiService';\nconst useOnlineCount = () => {\n  _s();\n  const [onlineCount, setOnlineCount] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchOnlineCount = async () => {\n    setIsLoading(true);\n    try {\n      const stats = await apiService.getServerStats();\n      setOnlineCount(stats.connectedUsers || 0);\n    } catch (error) {\n      console.error('Failed to fetch online count:', error);\n      setOnlineCount(0);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    // Fetch initial count\n    fetchOnlineCount();\n\n    // Update every 30 seconds\n    const interval = setInterval(fetchOnlineCount, 30000);\n    return () => clearInterval(interval);\n  }, []);\n  return {\n    onlineCount,\n    isLoading,\n    refetch: fetchOnlineCount\n  };\n};\n_s(useOnlineCount, \"VaY0zL/3rhj8WbwXPO3Znu+G94s=\");\nexport default useOnlineCount;","map":{"version":3,"names":["useState","useEffect","apiService","useOnlineCount","_s","onlineCount","setOnlineCount","isLoading","setIsLoading","fetchOnlineCount","stats","getServerStats","connectedUsers","error","console","interval","setInterval","clearInterval","refetch"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/src/hooks/useOnlineCount.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport apiService from '../services/apiService';\r\n\r\nconst useOnlineCount = () => {\r\n  const [onlineCount, setOnlineCount] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const fetchOnlineCount = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const stats = await apiService.getServerStats();\r\n      setOnlineCount(stats.connectedUsers || 0);\r\n    } catch (error) {\r\n      console.error('Failed to fetch online count:', error);\r\n      setOnlineCount(0);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch initial count\r\n    fetchOnlineCount();\r\n\r\n    // Update every 30 seconds\r\n    const interval = setInterval(fetchOnlineCount, 30000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return { onlineCount, isLoading, refetch: fetchOnlineCount };\r\n};\r\n\r\nexport default useOnlineCount;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,wBAAwB;AAE/C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnCD,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAME,KAAK,GAAG,MAAMR,UAAU,CAACS,cAAc,CAAC,CAAC;MAC/CL,cAAc,CAACI,KAAK,CAACE,cAAc,IAAI,CAAC,CAAC;IAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDP,cAAc,CAAC,CAAC,CAAC;IACnB,CAAC,SAAS;MACRE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAEDP,SAAS,CAAC,MAAM;IACd;IACAQ,gBAAgB,CAAC,CAAC;;IAElB;IACA,MAAMM,QAAQ,GAAGC,WAAW,CAACP,gBAAgB,EAAE,KAAK,CAAC;IAErD,OAAO,MAAMQ,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEV,WAAW;IAAEE,SAAS;IAAEW,OAAO,EAAET;EAAiB,CAAC;AAC9D,CAAC;AAACL,EAAA,CA5BID,cAAc;AA8BpB,eAAeA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}