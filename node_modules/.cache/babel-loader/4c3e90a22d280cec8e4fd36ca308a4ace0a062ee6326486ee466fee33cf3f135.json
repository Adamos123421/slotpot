{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.paddedBufferToBits = exports.bitsToPaddedBuffer = void 0;\nconst BitBuilder_1 = require(\"../BitBuilder\");\nconst BitString_1 = require(\"../BitString\");\nfunction bitsToPaddedBuffer(bits) {\n  // Create builder\n  let builder = new BitBuilder_1.BitBuilder(Math.ceil(bits.length / 8) * 8);\n  builder.writeBits(bits);\n  // Apply padding\n  let padding = Math.ceil(bits.length / 8) * 8 - bits.length;\n  for (let i = 0; i < padding; i++) {\n    if (i === 0) {\n      builder.writeBit(1);\n    } else {\n      builder.writeBit(0);\n    }\n  }\n  return builder.buffer();\n}\nexports.bitsToPaddedBuffer = bitsToPaddedBuffer;\nfunction paddedBufferToBits(buff) {\n  let bitLen = 0;\n  // Finding rightmost non-zero byte in the buffer\n  for (let i = buff.length - 1; i >= 0; i--) {\n    if (buff[i] !== 0) {\n      const testByte = buff[i];\n      // Looking for a rightmost set padding bit\n      let bitPos = testByte & -testByte;\n      if ((bitPos & 1) == 0) {\n        // It's power of 2 (only one bit set)\n        bitPos = Math.log2(bitPos) + 1;\n      }\n      if (i > 0) {\n        // If we are dealing with more than 1 byte buffer\n        bitLen = i << 3; //Number of full bytes * 8\n      }\n      bitLen += 8 - bitPos;\n      break;\n    }\n  }\n  return new BitString_1.BitString(buff, 0, bitLen);\n}\nexports.paddedBufferToBits = paddedBufferToBits;","map":{"version":3,"names":["Object","defineProperty","exports","value","paddedBufferToBits","bitsToPaddedBuffer","BitBuilder_1","require","BitString_1","bits","builder","BitBuilder","Math","ceil","length","writeBits","padding","i","writeBit","buffer","buff","bitLen","testByte","bitPos","log2","BitString"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/node_modules/@ton/core/dist/boc/utils/paddedBits.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paddedBufferToBits = exports.bitsToPaddedBuffer = void 0;\nconst BitBuilder_1 = require(\"../BitBuilder\");\nconst BitString_1 = require(\"../BitString\");\nfunction bitsToPaddedBuffer(bits) {\n    // Create builder\n    let builder = new BitBuilder_1.BitBuilder(Math.ceil(bits.length / 8) * 8);\n    builder.writeBits(bits);\n    // Apply padding\n    let padding = Math.ceil(bits.length / 8) * 8 - bits.length;\n    for (let i = 0; i < padding; i++) {\n        if (i === 0) {\n            builder.writeBit(1);\n        }\n        else {\n            builder.writeBit(0);\n        }\n    }\n    return builder.buffer();\n}\nexports.bitsToPaddedBuffer = bitsToPaddedBuffer;\nfunction paddedBufferToBits(buff) {\n    let bitLen = 0;\n    // Finding rightmost non-zero byte in the buffer\n    for (let i = buff.length - 1; i >= 0; i--) {\n        if (buff[i] !== 0) {\n            const testByte = buff[i];\n            // Looking for a rightmost set padding bit\n            let bitPos = testByte & -testByte;\n            if ((bitPos & 1) == 0) {\n                // It's power of 2 (only one bit set)\n                bitPos = Math.log2(bitPos) + 1;\n            }\n            if (i > 0) {\n                // If we are dealing with more than 1 byte buffer\n                bitLen = i << 3; //Number of full bytes * 8\n            }\n            bitLen += 8 - bitPos;\n            break;\n        }\n    }\n    return new BitString_1.BitString(buff, 0, bitLen);\n}\nexports.paddedBufferToBits = paddedBufferToBits;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAGF,OAAO,CAACG,kBAAkB,GAAG,KAAK,CAAC;AAChE,MAAMC,YAAY,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC7C,MAAMC,WAAW,GAAGD,OAAO,CAAC,cAAc,CAAC;AAC3C,SAASF,kBAAkBA,CAACI,IAAI,EAAE;EAC9B;EACA,IAAIC,OAAO,GAAG,IAAIJ,YAAY,CAACK,UAAU,CAACC,IAAI,CAACC,IAAI,CAACJ,IAAI,CAACK,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;EACzEJ,OAAO,CAACK,SAAS,CAACN,IAAI,CAAC;EACvB;EACA,IAAIO,OAAO,GAAGJ,IAAI,CAACC,IAAI,CAACJ,IAAI,CAACK,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAGL,IAAI,CAACK,MAAM;EAC1D,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,OAAO,EAAEC,CAAC,EAAE,EAAE;IAC9B,IAAIA,CAAC,KAAK,CAAC,EAAE;MACTP,OAAO,CAACQ,QAAQ,CAAC,CAAC,CAAC;IACvB,CAAC,MACI;MACDR,OAAO,CAACQ,QAAQ,CAAC,CAAC,CAAC;IACvB;EACJ;EACA,OAAOR,OAAO,CAACS,MAAM,CAAC,CAAC;AAC3B;AACAjB,OAAO,CAACG,kBAAkB,GAAGA,kBAAkB;AAC/C,SAASD,kBAAkBA,CAACgB,IAAI,EAAE;EAC9B,IAAIC,MAAM,GAAG,CAAC;EACd;EACA,KAAK,IAAIJ,CAAC,GAAGG,IAAI,CAACN,MAAM,GAAG,CAAC,EAAEG,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IACvC,IAAIG,IAAI,CAACH,CAAC,CAAC,KAAK,CAAC,EAAE;MACf,MAAMK,QAAQ,GAAGF,IAAI,CAACH,CAAC,CAAC;MACxB;MACA,IAAIM,MAAM,GAAGD,QAAQ,GAAG,CAACA,QAAQ;MACjC,IAAI,CAACC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QACnB;QACAA,MAAM,GAAGX,IAAI,CAACY,IAAI,CAACD,MAAM,CAAC,GAAG,CAAC;MAClC;MACA,IAAIN,CAAC,GAAG,CAAC,EAAE;QACP;QACAI,MAAM,GAAGJ,CAAC,IAAI,CAAC,CAAC,CAAC;MACrB;MACAI,MAAM,IAAI,CAAC,GAAGE,MAAM;MACpB;IACJ;EACJ;EACA,OAAO,IAAIf,WAAW,CAACiB,SAAS,CAACL,IAAI,EAAE,CAAC,EAAEC,MAAM,CAAC;AACrD;AACAnB,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}