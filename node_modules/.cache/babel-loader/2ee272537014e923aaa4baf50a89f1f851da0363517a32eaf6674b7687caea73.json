{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateMerkleUpdate = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst generateMerkleProof_1 = require(\"./generateMerkleProof\");\nfunction convertToMerkleUpdate(c1, c2) {\n  return (0, Builder_1.beginCell)().storeUint(4, 8).storeBuffer(c1.hash(0)).storeBuffer(c2.hash(0)).storeUint(c1.depth(0), 16).storeUint(c2.depth(0), 16).storeRef(c1).storeRef(c2).endCell({\n    exotic: true\n  });\n}\nfunction generateMerkleUpdate(dict, key, keyObject, newValue) {\n  const oldProof = (0, generateMerkleProof_1.generateMerkleProof)(dict, key, keyObject).refs[0];\n  dict.set(key, newValue);\n  const newProof = (0, generateMerkleProof_1.generateMerkleProof)(dict, key, keyObject).refs[0];\n  return convertToMerkleUpdate(oldProof, newProof);\n}\nexports.generateMerkleUpdate = generateMerkleUpdate;","map":{"version":3,"names":["Object","defineProperty","exports","value","generateMerkleUpdate","Builder_1","require","generateMerkleProof_1","convertToMerkleUpdate","c1","c2","beginCell","storeUint","storeBuffer","hash","depth","storeRef","endCell","exotic","dict","key","keyObject","newValue","oldProof","generateMerkleProof","refs","set","newProof"],"sources":["C:/Users/adams/Downloads/GLL/slotpot/node_modules/@ton/core/dist/dict/generateMerkleUpdate.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateMerkleUpdate = void 0;\nconst Builder_1 = require(\"../boc/Builder\");\nconst generateMerkleProof_1 = require(\"./generateMerkleProof\");\nfunction convertToMerkleUpdate(c1, c2) {\n    return (0, Builder_1.beginCell)()\n        .storeUint(4, 8)\n        .storeBuffer(c1.hash(0))\n        .storeBuffer(c2.hash(0))\n        .storeUint(c1.depth(0), 16)\n        .storeUint(c2.depth(0), 16)\n        .storeRef(c1)\n        .storeRef(c2)\n        .endCell({ exotic: true });\n}\nfunction generateMerkleUpdate(dict, key, keyObject, newValue) {\n    const oldProof = (0, generateMerkleProof_1.generateMerkleProof)(dict, key, keyObject).refs[0];\n    dict.set(key, newValue);\n    const newProof = (0, generateMerkleProof_1.generateMerkleProof)(dict, key, keyObject).refs[0];\n    return convertToMerkleUpdate(oldProof, newProof);\n}\nexports.generateMerkleUpdate = generateMerkleUpdate;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,oBAAoB,GAAG,KAAK,CAAC;AACrC,MAAMC,SAAS,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC3C,MAAMC,qBAAqB,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AAC9D,SAASE,qBAAqBA,CAACC,EAAE,EAAEC,EAAE,EAAE;EACnC,OAAO,CAAC,CAAC,EAAEL,SAAS,CAACM,SAAS,EAAE,CAAC,CAC5BC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CACfC,WAAW,CAACJ,EAAE,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC,CACvBD,WAAW,CAACH,EAAE,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC,CACvBF,SAAS,CAACH,EAAE,CAACM,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAC1BH,SAAS,CAACF,EAAE,CAACK,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAC1BC,QAAQ,CAACP,EAAE,CAAC,CACZO,QAAQ,CAACN,EAAE,CAAC,CACZO,OAAO,CAAC;IAAEC,MAAM,EAAE;EAAK,CAAC,CAAC;AAClC;AACA,SAASd,oBAAoBA,CAACe,IAAI,EAAEC,GAAG,EAAEC,SAAS,EAAEC,QAAQ,EAAE;EAC1D,MAAMC,QAAQ,GAAG,CAAC,CAAC,EAAEhB,qBAAqB,CAACiB,mBAAmB,EAAEL,IAAI,EAAEC,GAAG,EAAEC,SAAS,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;EAC7FN,IAAI,CAACO,GAAG,CAACN,GAAG,EAAEE,QAAQ,CAAC;EACvB,MAAMK,QAAQ,GAAG,CAAC,CAAC,EAAEpB,qBAAqB,CAACiB,mBAAmB,EAAEL,IAAI,EAAEC,GAAG,EAAEC,SAAS,CAAC,CAACI,IAAI,CAAC,CAAC,CAAC;EAC7F,OAAOjB,qBAAqB,CAACe,QAAQ,EAAEI,QAAQ,CAAC;AACpD;AACAzB,OAAO,CAACE,oBAAoB,GAAGA,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}