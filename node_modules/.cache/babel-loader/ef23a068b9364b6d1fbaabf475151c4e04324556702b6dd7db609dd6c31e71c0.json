{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.storeShardIdent = exports.loadShardIdent = void 0;\nfunction loadShardIdent(slice) {\n  if (slice.loadUint(2) !== 0) {\n    throw Error('Invalid data');\n  }\n  return {\n    shardPrefixBits: slice.loadUint(6),\n    workchainId: slice.loadInt(32),\n    shardPrefix: slice.loadUintBig(64)\n  };\n}\nexports.loadShardIdent = loadShardIdent;\nfunction storeShardIdent(src) {\n  return builder => {\n    builder.storeUint(0, 2);\n    builder.storeUint(src.shardPrefixBits, 6);\n    builder.storeInt(src.workchainId, 32);\n    builder.storeUint(src.shardPrefix, 64);\n  };\n}\nexports.storeShardIdent = storeShardIdent;","map":{"version":3,"names":["Object","defineProperty","exports","value","storeShardIdent","loadShardIdent","slice","loadUint","Error","shardPrefixBits","workchainId","loadInt","shardPrefix","loadUintBig","src","builder","storeUint","storeInt"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/node_modules/@ton/core/dist/types/ShardIdent.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.storeShardIdent = exports.loadShardIdent = void 0;\nfunction loadShardIdent(slice) {\n    if (slice.loadUint(2) !== 0) {\n        throw Error('Invalid data');\n    }\n    return {\n        shardPrefixBits: slice.loadUint(6),\n        workchainId: slice.loadInt(32),\n        shardPrefix: slice.loadUintBig(64)\n    };\n}\nexports.loadShardIdent = loadShardIdent;\nfunction storeShardIdent(src) {\n    return (builder) => {\n        builder.storeUint(0, 2);\n        builder.storeUint(src.shardPrefixBits, 6);\n        builder.storeInt(src.workchainId, 32);\n        builder.storeUint(src.shardPrefix, 64);\n    };\n}\nexports.storeShardIdent = storeShardIdent;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAGF,OAAO,CAACG,cAAc,GAAG,KAAK,CAAC;AACzD,SAASA,cAAcA,CAACC,KAAK,EAAE;EAC3B,IAAIA,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;IACzB,MAAMC,KAAK,CAAC,cAAc,CAAC;EAC/B;EACA,OAAO;IACHC,eAAe,EAAEH,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;IAClCG,WAAW,EAAEJ,KAAK,CAACK,OAAO,CAAC,EAAE,CAAC;IAC9BC,WAAW,EAAEN,KAAK,CAACO,WAAW,CAAC,EAAE;EACrC,CAAC;AACL;AACAX,OAAO,CAACG,cAAc,GAAGA,cAAc;AACvC,SAASD,eAAeA,CAACU,GAAG,EAAE;EAC1B,OAAQC,OAAO,IAAK;IAChBA,OAAO,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;IACvBD,OAAO,CAACC,SAAS,CAACF,GAAG,CAACL,eAAe,EAAE,CAAC,CAAC;IACzCM,OAAO,CAACE,QAAQ,CAACH,GAAG,CAACJ,WAAW,EAAE,EAAE,CAAC;IACrCK,OAAO,CAACC,SAAS,CAACF,GAAG,CAACF,WAAW,EAAE,EAAE,CAAC;EAC1C,CAAC;AACL;AACAV,OAAO,CAACE,eAAe,GAAGA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}