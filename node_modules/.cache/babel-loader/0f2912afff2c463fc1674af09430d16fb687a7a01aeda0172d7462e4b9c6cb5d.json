{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adams\\\\OneDrive\\\\Desktop\\\\Work\\\\slotpot\\\\src\\\\components\\\\SimpleCarousel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay } from 'swiper/modules';\nimport 'swiper/css';\nimport './SimpleCarousel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleCarousel = ({\n  players,\n  winner,\n  isSpinning,\n  onWinnerLand\n}) => {\n  _s();\n  const swiperRef = useRef(null);\n  const [animationPhase, setAnimationPhase] = useState('idle'); // 'idle', 'fast_spin', 'slow_down', 'winner_show'\n  const [isAnimating, setIsAnimating] = useState(false);\n  const animationTimeoutRef = useRef(null);\n\n  // Handle swiper initialization\n  const handleSwiperInit = swiper => {\n    swiperRef.current = swiper;\n  };\n\n  // Simple and reliable winner animation\n  const startWinnerAnimation = useCallback(winnerIndex => {\n    if (!swiperRef.current || isAnimating) return;\n    console.log('üé∞ Starting winner animation for index:', winnerIndex);\n    setIsAnimating(true);\n\n    // Clear any existing timeouts\n    if (animationTimeoutRef.current) {\n      clearTimeout(animationTimeoutRef.current);\n    }\n\n    // Check if we're already in fast spin phase (from isSpinning)\n    const alreadyFastSpinning = animationPhase === 'fast_spin';\n    const fastSpinDuration = alreadyFastSpinning ? 1000 : 2000; // Shorter if already spinning\n\n    if (!alreadyFastSpinning) {\n      // Phase 1: Fast spinning (2 seconds) - only if not already spinning\n      setAnimationPhase('fast_spin');\n      if (swiperRef.current.autoplay) {\n        swiperRef.current.autoplay.stop();\n      }\n\n      // Start very fast autoplay for spinning effect\n      swiperRef.current.params.autoplay = {\n        delay: 10,\n        disableOnInteraction: false\n      };\n      swiperRef.current.autoplay.start();\n    } else {\n      console.log('‚ö° Already fast spinning - continuing to slowdown phase');\n    }\n\n    // Phase 2: Slow down (1.5 seconds)\n    setTimeout(() => {\n      if (swiperRef.current) {\n        console.log('üéØ Starting slowdown phase');\n        setAnimationPhase('slow_down');\n\n        // Gradually slow down\n        swiperRef.current.params.autoplay.delay = 100;\n        swiperRef.current.autoplay.start();\n        setTimeout(() => {\n          if (swiperRef.current) {\n            swiperRef.current.params.autoplay.delay = 300;\n            swiperRef.current.autoplay.start();\n          }\n        }, 500);\n        setTimeout(() => {\n          if (swiperRef.current) {\n            swiperRef.current.params.autoplay.delay = 600;\n            swiperRef.current.autoplay.start();\n          }\n        }, 1000);\n      }\n    }, fastSpinDuration);\n\n    // Phase 3: Land on winner (slide to exact position)\n    setTimeout(() => {\n      if (swiperRef.current) {\n        console.log('üèÜ Landing on winner at index:', winnerIndex);\n        setAnimationPhase('winner_show');\n\n        // Stop autoplay completely\n        swiperRef.current.autoplay.stop();\n\n        // Find the actual slide that contains the winner\n        const slides = swiperRef.current.slides;\n        let actualWinnerSlideIndex = -1;\n\n        // Get winner identifying info\n        const winnerAddress = (winner === null || winner === void 0 ? void 0 : winner.address) || (winner === null || winner === void 0 ? void 0 : winner.winner) || (winner === null || winner === void 0 ? void 0 : winner.fullAddress);\n        const winnerUsername = (winner === null || winner === void 0 ? void 0 : winner.username) || (winner === null || winner === void 0 ? void 0 : winner.displayName);\n        console.log('üîç Looking for winner slide with:', {\n          winnerAddress,\n          winnerUsername\n        });\n\n        // Search through all slides to find the one with winner content\n        for (let i = 0; i < slides.length; i++) {\n          const slide = slides[i];\n\n          // Check if this slide has winner class\n          const hasWinnerClass = slide.querySelector('.player-card.winner');\n\n          // Also check by content\n          const playerNameElement = slide.querySelector('.player-name');\n          const playerName = playerNameElement === null || playerNameElement === void 0 ? void 0 : playerNameElement.textContent;\n          console.log(`Slide ${i}: hasWinnerClass=${!!hasWinnerClass}, playerName=\"${playerName}\"`);\n          if (hasWinnerClass || winnerUsername && playerName === winnerUsername || winnerAddress && playerName && playerName.includes(winnerAddress.slice(0, 6))) {\n            actualWinnerSlideIndex = i;\n            console.log('‚úÖ Found winner slide at index:', i);\n            break;\n          }\n        }\n\n        // If we found the winner slide, slide to it, otherwise use calculated index\n        const targetSlideIndex = actualWinnerSlideIndex !== -1 ? actualWinnerSlideIndex : winnerIndex; // fallback to original calculation\n\n        console.log('üéØ Sliding to slide index:', targetSlideIndex);\n\n        // Slide to winner with smooth animation\n        swiperRef.current.slideTo(targetSlideIndex, 1500, false);\n\n        // Phase 4: Lock on winner\n        setTimeout(() => {\n          console.log('üîí Winner locked in position');\n\n          // Completely stop all movement\n          if (swiperRef.current) {\n            swiperRef.current.autoplay.stop();\n            swiperRef.current.allowSlideNext = false;\n            swiperRef.current.allowSlidePrev = false;\n\n            // Force stop any ongoing transitions\n            const wrapper = swiperRef.current.wrapperEl;\n            if (wrapper) {\n              setTimeout(() => {\n                wrapper.style.transition = 'none';\n                // Lock in current position\n                const currentTransform = getComputedStyle(wrapper).transform;\n                wrapper.style.transform = currentTransform;\n              }, 1600); // After slide animation completes\n            }\n\n            // Trigger winner callback\n            onWinnerLand === null || onWinnerLand === void 0 ? void 0 : onWinnerLand();\n\n            // Keep showing winner for 6 seconds\n            animationTimeoutRef.current = setTimeout(() => {\n              resetAnimation();\n            }, 6000);\n          }\n        }, 1600); // Wait for slide animation to complete\n      }\n    }, fastSpinDuration + 1500); // Total of fast + slow phases\n  }, [isAnimating, onWinnerLand, winner, animationPhase]);\n\n  // Reset animation to normal state\n  const resetAnimation = useCallback(() => {\n    console.log('üîÑ Resetting animation to normal state');\n    if (swiperRef.current) {\n      // Re-enable swiper functionality\n      swiperRef.current.allowSlideNext = true;\n      swiperRef.current.allowSlidePrev = true;\n\n      // Reset wrapper styles\n      const wrapper = swiperRef.current.wrapperEl;\n      if (wrapper) {\n        wrapper.style.transition = '';\n        wrapper.style.transform = '';\n      }\n\n      // Reset autoplay to normal speed\n      swiperRef.current.params.autoplay = {\n        delay: 400,\n        disableOnInteraction: false\n      };\n\n      // Only restart autoplay if not in spinning state and no winner\n      if (!isSpinning && !winner) {\n        swiperRef.current.autoplay.start();\n      }\n    }\n    setAnimationPhase('idle');\n    setIsAnimating(false);\n    if (animationTimeoutRef.current) {\n      clearTimeout(animationTimeoutRef.current);\n      animationTimeoutRef.current = null;\n    }\n  }, [isSpinning, winner]);\n\n  // Handle winner announcement\n  useEffect(() => {\n    if (winner && swiperRef.current && players && !isAnimating) {\n      // Find winner in the FIRST set only (simplify)\n      const winnerIndex = players.findIndex(p => p && (p.address === winner.address || p.username === winner.username || p.address === winner.winner || p.address === winner.fullAddress || p.username === winner.displayName));\n      if (winnerIndex !== -1) {\n        console.log('üèÜ Winner found at index:', winnerIndex);\n        startWinnerAnimation(winnerIndex);\n      } else {\n        console.warn('‚ùå Winner not found in players array');\n      }\n    }\n  }, [winner, players, isAnimating, startWinnerAnimation]);\n\n  // Handle regular spinning state\n  useEffect(() => {\n    if (!swiperRef.current) return;\n    if (isSpinning && !winner && !isAnimating) {\n      // Fast spinning while waiting for winner - START IMMEDIATELY\n      console.log('üé∞ Starting fast spinning - analyzing bets...');\n      setAnimationPhase('fast_spin');\n      swiperRef.current.params.autoplay = {\n        delay: 15,\n        disableOnInteraction: false\n      };\n      swiperRef.current.autoplay.start();\n    } else if (!isSpinning && !winner && !isAnimating && animationPhase === 'idle') {\n      // Normal slow movement\n      swiperRef.current.params.autoplay = {\n        delay: 400,\n        disableOnInteraction: false\n      };\n      swiperRef.current.autoplay.start();\n    } else if (!isSpinning && animationPhase === 'fast_spin') {\n      // Stop fast spinning if isSpinning becomes false\n      console.log('üõë Stopping fast spinning');\n      setAnimationPhase('idle');\n      swiperRef.current.autoplay.stop();\n    }\n  }, [isSpinning, winner, isAnimating, animationPhase]);\n\n  // Reset when winner is cleared (new round)\n  useEffect(() => {\n    if (!winner && isAnimating) {\n      console.log('üîÑ Winner cleared - resetting animation');\n      resetAnimation();\n    }\n  }, [winner, isAnimating, resetAnimation]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (animationTimeoutRef.current) {\n        clearTimeout(animationTimeoutRef.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simple-carousel-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `carousel-arrow ${animationPhase === 'slow_down' ? 'winner-approaching' : animationPhase === 'winner_show' ? 'winner-landed' : ''}`,\n      children: \"\\u2B07\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Swiper, {\n      ref: swiperRef,\n      modules: [Autoplay],\n      spaceBetween: 10,\n      slidesPerView: \"auto\",\n      centeredSlides: true,\n      loop: true,\n      loopedSlides: Math.max(players.length, 6),\n      autoplay: {\n        delay: isSpinning && !isAnimating ? 15 : 400,\n        disableOnInteraction: false,\n        pauseOnMouseEnter: false\n      },\n      speed: animationPhase === 'fast_spin' ? 50 : 300,\n      className: `player-swiper ${isSpinning || animationPhase === 'fast_spin' ? 'spinning' : ''}`,\n      allowTouchMove: false,\n      onSwiper: handleSwiperInit,\n      children: [...Array(3)].map((_, setIndex) => players.map((player, index) => /*#__PURE__*/_jsxDEV(SwiperSlide, {\n        className: \"player-slide\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `player-card ${winner && player && (player.address === winner.address || player.username === winner.username || player.address === winner.winner || player.address === winner.fullAddress || player.username === winner.displayName) ? 'winner' : player ? 'active' : 'waiting'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-avatar\",\n            children: player ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-avatar-content\",\n              children: player.username ? player.username[0].toUpperCase() : '?'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"waiting-icon\",\n              children: \"\\u2753\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-name\",\n              children: player ? player.username || player.displayName || 'Player' : 'Waiting'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-bet\",\n              children: player ? `${(player.amount || 0).toFixed(2)} TON` : '0.00 TON'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this), winner && player && (player.address === winner.address || player.username === winner.username || player.address === winner.winner || player.address === winner.fullAddress || player.username === winner.displayName) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"winner-prize\",\n              children: [\"Won \", parseFloat(winner.prize || 0).toFixed(3), \" TON\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this), winner && player && (player.address === winner.address || player.username === winner.username || player.address === winner.winner || player.address === winner.fullAddress || player.username === winner.displayName) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"winner-crown\",\n            children: \"\\uD83D\\uDC51\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }, this)\n      }, `${setIndex}-${(player === null || player === void 0 ? void 0 : player.address) || `waiting-${index}`}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n};\n_s(SimpleCarousel, \"XmF/8FfIXAWtiCqmOiM6MTP17Ik=\");\n_c = SimpleCarousel;\nexport default SimpleCarousel;\nvar _c;\n$RefreshReg$(_c, \"SimpleCarousel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","Swiper","SwiperSlide","Autoplay","jsxDEV","_jsxDEV","SimpleCarousel","players","winner","isSpinning","onWinnerLand","_s","swiperRef","animationPhase","setAnimationPhase","isAnimating","setIsAnimating","animationTimeoutRef","handleSwiperInit","swiper","current","startWinnerAnimation","winnerIndex","console","log","clearTimeout","alreadyFastSpinning","fastSpinDuration","autoplay","stop","params","delay","disableOnInteraction","start","setTimeout","slides","actualWinnerSlideIndex","winnerAddress","address","fullAddress","winnerUsername","username","displayName","i","length","slide","hasWinnerClass","querySelector","playerNameElement","playerName","textContent","includes","slice","targetSlideIndex","slideTo","allowSlideNext","allowSlidePrev","wrapper","wrapperEl","style","transition","currentTransform","getComputedStyle","transform","resetAnimation","findIndex","p","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","modules","spaceBetween","slidesPerView","centeredSlides","loop","loopedSlides","Math","max","pauseOnMouseEnter","speed","allowTouchMove","onSwiper","Array","map","_","setIndex","player","index","toUpperCase","amount","toFixed","parseFloat","prize","_c","$RefreshReg$"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/src/components/SimpleCarousel.js"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Autoplay } from 'swiper/modules';\nimport 'swiper/css';\nimport './SimpleCarousel.css';\n\nconst SimpleCarousel = ({ \n  players, \n  winner, \n  isSpinning, \n  onWinnerLand \n}) => {\n  const swiperRef = useRef(null);\n  const [animationPhase, setAnimationPhase] = useState('idle'); // 'idle', 'fast_spin', 'slow_down', 'winner_show'\n  const [isAnimating, setIsAnimating] = useState(false);\n  const animationTimeoutRef = useRef(null);\n\n  // Handle swiper initialization\n  const handleSwiperInit = (swiper) => {\n    swiperRef.current = swiper;\n  };\n\n  // Simple and reliable winner animation\n  const startWinnerAnimation = useCallback((winnerIndex) => {\n    if (!swiperRef.current || isAnimating) return;\n    \n    console.log('üé∞ Starting winner animation for index:', winnerIndex);\n    setIsAnimating(true);\n    \n    // Clear any existing timeouts\n    if (animationTimeoutRef.current) {\n      clearTimeout(animationTimeoutRef.current);\n    }\n\n    // Check if we're already in fast spin phase (from isSpinning)\n    const alreadyFastSpinning = animationPhase === 'fast_spin';\n    const fastSpinDuration = alreadyFastSpinning ? 1000 : 2000; // Shorter if already spinning\n    \n    if (!alreadyFastSpinning) {\n      // Phase 1: Fast spinning (2 seconds) - only if not already spinning\n      setAnimationPhase('fast_spin');\n      if (swiperRef.current.autoplay) {\n        swiperRef.current.autoplay.stop();\n      }\n      \n      // Start very fast autoplay for spinning effect\n      swiperRef.current.params.autoplay = {\n        delay: 10,\n        disableOnInteraction: false,\n      };\n      swiperRef.current.autoplay.start();\n    } else {\n      console.log('‚ö° Already fast spinning - continuing to slowdown phase');\n    }\n    \n    // Phase 2: Slow down (1.5 seconds)\n    setTimeout(() => {\n      if (swiperRef.current) {\n        console.log('üéØ Starting slowdown phase');\n        setAnimationPhase('slow_down');\n        \n        // Gradually slow down\n        swiperRef.current.params.autoplay.delay = 100;\n        swiperRef.current.autoplay.start();\n        \n        setTimeout(() => {\n          if (swiperRef.current) {\n            swiperRef.current.params.autoplay.delay = 300;\n            swiperRef.current.autoplay.start();\n          }\n        }, 500);\n        \n        setTimeout(() => {\n          if (swiperRef.current) {\n            swiperRef.current.params.autoplay.delay = 600;\n            swiperRef.current.autoplay.start();\n          }\n        }, 1000);\n      }\n    }, fastSpinDuration);\n    \n    // Phase 3: Land on winner (slide to exact position)\n    setTimeout(() => {\n      if (swiperRef.current) {\n        console.log('üèÜ Landing on winner at index:', winnerIndex);\n        setAnimationPhase('winner_show');\n        \n        // Stop autoplay completely\n        swiperRef.current.autoplay.stop();\n        \n        // Find the actual slide that contains the winner\n        const slides = swiperRef.current.slides;\n        let actualWinnerSlideIndex = -1;\n        \n        // Get winner identifying info\n        const winnerAddress = winner?.address || winner?.winner || winner?.fullAddress;\n        const winnerUsername = winner?.username || winner?.displayName;\n        \n        console.log('üîç Looking for winner slide with:', { winnerAddress, winnerUsername });\n        \n        // Search through all slides to find the one with winner content\n        for (let i = 0; i < slides.length; i++) {\n          const slide = slides[i];\n          \n          // Check if this slide has winner class\n          const hasWinnerClass = slide.querySelector('.player-card.winner');\n          \n          // Also check by content\n          const playerNameElement = slide.querySelector('.player-name');\n          const playerName = playerNameElement?.textContent;\n          \n          console.log(`Slide ${i}: hasWinnerClass=${!!hasWinnerClass}, playerName=\"${playerName}\"`);\n          \n          if (hasWinnerClass || \n              (winnerUsername && playerName === winnerUsername) ||\n              (winnerAddress && playerName && playerName.includes(winnerAddress.slice(0, 6)))) {\n            actualWinnerSlideIndex = i;\n            console.log('‚úÖ Found winner slide at index:', i);\n            break;\n          }\n        }\n        \n        // If we found the winner slide, slide to it, otherwise use calculated index\n        const targetSlideIndex = actualWinnerSlideIndex !== -1 ? \n          actualWinnerSlideIndex : \n          winnerIndex; // fallback to original calculation\n          \n        console.log('üéØ Sliding to slide index:', targetSlideIndex);\n        \n        // Slide to winner with smooth animation\n        swiperRef.current.slideTo(targetSlideIndex, 1500, false);\n        \n        // Phase 4: Lock on winner\n        setTimeout(() => {\n          console.log('üîí Winner locked in position');\n          \n          // Completely stop all movement\n          if (swiperRef.current) {\n            swiperRef.current.autoplay.stop();\n            swiperRef.current.allowSlideNext = false;\n            swiperRef.current.allowSlidePrev = false;\n            \n            // Force stop any ongoing transitions\n            const wrapper = swiperRef.current.wrapperEl;\n            if (wrapper) {\n              setTimeout(() => {\n                wrapper.style.transition = 'none';\n                // Lock in current position\n                const currentTransform = getComputedStyle(wrapper).transform;\n                wrapper.style.transform = currentTransform;\n              }, 1600); // After slide animation completes\n            }\n            \n            // Trigger winner callback\n            onWinnerLand?.();\n            \n            // Keep showing winner for 6 seconds\n            animationTimeoutRef.current = setTimeout(() => {\n              resetAnimation();\n            }, 6000);\n          }\n        }, 1600); // Wait for slide animation to complete\n      }\n    }, fastSpinDuration + 1500); // Total of fast + slow phases\n    \n  }, [isAnimating, onWinnerLand, winner, animationPhase]);\n\n  // Reset animation to normal state\n  const resetAnimation = useCallback(() => {\n    console.log('üîÑ Resetting animation to normal state');\n    \n    if (swiperRef.current) {\n      // Re-enable swiper functionality\n      swiperRef.current.allowSlideNext = true;\n      swiperRef.current.allowSlidePrev = true;\n      \n      // Reset wrapper styles\n      const wrapper = swiperRef.current.wrapperEl;\n      if (wrapper) {\n        wrapper.style.transition = '';\n        wrapper.style.transform = '';\n      }\n      \n      // Reset autoplay to normal speed\n      swiperRef.current.params.autoplay = {\n        delay: 400,\n        disableOnInteraction: false,\n      };\n      \n      // Only restart autoplay if not in spinning state and no winner\n      if (!isSpinning && !winner) {\n        swiperRef.current.autoplay.start();\n      }\n    }\n    \n    setAnimationPhase('idle');\n    setIsAnimating(false);\n    \n    if (animationTimeoutRef.current) {\n      clearTimeout(animationTimeoutRef.current);\n      animationTimeoutRef.current = null;\n    }\n  }, [isSpinning, winner]);\n\n  // Handle winner announcement\n  useEffect(() => {\n    if (winner && swiperRef.current && players && !isAnimating) {\n      // Find winner in the FIRST set only (simplify)\n      const winnerIndex = players.findIndex(p => \n        p && (\n          p.address === winner.address || \n          p.username === winner.username ||\n          p.address === winner.winner ||\n          p.address === winner.fullAddress ||\n          p.username === winner.displayName\n        )\n      );\n      \n      if (winnerIndex !== -1) {\n        console.log('üèÜ Winner found at index:', winnerIndex);\n        startWinnerAnimation(winnerIndex);\n      } else {\n        console.warn('‚ùå Winner not found in players array');\n      }\n    }\n  }, [winner, players, isAnimating, startWinnerAnimation]);\n\n  // Handle regular spinning state\n  useEffect(() => {\n    if (!swiperRef.current) return;\n    \n    if (isSpinning && !winner && !isAnimating) {\n      // Fast spinning while waiting for winner - START IMMEDIATELY\n      console.log('üé∞ Starting fast spinning - analyzing bets...');\n      setAnimationPhase('fast_spin');\n      swiperRef.current.params.autoplay = {\n        delay: 15,\n        disableOnInteraction: false,\n      };\n      swiperRef.current.autoplay.start();\n    } else if (!isSpinning && !winner && !isAnimating && animationPhase === 'idle') {\n      // Normal slow movement\n      swiperRef.current.params.autoplay = {\n        delay: 400,\n        disableOnInteraction: false,\n      };\n      swiperRef.current.autoplay.start();\n    } else if (!isSpinning && animationPhase === 'fast_spin') {\n      // Stop fast spinning if isSpinning becomes false\n      console.log('üõë Stopping fast spinning');\n      setAnimationPhase('idle');\n      swiperRef.current.autoplay.stop();\n    }\n  }, [isSpinning, winner, isAnimating, animationPhase]);\n\n  // Reset when winner is cleared (new round)\n  useEffect(() => {\n    if (!winner && isAnimating) {\n      console.log('üîÑ Winner cleared - resetting animation');\n      resetAnimation();\n    }\n  }, [winner, isAnimating, resetAnimation]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (animationTimeoutRef.current) {\n        clearTimeout(animationTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"simple-carousel-container\">\n      {/* Target Arrow */}\n      <div className={`carousel-arrow ${\n        animationPhase === 'slow_down' ? 'winner-approaching' : \n        animationPhase === 'winner_show' ? 'winner-landed' : ''\n      }`}>‚¨áÔ∏è</div>\n      \n      <Swiper\n        ref={swiperRef}\n        modules={[Autoplay]}\n        spaceBetween={10}\n        slidesPerView=\"auto\"\n        centeredSlides={true}\n        loop={true}\n        loopedSlides={Math.max(players.length, 6)}\n        autoplay={{\n          delay: isSpinning && !isAnimating ? 15 : 400,\n          disableOnInteraction: false,\n          pauseOnMouseEnter: false,\n        }}\n        speed={animationPhase === 'fast_spin' ? 50 : 300}\n        className={`player-swiper ${isSpinning || animationPhase === 'fast_spin' ? 'spinning' : ''}`}\n        allowTouchMove={false}\n        onSwiper={handleSwiperInit}\n      >\n        {/* Use only 3 sets to reduce complexity */}\n        {[...Array(3)].map((_, setIndex) => \n          players.map((player, index) => (\n            <SwiperSlide key={`${setIndex}-${player?.address || `waiting-${index}`}`} className=\"player-slide\">\n              <div className={`player-card ${\n                winner && player && (\n                  player.address === winner.address || \n                  player.username === winner.username ||\n                  player.address === winner.winner ||\n                  player.address === winner.fullAddress ||\n                  player.username === winner.displayName\n                ) ? 'winner' : player ? 'active' : 'waiting'\n              }`}>\n                <div className=\"player-avatar\">\n                  {player ? (\n                    <div className=\"player-avatar-content\">\n                      {player.username ? player.username[0].toUpperCase() : '?'}\n                    </div>\n                  ) : (\n                    <div className=\"waiting-icon\">‚ùì</div>\n                  )}\n                </div>\n                <div className=\"player-info\">\n                  <div className=\"player-name\">\n                    {player ? (player.username || player.displayName || 'Player') : 'Waiting'}\n                  </div>\n                  <div className=\"player-bet\">\n                    {player ? `${(player.amount || 0).toFixed(2)} TON` : '0.00 TON'}\n                  </div>\n                  {winner && player && (\n                    player.address === winner.address || \n                    player.username === winner.username ||\n                    player.address === winner.winner ||\n                    player.address === winner.fullAddress ||\n                    player.username === winner.displayName\n                  ) && (\n                    <div className=\"winner-prize\">\n                      Won {parseFloat(winner.prize || 0).toFixed(3)} TON\n                    </div>\n                  )}\n                </div>\n                {winner && player && (\n                  player.address === winner.address || \n                  player.username === winner.username ||\n                  player.address === winner.winner ||\n                  player.address === winner.fullAddress ||\n                  player.username === winner.displayName\n                ) && (\n                  <div className=\"winner-crown\">üëë</div>\n                )}\n              </div>\n            </SwiperSlide>\n          ))\n        )}\n      </Swiper>\n    </div>\n  );\n};\n\nexport default SimpleCarousel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}