{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.deriveEd25519Path = exports.deriveED25519HardenedKey = exports.getED25519MasterKeyFromSeed = void 0;\nconst hmac_sha512_1 = require(\"../primitives/hmac_sha512\");\nconst ED25519_CURVE = 'ed25519 seed';\nconst HARDENED_OFFSET = 0x80000000;\nasync function getED25519MasterKeyFromSeed(seed) {\n  const I = await (0, hmac_sha512_1.hmac_sha512)(ED25519_CURVE, seed);\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    key: IL,\n    chainCode: IR\n  };\n}\nexports.getED25519MasterKeyFromSeed = getED25519MasterKeyFromSeed;\n;\nasync function deriveED25519HardenedKey(parent, index) {\n  if (index >= HARDENED_OFFSET) {\n    throw Error('Key index must be less than offset');\n  }\n  // Key Derive Path: 0x00 + parent.key + index;\n  const indexBuffer = Buffer.alloc(4);\n  indexBuffer.writeUInt32BE(index + HARDENED_OFFSET, 0);\n  const data = Buffer.concat([Buffer.alloc(1, 0), parent.key, indexBuffer]);\n  // Derive key\n  const I = await (0, hmac_sha512_1.hmac_sha512)(parent.chainCode, data);\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    key: IL,\n    chainCode: IR\n  };\n}\nexports.deriveED25519HardenedKey = deriveED25519HardenedKey;\n;\nasync function deriveEd25519Path(seed, path) {\n  let state = await getED25519MasterKeyFromSeed(seed);\n  let remaining = [...path];\n  while (remaining.length > 0) {\n    let index = remaining[0];\n    remaining = remaining.slice(1);\n    state = await deriveED25519HardenedKey(state, index);\n  }\n  return state.key;\n}\nexports.deriveEd25519Path = deriveEd25519Path;","map":{"version":3,"names":["Object","defineProperty","exports","value","deriveEd25519Path","deriveED25519HardenedKey","getED25519MasterKeyFromSeed","hmac_sha512_1","require","ED25519_CURVE","HARDENED_OFFSET","seed","I","hmac_sha512","IL","slice","IR","key","chainCode","parent","index","Error","indexBuffer","Buffer","alloc","writeUInt32BE","data","concat","path","state","remaining","length"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/node_modules/@ton/crypto/dist/hd/ed25519.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveEd25519Path = exports.deriveED25519HardenedKey = exports.getED25519MasterKeyFromSeed = void 0;\nconst hmac_sha512_1 = require(\"../primitives/hmac_sha512\");\nconst ED25519_CURVE = 'ed25519 seed';\nconst HARDENED_OFFSET = 0x80000000;\nasync function getED25519MasterKeyFromSeed(seed) {\n    const I = await (0, hmac_sha512_1.hmac_sha512)(ED25519_CURVE, seed);\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n}\nexports.getED25519MasterKeyFromSeed = getED25519MasterKeyFromSeed;\n;\nasync function deriveED25519HardenedKey(parent, index) {\n    if (index >= HARDENED_OFFSET) {\n        throw Error('Key index must be less than offset');\n    }\n    // Key Derive Path: 0x00 + parent.key + index;\n    const indexBuffer = Buffer.alloc(4);\n    indexBuffer.writeUInt32BE(index + HARDENED_OFFSET, 0);\n    const data = Buffer.concat([Buffer.alloc(1, 0), parent.key, indexBuffer]);\n    // Derive key\n    const I = await (0, hmac_sha512_1.hmac_sha512)(parent.chainCode, data);\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n}\nexports.deriveED25519HardenedKey = deriveED25519HardenedKey;\n;\nasync function deriveEd25519Path(seed, path) {\n    let state = await getED25519MasterKeyFromSeed(seed);\n    let remaining = [...path];\n    while (remaining.length > 0) {\n        let index = remaining[0];\n        remaining = remaining.slice(1);\n        state = await deriveED25519HardenedKey(state, index);\n    }\n    return state.key;\n}\nexports.deriveEd25519Path = deriveEd25519Path;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,iBAAiB,GAAGF,OAAO,CAACG,wBAAwB,GAAGH,OAAO,CAACI,2BAA2B,GAAG,KAAK,CAAC;AAC3G,MAAMC,aAAa,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AAC1D,MAAMC,aAAa,GAAG,cAAc;AACpC,MAAMC,eAAe,GAAG,UAAU;AAClC,eAAeJ,2BAA2BA,CAACK,IAAI,EAAE;EAC7C,MAAMC,CAAC,GAAG,MAAM,CAAC,CAAC,EAAEL,aAAa,CAACM,WAAW,EAAEJ,aAAa,EAAEE,IAAI,CAAC;EACnE,MAAMG,EAAE,GAAGF,CAAC,CAACG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EACzB,MAAMC,EAAE,GAAGJ,CAAC,CAACG,KAAK,CAAC,EAAE,CAAC;EACtB,OAAO;IACHE,GAAG,EAAEH,EAAE;IACPI,SAAS,EAAEF;EACf,CAAC;AACL;AACAd,OAAO,CAACI,2BAA2B,GAAGA,2BAA2B;AACjE;AACA,eAAeD,wBAAwBA,CAACc,MAAM,EAAEC,KAAK,EAAE;EACnD,IAAIA,KAAK,IAAIV,eAAe,EAAE;IAC1B,MAAMW,KAAK,CAAC,oCAAoC,CAAC;EACrD;EACA;EACA,MAAMC,WAAW,GAAGC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EACnCF,WAAW,CAACG,aAAa,CAACL,KAAK,GAAGV,eAAe,EAAE,CAAC,CAAC;EACrD,MAAMgB,IAAI,GAAGH,MAAM,CAACI,MAAM,CAAC,CAACJ,MAAM,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEL,MAAM,CAACF,GAAG,EAAEK,WAAW,CAAC,CAAC;EACzE;EACA,MAAMV,CAAC,GAAG,MAAM,CAAC,CAAC,EAAEL,aAAa,CAACM,WAAW,EAAEM,MAAM,CAACD,SAAS,EAAEQ,IAAI,CAAC;EACtE,MAAMZ,EAAE,GAAGF,CAAC,CAACG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EACzB,MAAMC,EAAE,GAAGJ,CAAC,CAACG,KAAK,CAAC,EAAE,CAAC;EACtB,OAAO;IACHE,GAAG,EAAEH,EAAE;IACPI,SAAS,EAAEF;EACf,CAAC;AACL;AACAd,OAAO,CAACG,wBAAwB,GAAGA,wBAAwB;AAC3D;AACA,eAAeD,iBAAiBA,CAACO,IAAI,EAAEiB,IAAI,EAAE;EACzC,IAAIC,KAAK,GAAG,MAAMvB,2BAA2B,CAACK,IAAI,CAAC;EACnD,IAAImB,SAAS,GAAG,CAAC,GAAGF,IAAI,CAAC;EACzB,OAAOE,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;IACzB,IAAIX,KAAK,GAAGU,SAAS,CAAC,CAAC,CAAC;IACxBA,SAAS,GAAGA,SAAS,CAACf,KAAK,CAAC,CAAC,CAAC;IAC9Bc,KAAK,GAAG,MAAMxB,wBAAwB,CAACwB,KAAK,EAAET,KAAK,CAAC;EACxD;EACA,OAAOS,KAAK,CAACZ,GAAG;AACpB;AACAf,OAAO,CAACE,iBAAiB,GAAGA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}