{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{Send,MessageCircle,Wifi,WifiOff,RefreshCw,Users,Server}from'lucide-react';import useChat from'../hooks/useChat';import'./Chat.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Chat=()=>{const[newMessage,setNewMessage]=useState('');const[showConnectionError,setShowConnectionError]=useState(false);const messagesEndRef=useRef(null);const inputRef=useRef(null);const{messages,isConnected,isTyping,typingUsers,connectionError,serverStats,isLoadingStats,sendMessage,handleTyping,reconnect,refreshStats,getChatStats,userInfo}=useChat();const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};useEffect(()=>{scrollToBottom();},[messages]);// Show connection error temporarily\nuseEffect(()=>{if(connectionError){setShowConnectionError(true);const timer=setTimeout(()=>setShowConnectionError(false),5000);return()=>clearTimeout(timer);}},[connectionError]);const handleSendMessage=e=>{e.preventDefault();if(!newMessage.trim()||!isConnected)return;const success=sendMessage(newMessage);if(success){var _inputRef$current;setNewMessage('');(_inputRef$current=inputRef.current)===null||_inputRef$current===void 0?void 0:_inputRef$current.focus();}};const handleInputChange=e=>{const value=e.target.value;setNewMessage(value);// Send typing indicator\nif(value.trim()&&!isTyping){handleTyping(true);}else if(!value.trim()&&isTyping){handleTyping(false);}};const handleInputBlur=()=>{// Stop typing when input loses focus\nif(isTyping){handleTyping(false);}};const getMessageType=message=>{if(message.type==='system')return'system';if(message.type==='bet')return'bet';if(message.isOwnMessage)return'own';return'user';};const getUserLevel=username=>{// Generate consistent level based on username\nconst hash=username.split('').reduce((acc,char)=>{return acc+char.charCodeAt(0);},0);return hash%50+1;};const formatTypingUsers=()=>{if(typingUsers.length===0)return'';if(typingUsers.length===1)return\"\".concat(typingUsers[0],\" is typing...\");if(typingUsers.length===2)return\"\".concat(typingUsers[0],\" and \").concat(typingUsers[1],\" are typing...\");return\"\".concat(typingUsers[0],\" and \").concat(typingUsers.length-1,\" others are typing...\");};const stats=getChatStats();return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-title\",children:[/*#__PURE__*/_jsx(MessageCircle,{size:18}),/*#__PURE__*/_jsx(\"span\",{children:\"Degen Chat\"}),!isConnected&&/*#__PURE__*/_jsx(\"button\",{onClick:reconnect,className:\"reconnect-btn\",title:\"Reconnect to chat\",children:/*#__PURE__*/_jsx(RefreshCw,{size:14})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-status\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"status-indicator \".concat(isConnected?'connected':'disconnected'),children:isConnected?/*#__PURE__*/_jsx(Wifi,{size:12}):/*#__PURE__*/_jsx(WifiOff,{size:12})}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-info\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"connection-status\",children:isConnected?'Online':'Offline'}),/*#__PURE__*/_jsxs(\"div\",{className:\"user-count\",children:[/*#__PURE__*/_jsx(Users,{size:10}),/*#__PURE__*/_jsx(\"span\",{children:isLoadingStats?'...':serverStats.connectedUsers})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:refreshStats,className:\"refresh-stats-btn\",title:\"Refresh server stats\",disabled:isLoadingStats,children:/*#__PURE__*/_jsx(Server,{size:12,className:isLoadingStats?'spinning':''})})]})]}),showConnectionError&&/*#__PURE__*/_jsxs(\"div\",{className:\"connection-error\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\u26A0\\uFE0F Connection failed. \"}),/*#__PURE__*/_jsx(\"button\",{onClick:reconnect,className:\"error-reconnect-btn\",children:\"Reconnect\"})]}),serverStats.serverStatus&&/*#__PURE__*/_jsxs(\"div\",{className:\"server-status-bar \".concat(serverStats.serverStatus.toLowerCase()),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"server-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"server-label\",children:\"Server:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"server-status\",children:serverStats.serverStatus}),serverStats.lastUpdated&&/*#__PURE__*/_jsxs(\"span\",{className:\"last-update\",children:[\"Updated: \",serverStats.lastUpdated.toLocaleTimeString('en-US',{hour:'2-digit',minute:'2-digit'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"server-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Messages: \",stats.totalMessages]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Users: \",serverStats.connectedUsers]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-messages\",children:[messages.length===0&&isConnected&&/*#__PURE__*/_jsxs(\"div\",{className:\"chat-empty\",children:[/*#__PURE__*/_jsx(MessageCircle,{size:24}),/*#__PURE__*/_jsx(\"p\",{children:\"No messages yet. Start the conversation!\"}),/*#__PURE__*/_jsxs(\"small\",{children:[\"Connected users: \",serverStats.connectedUsers]})]}),messages.map(message=>/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(getMessageType(message)),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"user-info\",children:message.type==='system'?/*#__PURE__*/_jsx(\"span\",{className:\"system-label\",children:\"System\"}):message.type==='bet'?/*#__PURE__*/_jsx(\"span\",{className:\"bet-label\",children:\"\\uD83C\\uDFB0 Bet\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"username\",children:message.username}),/*#__PURE__*/_jsx(\"span\",{className:\"user-level\",children:getUserLevel(message.username)}),message.username===userInfo.username&&userInfo.isPremium&&/*#__PURE__*/_jsx(\"span\",{className:\"premium-badge\",children:\"\\u2B50\"})]})}),/*#__PURE__*/_jsx(\"span\",{className:\"timestamp\",children:message.formattedTime})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:message.message})]},message.id)),typingUsers.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"typing-indicator\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"typing-dots\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsx(\"span\",{className:\"typing-text\",children:formatTypingUsers()})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsx(\"form\",{className:\"chat-input-form\",onSubmit:handleSendMessage,children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input-container\",children:[/*#__PURE__*/_jsx(\"input\",{ref:inputRef,type:\"text\",value:newMessage,onChange:handleInputChange,onBlur:handleInputBlur,placeholder:isConnected?\"Type Message Here...\":\"Connecting...\",className:\"chat-input\",maxLength:500,disabled:!isConnected}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"send-button\",disabled:!newMessage.trim()||!isConnected,children:/*#__PURE__*/_jsx(Send,{size:16})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-rules\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uD83D\\uDCAC Chat Rules\"}),/*#__PURE__*/_jsx(\"span\",{className:\"rules-count\",children:stats.totalMessages}),userInfo.isRealUser&&/*#__PURE__*/_jsx(\"span\",{className:\"user-badge\",children:\"\\uD83D\\uDCF1 Telegram\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"server-badge\",children:[\"\\uD83C\\uDF10 \",serverStats.serverStatus]})]})]});};export default Chat;","map":{"version":3,"names":["React","useState","useEffect","useRef","Send","MessageCircle","Wifi","WifiOff","RefreshCw","Users","Server","useChat","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Chat","newMessage","setNewMessage","showConnectionError","setShowConnectionError","messagesEndRef","inputRef","messages","isConnected","isTyping","typingUsers","connectionError","serverStats","isLoadingStats","sendMessage","handleTyping","reconnect","refreshStats","getChatStats","userInfo","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","timer","setTimeout","clearTimeout","handleSendMessage","e","preventDefault","trim","success","_inputRef$current","focus","handleInputChange","value","target","handleInputBlur","getMessageType","message","type","isOwnMessage","getUserLevel","username","hash","split","reduce","acc","char","charCodeAt","formatTypingUsers","length","concat","stats","className","children","size","onClick","title","connectedUsers","disabled","serverStatus","toLowerCase","lastUpdated","toLocaleTimeString","hour","minute","totalMessages","map","isPremium","formattedTime","id","ref","onSubmit","onChange","onBlur","placeholder","maxLength","isRealUser"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Send, MessageCircle, Wifi, WifiOff, RefreshCw, Users, Server } from 'lucide-react';\nimport useChat from '../hooks/useChat';\nimport './Chat.css';\n\nconst Chat = () => {\n  const [newMessage, setNewMessage] = useState('');\n  const [showConnectionError, setShowConnectionError] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const {\n    messages,\n    isConnected,\n    isTyping,\n    typingUsers,\n    connectionError,\n    serverStats,\n    isLoadingStats,\n    sendMessage,\n    handleTyping,\n    reconnect,\n    refreshStats,\n    getChatStats,\n    userInfo\n  } = useChat();\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Show connection error temporarily\n  useEffect(() => {\n    if (connectionError) {\n      setShowConnectionError(true);\n      const timer = setTimeout(() => setShowConnectionError(false), 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [connectionError]);\n\n  const handleSendMessage = (e) => {\n    e.preventDefault();\n    if (!newMessage.trim() || !isConnected) return;\n\n    const success = sendMessage(newMessage);\n    if (success) {\n      setNewMessage('');\n      inputRef.current?.focus();\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    setNewMessage(value);\n    \n    // Send typing indicator\n    if (value.trim() && !isTyping) {\n      handleTyping(true);\n    } else if (!value.trim() && isTyping) {\n      handleTyping(false);\n    }\n  };\n\n  const handleInputBlur = () => {\n    // Stop typing when input loses focus\n    if (isTyping) {\n      handleTyping(false);\n    }\n  };\n\n  const getMessageType = (message) => {\n    if (message.type === 'system') return 'system';\n    if (message.type === 'bet') return 'bet';\n    if (message.isOwnMessage) return 'own';\n    return 'user';\n  };\n\n  const getUserLevel = (username) => {\n    // Generate consistent level based on username\n    const hash = username.split('').reduce((acc, char) => {\n      return acc + char.charCodeAt(0);\n    }, 0);\n    return (hash % 50) + 1;\n  };\n\n  const formatTypingUsers = () => {\n    if (typingUsers.length === 0) return '';\n    if (typingUsers.length === 1) return `${typingUsers[0]} is typing...`;\n    if (typingUsers.length === 2) return `${typingUsers[0]} and ${typingUsers[1]} are typing...`;\n    return `${typingUsers[0]} and ${typingUsers.length - 1} others are typing...`;\n  };\n\n  const stats = getChatStats();\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-header\">\n        <div className=\"chat-title\">\n          <MessageCircle size={18} />\n          <span>Degen Chat</span>\n          {!isConnected && (\n            <button \n              onClick={reconnect} \n              className=\"reconnect-btn\"\n              title=\"Reconnect to chat\"\n            >\n              <RefreshCw size={14} />\n            </button>\n          )}\n        </div>\n        <div className=\"chat-status\">\n          <div className={`status-indicator ${isConnected ? 'connected' : 'disconnected'}`}>\n            {isConnected ? <Wifi size={12} /> : <WifiOff size={12} />}\n          </div>\n          <div className=\"status-info\">\n            <div className=\"connection-status\">\n              {isConnected ? 'Online' : 'Offline'}\n            </div>\n            <div className=\"user-count\">\n              <Users size={10} />\n              <span>{isLoadingStats ? '...' : serverStats.connectedUsers}</span>\n            </div>\n          </div>\n          <button \n            onClick={refreshStats} \n            className=\"refresh-stats-btn\"\n            title=\"Refresh server stats\"\n            disabled={isLoadingStats}\n          >\n            <Server size={12} className={isLoadingStats ? 'spinning' : ''} />\n          </button>\n        </div>\n      </div>\n\n      {/* Connection Error Banner */}\n      {showConnectionError && (\n        <div className=\"connection-error\">\n          <span>⚠️ Connection failed. </span>\n          <button onClick={reconnect} className=\"error-reconnect-btn\">\n            Reconnect\n          </button>\n        </div>\n      )}\n\n      {/* Server Status Info */}\n      {serverStats.serverStatus && (\n        <div className={`server-status-bar ${serverStats.serverStatus.toLowerCase()}`}>\n          <div className=\"server-info\">\n            <span className=\"server-label\">Server:</span>\n            <span className=\"server-status\">{serverStats.serverStatus}</span>\n            {serverStats.lastUpdated && (\n              <span className=\"last-update\">\n                Updated: {serverStats.lastUpdated.toLocaleTimeString('en-US', {\n                  hour: '2-digit',\n                  minute: '2-digit'\n                })}\n              </span>\n            )}\n          </div>\n          <div className=\"server-stats\">\n            <span>Messages: {stats.totalMessages}</span>\n            <span>Users: {serverStats.connectedUsers}</span>\n          </div>\n        </div>\n      )}\n\n      <div className=\"chat-messages\">\n        {messages.length === 0 && isConnected && (\n          <div className=\"chat-empty\">\n            <MessageCircle size={24} />\n            <p>No messages yet. Start the conversation!</p>\n            <small>Connected users: {serverStats.connectedUsers}</small>\n          </div>\n        )}\n\n        {messages.map((message) => (\n          <div key={message.id} className={`message ${getMessageType(message)}`}>\n            <div className=\"message-header\">\n              <div className=\"user-info\">\n                {message.type === 'system' ? (\n                  <span className=\"system-label\">System</span>\n                ) : message.type === 'bet' ? (\n                  <span className=\"bet-label\">🎰 Bet</span>\n                ) : (\n                  <>\n                    <span className=\"username\">{message.username}</span>\n                    <span className=\"user-level\">{getUserLevel(message.username)}</span>\n                    {message.username === userInfo.username && userInfo.isPremium && (\n                      <span className=\"premium-badge\">⭐</span>\n                    )}\n                  </>\n                )}\n              </div>\n              <span className=\"timestamp\">{message.formattedTime}</span>\n            </div>\n            <div className=\"message-content\">\n              {message.message}\n            </div>\n          </div>\n        ))}\n\n        {/* Typing Indicator */}\n        {typingUsers.length > 0 && (\n          <div className=\"typing-indicator\">\n            <div className=\"typing-dots\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n            <span className=\"typing-text\">{formatTypingUsers()}</span>\n          </div>\n        )}\n\n        <div ref={messagesEndRef} />\n      </div>\n\n      <form className=\"chat-input-form\" onSubmit={handleSendMessage}>\n        <div className=\"chat-input-container\">\n          <input\n            ref={inputRef}\n            type=\"text\"\n            value={newMessage}\n            onChange={handleInputChange}\n            onBlur={handleInputBlur}\n            placeholder={isConnected ? \"Type Message Here...\" : \"Connecting...\"}\n            className=\"chat-input\"\n            maxLength={500}\n            disabled={!isConnected}\n          />\n          <button \n            type=\"submit\" \n            className=\"send-button\" \n            disabled={!newMessage.trim() || !isConnected}\n          >\n            <Send size={16} />\n          </button>\n        </div>\n      </form>\n\n      <div className=\"chat-rules\">\n        <span>💬 Chat Rules</span>\n        <span className=\"rules-count\">{stats.totalMessages}</span>\n        {userInfo.isRealUser && (\n          <span className=\"user-badge\">📱 Telegram</span>\n        )}\n        <span className=\"server-badge\">\n          🌐 {serverStats.serverStatus}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}