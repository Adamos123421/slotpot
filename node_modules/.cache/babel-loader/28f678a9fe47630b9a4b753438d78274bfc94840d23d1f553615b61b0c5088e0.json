{"ast":null,"code":"import _objectSpread from\"C:/Users/adams/OneDrive/Desktop/Work/slotpot/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// Backend API service for frontend\nclass BackendApiService{constructor(){this.baseUrl=process.env.REACT_APP_BACKEND_URL||'http://localhost:5002';}async fetchJson(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const response=await fetch(\"\".concat(this.baseUrl).concat(endpoint),_objectSpread({headers:_objectSpread({'Content-Type':'application/json'},options.headers)},options));if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}return await response.json();}catch(error){console.error(\"API request failed for \".concat(endpoint,\":\"),error);throw error;}}// CONTRACT API METHODS REMOVED - ALL DATA NOW COMES VIA SOCKET\n// Admin automation status\nasync getAdminStatus(){return this.fetchJson('/api/admin/status');}// Update admin settings\nasync updateAdminSettings(settings){return this.fetchJson('/api/admin/settings',{method:'POST',body:JSON.stringify(settings)});}// Emergency admin controls (require admin key)\nasync forceStartRound(adminKey){return this.fetchJson('/api/admin/force-start',{method:'POST',body:JSON.stringify({adminKey})});}async forceEndRound(adminKey){return this.fetchJson('/api/admin/force-end',{method:'POST',body:JSON.stringify({adminKey})});}// BETTOR API METHODS REMOVED - ALL DATA NOW COMES VIA SOCKET\n// Bet notification\nasync notifyBetPlacement(betData){return this.fetchJson('/api/game/bet-notification',{method:'POST',body:JSON.stringify(betData)});}// Health check\nasync getHealth(){return this.fetchJson('/api/health');}}// Create singleton instance\nexport const backendApi=new BackendApiService();export default BackendApiService;","map":{"version":3,"names":["BackendApiService","constructor","baseUrl","process","env","REACT_APP_BACKEND_URL","fetchJson","endpoint","options","arguments","length","undefined","response","fetch","concat","_objectSpread","headers","ok","Error","status","json","error","console","getAdminStatus","updateAdminSettings","settings","method","body","JSON","stringify","forceStartRound","adminKey","forceEndRound","notifyBetPlacement","betData","getHealth","backendApi"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/src/services/backendApi.js"],"sourcesContent":["// Backend API service for frontend\r\nclass BackendApiService {\r\n  constructor() {\r\n    this.baseUrl = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5002';\r\n  }\r\n\r\n  async fetchJson(endpoint, options = {}) {\r\n    try {\r\n      const response = await fetch(`${this.baseUrl}${endpoint}`, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...options.headers\r\n        },\r\n        ...options\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      return await response.json();\r\n    } catch (error) {\r\n      console.error(`API request failed for ${endpoint}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  // CONTRACT API METHODS REMOVED - ALL DATA NOW COMES VIA SOCKET\r\n\r\n  // Admin automation status\r\n  async getAdminStatus() {\r\n    return this.fetchJson('/api/admin/status');\r\n  }\r\n\r\n  // Update admin settings\r\n  async updateAdminSettings(settings) {\r\n    return this.fetchJson('/api/admin/settings', {\r\n      method: 'POST',\r\n      body: JSON.stringify(settings)\r\n    });\r\n  }\r\n\r\n  // Emergency admin controls (require admin key)\r\n  async forceStartRound(adminKey) {\r\n    return this.fetchJson('/api/admin/force-start', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ adminKey })\r\n    });\r\n  }\r\n\r\n  async forceEndRound(adminKey) {\r\n    return this.fetchJson('/api/admin/force-end', {\r\n      method: 'POST',\r\n      body: JSON.stringify({ adminKey })\r\n    });\r\n  }\r\n\r\n  // BETTOR API METHODS REMOVED - ALL DATA NOW COMES VIA SOCKET\r\n\r\n  // Bet notification\r\n  async notifyBetPlacement(betData) {\r\n    return this.fetchJson('/api/game/bet-notification', {\r\n      method: 'POST',\r\n      body: JSON.stringify(betData)\r\n    });\r\n  }\r\n\r\n  // Health check\r\n  async getHealth() {\r\n    return this.fetchJson('/api/health');\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nexport const backendApi = new BackendApiService();\r\n\r\nexport default BackendApiService; "],"mappings":"iIAAA;AACA,KAAM,CAAAA,iBAAkB,CACtBC,WAAWA,CAAA,CAAG,CACZ,IAAI,CAACC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,EAAI,uBAAuB,CAC7E,CAEA,KAAM,CAAAC,SAASA,CAACC,QAAQ,CAAgB,IAAd,CAAAC,OAAO,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CAAC,CACpC,GAAI,CACF,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAI,IAAI,CAACZ,OAAO,EAAAY,MAAA,CAAGP,QAAQ,EAAAQ,aAAA,EACrDC,OAAO,CAAAD,aAAA,EACL,cAAc,CAAE,kBAAkB,EAC/BP,OAAO,CAACQ,OAAO,CACnB,EACER,OAAO,CACX,CAAC,CAEF,GAAI,CAACI,QAAQ,CAACK,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,wBAAAJ,MAAA,CAAwBF,QAAQ,CAACO,MAAM,CAAE,CAAC,CAC3D,CAEA,MAAO,MAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,2BAAAP,MAAA,CAA2BP,QAAQ,MAAKc,KAAK,CAAC,CAC3D,KAAM,CAAAA,KAAK,CACb,CACF,CAEA;AAEA;AACA,KAAM,CAAAE,cAAcA,CAAA,CAAG,CACrB,MAAO,KAAI,CAACjB,SAAS,CAAC,mBAAmB,CAAC,CAC5C,CAEA;AACA,KAAM,CAAAkB,mBAAmBA,CAACC,QAAQ,CAAE,CAClC,MAAO,KAAI,CAACnB,SAAS,CAAC,qBAAqB,CAAE,CAC3CoB,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACJ,QAAQ,CAC/B,CAAC,CAAC,CACJ,CAEA;AACA,KAAM,CAAAK,eAAeA,CAACC,QAAQ,CAAE,CAC9B,MAAO,KAAI,CAACzB,SAAS,CAAC,wBAAwB,CAAE,CAC9CoB,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEE,QAAS,CAAC,CACnC,CAAC,CAAC,CACJ,CAEA,KAAM,CAAAC,aAAaA,CAACD,QAAQ,CAAE,CAC5B,MAAO,KAAI,CAACzB,SAAS,CAAC,sBAAsB,CAAE,CAC5CoB,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEE,QAAS,CAAC,CACnC,CAAC,CAAC,CACJ,CAEA;AAEA;AACA,KAAM,CAAAE,kBAAkBA,CAACC,OAAO,CAAE,CAChC,MAAO,KAAI,CAAC5B,SAAS,CAAC,4BAA4B,CAAE,CAClDoB,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACK,OAAO,CAC9B,CAAC,CAAC,CACJ,CAEA;AACA,KAAM,CAAAC,SAASA,CAAA,CAAG,CAChB,MAAO,KAAI,CAAC7B,SAAS,CAAC,aAAa,CAAC,CACtC,CACF,CAEA;AACA,MAAO,MAAM,CAAA8B,UAAU,CAAG,GAAI,CAAApC,iBAAiB,CAAC,CAAC,CAEjD,cAAe,CAAAA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}