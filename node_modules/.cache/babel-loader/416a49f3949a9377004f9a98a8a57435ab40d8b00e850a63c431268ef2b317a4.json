{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adams\\\\Downloads\\\\GLL\\\\slotpot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { TonConnectUIProvider } from '@tonconnect/ui-react';\nimport Chat from './components/Chat';\nimport GameArea from './components/GameArea';\nimport MobileChat from './components/MobileChat';\nimport WalletConnection from './components/WalletConnection';\nimport useTelegramWebApp from './hooks/useTelegramWebApp';\nimport useJackpotContract from './hooks/useJackpotContract';\nimport socketService from './services/socketService';\nimport { tonConnectConfig, uiOptions } from './config/tonconnect';\nimport { MessageCircle, Trophy, Users, DollarSign } from 'lucide-react';\nimport './App.css';\nimport './components/Header.css';\n\n// TON Connect manifest URL - use remote manifest to avoid 500 errors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst manifestUrl = \"https://raw.githubusercontent.com/Vodka2134156/kzsks/main/manifest.json\";\nfunction AppContent() {\n  _s();\n  var _contractState$timer2;\n  // Local UI state\n  const [currentRound, setCurrentRound] = useState(53408);\n  const [timeRemaining, setTimeRemaining] = useState(30);\n  const [activeTab, setActiveTab] = useState('jackpot');\n  const [betAmount, setBetAmount] = useState(0.11);\n  const [showWinnerAnnouncement, setShowWinnerAnnouncement] = useState(false);\n\n  // Winner state management (moved from GameArea.js)\n  const [waitingForWinner, setWaitingForWinner] = useState(false);\n  const [contractWinner, setContractWinner] = useState(null);\n  const [postWinnerLoading, setPostWinnerLoading] = useState(false);\n\n  // Bettors state (managed centrally to avoid duplicates)\n  const [gameBettors, setGameBettors] = useState([]);\n\n  // Refs to avoid stale closures in socket handlers\n  const gameBettorsRef = useRef([]);\n  const contractWinnerRef = useRef(null);\n  const showWinnerAnnouncementRef = useRef(false);\n\n  // Keep refs in sync with state\n  useEffect(() => {\n    gameBettorsRef.current = gameBettors;\n  }, [gameBettors]);\n  useEffect(() => {\n    contractWinnerRef.current = contractWinner;\n  }, [contractWinner]);\n  useEffect(() => {\n    showWinnerAnnouncementRef.current = showWinnerAnnouncement;\n  }, [showWinnerAnnouncement]);\n\n  // Telegram integration\n  const {\n    user,\n    hapticFeedback,\n    showAlert,\n    hasRealUserData\n  } = useTelegramWebApp();\n\n  // Smart contract integration\n  const {\n    contractState,\n    userStats,\n    adminInfo,\n    isLoadingContract,\n    isLoadingUserStats,\n    isPlacingBet,\n    placeBet,\n    isConnected,\n    address,\n    currentBettors\n  } = useJackpotContract();\n\n  // Use real contract data or fallback to simulated data\n  const jackpotValue = contractState.totalJackpot;\n  const isLive = contractState.isActive;\n  const userWinChance = parseFloat(userStats.winChancePercentage) || 0;\n  const userBetTotal = userStats.betAmount || 0;\n\n  // Use automation timer or fallback to UI timer\n  useEffect(() => {\n    var _contractState$timer;\n    // Always sync with backend timer when it changes\n    if (((_contractState$timer = contractState.timer) === null || _contractState$timer === void 0 ? void 0 : _contractState$timer.timeRemaining) !== undefined) {\n      setTimeRemaining(contractState.timer.timeRemaining);\n    } else {\n      setTimeRemaining(30);\n    }\n  }, [(_contractState$timer2 = contractState.timer) === null || _contractState$timer2 === void 0 ? void 0 : _contractState$timer2.timeRemaining]);\n\n  // Local countdown timer (runs between backend updates)\n  useEffect(() => {\n    if (!isLive || timeRemaining <= 0) return;\n    const countdown = setInterval(() => {\n      setTimeRemaining(prev => {\n        const newTime = Math.max(0, prev - 1);\n\n        // If we reach 0, don't reset - let backend handle the transition\n        if (newTime === 0) {\n          console.log('⏰ Local timer reached 0, waiting for backend...');\n        }\n        return newTime;\n      });\n    }, 1000);\n    return () => clearInterval(countdown);\n  }, [isLive, timeRemaining > 0]); // Restart countdown when timer changes or game goes live\n\n  // Socket integration for immediate synchronization - SINGLE CONNECTION POINT\n  useEffect(() => {\n    console.log('🔌 App.js: Establishing single socket connection for entire app...');\n    socketService.connect();\n\n    // Listen for timer updates from socket\n    socketService.on('timer', timerData => {\n      console.log('⏰ App: Socket timer update:', timerData);\n      setTimeRemaining(timerData.timeRemaining);\n      if (timerData.roundNumber) {\n        setCurrentRound(timerData.roundNumber);\n      }\n      // Note: Contract state timer will be updated via fullGameUpdate/contractStateUpdate events\n    });\n\n    // Listen for new round events\n    socketService.on('newRound', roundData => {\n      console.log('🎰 App: New round detected via socket:', roundData);\n      setTimeRemaining(roundData.timeRemaining);\n      setCurrentRound(roundData.roundNumber);\n    });\n\n    // Listen for game state updates\n    socketService.on('gameState', gameState => {\n      console.log('🎮 App: Game state update:', gameState);\n      if (gameState.timeRemaining !== undefined) {\n        setTimeRemaining(gameState.timeRemaining);\n      }\n      if (gameState.currentRound) {\n        // Extract roundNumber if currentRound is an object, otherwise use the value directly\n        const roundNumber = typeof gameState.currentRound === 'object' && gameState.currentRound.roundNumber ? gameState.currentRound.roundNumber : gameState.currentRound;\n        setCurrentRound(roundNumber);\n      }\n\n      // Handle winner-related states\n      if (gameState.isWaitingForWinner !== undefined) {\n        setWaitingForWinner(gameState.isWaitingForWinner);\n      }\n\n      // Update bettors data centrally (avoids duplicate processing)\n      if (gameState.bettors && Array.isArray(gameState.bettors)) {\n        // Only log if bettors count changed to reduce spam\n        if (gameState.bettors.length !== gameBettorsRef.current.length) {\n          console.log('🎮 App: Updating bettors from gameState:', gameState.bettors.length, 'bettors');\n        }\n        setGameBettors(gameState.bettors);\n      }\n\n      // Check for winner announcement in game state (prevent duplicates)\n      if (gameState.winnerAnnouncement && !showWinnerAnnouncementRef.current && (!contractWinnerRef.current || contractWinnerRef.current.timestamp !== gameState.winnerAnnouncement.timestamp)) {\n        console.log('🎉 Winner announcement found in game state:', gameState.winnerAnnouncement);\n        setContractWinner(gameState.winnerAnnouncement);\n        setShowWinnerAnnouncement(true);\n        setWaitingForWinner(false);\n\n        // Auto-hide after 6 seconds\n        setTimeout(() => {\n          setShowWinnerAnnouncement(false);\n          setContractWinner(null);\n        }, 6000);\n      }\n    });\n\n    // Listen for comprehensive game data updates\n    socketService.on('fullGameUpdate', gameData => {\n      console.log('🎮 App: Full game update:', gameData);\n      // These updates will trigger re-renders via useJackpotContract hook\n      // The hook will detect the changes and update accordingly\n    });\n\n    // Listen for bettors updates\n    socketService.on('bettorsUpdate', data => {\n      console.log('💰 App: Bettors update:', data);\n      // Force a refresh of contract state to sync with socket data\n      // This ensures jackpot value and user stats stay in sync\n    });\n\n    // Listen for waiting for winner events\n    socketService.on('waitingForWinner', isWaiting => {\n      console.log('🎯 App: Waiting for winner state changed:', isWaiting);\n      setWaitingForWinner(isWaiting);\n    });\n\n    // Listen for winner announcements (primary)\n    socketService.on('winner', winnerData => {\n      console.log('🏆 App: Winner announced:', winnerData);\n      setWaitingForWinner(false);\n      setPostWinnerLoading(true);\n\n      // Show winner announcement immediately (if not already shown)\n      if (!contractWinnerRef.current || contractWinnerRef.current.timestamp !== winnerData.timestamp) {\n        setContractWinner(winnerData);\n        setShowWinnerAnnouncement(true);\n\n        // Auto-hide after 6 seconds\n        setTimeout(() => {\n          setShowWinnerAnnouncement(false);\n          setContractWinner(null);\n          setPostWinnerLoading(false);\n        }, 6000);\n      }\n    });\n\n    // Listen for direct winner announcements (fallback/reliable delivery)\n    socketService.on('winnerAnnouncement', winnerData => {\n      console.log('🎯 App: Direct winner announcement:', winnerData);\n      setWaitingForWinner(false);\n\n      // Ensure winner is shown even if other events were missed (duplicate protection)\n      if (!showWinnerAnnouncement && (!contractWinner || contractWinner.timestamp !== winnerData.timestamp)) {\n        setContractWinner(winnerData);\n        setShowWinnerAnnouncement(true);\n\n        // Auto-hide after 6 seconds\n        setTimeout(() => {\n          setShowWinnerAnnouncement(false);\n          setContractWinner(null);\n        }, 6000);\n      }\n    });\n\n    // Listen for round resets\n    socketService.on('roundReset', () => {\n      console.log('🔄 App: Round reset');\n      setWaitingForWinner(false);\n      setPostWinnerLoading(false);\n      setShowWinnerAnnouncement(false);\n      setContractWinner(null);\n    });\n    return () => {\n      console.log('🔌 App.js: Cleaning up socket listeners...');\n      socketService.off('timer');\n      socketService.off('newRound');\n      socketService.off('gameState');\n      socketService.off('fullGameUpdate');\n      socketService.off('bettorsUpdate');\n      socketService.off('waitingForWinner');\n      socketService.off('winner');\n      socketService.off('winnerAnnouncement');\n      socketService.off('roundReset');\n      // Disconnect when app unmounts to prevent memory leaks\n      socketService.disconnect();\n    };\n  }, []);\n  const handleBetChange = e => {\n    const value = parseFloat(e.target.value) || 0;\n    setBetAmount(Math.max(0, Math.min(value, 10))); // Min 0, Max 10\n  };\n  const handleTabChange = tab => {\n    hapticFeedback('light');\n    setActiveTab(tab);\n  };\n\n  // Enhanced bet placement with real smart contract\n  const handlePlaceBet = async () => {\n    console.log(`🔥 BET BUTTON CLICKED - Amount: ${betAmount} TON`);\n    if (betAmount <= 0) {\n      showAlert('Please enter a valid bet amount');\n      return;\n    }\n    if (!isConnected) {\n      showAlert('Please connect your wallet first');\n      return;\n    }\n    if (!contractState.isActive) {\n      showAlert('Jackpot is not currently active\\n\\n🤖 Automated system will start a new round soon...');\n      return;\n    }\n    try {\n      console.log(`🚀 Starting bet placement process...`);\n      hapticFeedback('medium');\n\n      // This will call the contract with opcode 0x03\n      const result = await placeBet(betAmount);\n      if (result.success) {\n        hapticFeedback('success');\n        showAlert(`✅ Bet placed successfully!\\n${betAmount} TON in round #${currentRound}\\nTransaction: ${result.txHash.slice(0, 8)}...`);\n        console.log('🎉 Bet placement completed:', result);\n      }\n    } catch (error) {\n      hapticFeedback('error');\n      showAlert(`❌ Bet failed: ${error.message}`);\n      console.error('💥 Bet error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"logo\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"logo-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"logo-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"logo-text\",\n              children: \"SLOTPOT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n            className: \"nav-tabs\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nav-tab active\",\n              children: [/*#__PURE__*/_jsxDEV(Trophy, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Jackpot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nav-tab\",\n              children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Coinflip\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nav-tab\",\n              children: [/*#__PURE__*/_jsxDEV(Users, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Affiliates\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [user && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-greeting\",\n              children: [hasRealUserData ? '👋' : '🤖', \" \", user.displayName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), isConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wallet-info\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"wallet-address\",\n                children: address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WalletConnection, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-tab-nav\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `mobile-tab ${activeTab === 'jackpot' ? 'active' : ''}`,\n          onClick: () => handleTabChange('jackpot'),\n          children: [/*#__PURE__*/_jsxDEV(Trophy, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), \"Jackpot\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `mobile-tab ${activeTab === 'chat' ? 'active' : ''}`,\n          onClick: () => handleTabChange('chat'),\n          children: [/*#__PURE__*/_jsxDEV(MessageCircle, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), \"Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mobile-content-section ${activeTab === 'jackpot' ? 'active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main-content\",\n          children: /*#__PURE__*/_jsxDEV(GameArea, {\n            jackpotValue: jackpotValue,\n            currentRound: currentRound,\n            timeRemaining: timeRemaining,\n            isLive: isLive,\n            showWinnerAnnouncement: showWinnerAnnouncement,\n            betAmount: betAmount,\n            onBetChange: handleBetChange,\n            onPlaceBet: handlePlaceBet,\n            isConnected: isConnected,\n            isLoading: isPlacingBet,\n            userWinChance: userWinChance,\n            userBetTotal: userBetTotal,\n            contractState: {\n              ...contractState,\n              userAddress: address // Add user address for bet tracking\n            },\n            isLoadingContract: isLoadingContract,\n            adminInfo: adminInfo,\n            currentBettors: gameBettors\n            // Winner state props (moved from GameArea internal state)\n            ,\n            waitingForWinner: waitingForWinner,\n            contractWinner: contractWinner,\n            postWinnerLoading: postWinnerLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mobile-content-section ${activeTab === 'chat' ? 'active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobile-chat-section\",\n          children: /*#__PURE__*/_jsxDEV(MobileChat, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-left\",\n        children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobile-footer-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mobile-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mobile-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mobile-stat-value\",\n              children: contractState.isActive !== false ? contractState.betCount || 0 : 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mobile-stat-label\",\n              children: \"Players\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mobile-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mobile-stat-value\",\n              children: [\"#\", currentRound]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mobile-stat-label\",\n              children: \"Round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this), isConnected && contractState.isActive !== false && userBetTotal > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mobile-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mobile-stat-value\",\n              children: [userWinChance.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mobile-stat-label\",\n              children: \"Win Chance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mobile-games-btn\",\n          children: [/*#__PURE__*/_jsxDEV(Users, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), \"Games\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), isLoadingContract && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\",\n        children: \"\\uD83D\\uDD04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading contract data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 295,\n    columnNumber: 5\n  }, this);\n}\n\n// Main App component with TON Connect Provider\n_s(AppContent, \"1/4Uh980YtOQfyBlJ4SBFVdobV8=\", false, function () {\n  return [useTelegramWebApp, useJackpotContract];\n});\n_c = AppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(TonConnectUIProvider, {\n    manifestUrl: manifestUrl,\n    uiPreferences: uiOptions.uiPreferences,\n    language: uiOptions.language,\n    restoreConnection: uiOptions.restoreConnection,\n    actionsConfiguration: uiOptions.actionsConfiguration,\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TonConnectUIProvider","Chat","GameArea","MobileChat","WalletConnection","useTelegramWebApp","useJackpotContract","socketService","tonConnectConfig","uiOptions","MessageCircle","Trophy","Users","DollarSign","jsxDEV","_jsxDEV","manifestUrl","AppContent","_s","_contractState$timer2","currentRound","setCurrentRound","timeRemaining","setTimeRemaining","activeTab","setActiveTab","betAmount","setBetAmount","showWinnerAnnouncement","setShowWinnerAnnouncement","waitingForWinner","setWaitingForWinner","contractWinner","setContractWinner","postWinnerLoading","setPostWinnerLoading","gameBettors","setGameBettors","gameBettorsRef","contractWinnerRef","showWinnerAnnouncementRef","current","user","hapticFeedback","showAlert","hasRealUserData","contractState","userStats","adminInfo","isLoadingContract","isLoadingUserStats","isPlacingBet","placeBet","isConnected","address","currentBettors","jackpotValue","totalJackpot","isLive","isActive","userWinChance","parseFloat","winChancePercentage","userBetTotal","_contractState$timer","timer","undefined","countdown","setInterval","prev","newTime","Math","max","console","log","clearInterval","connect","on","timerData","roundNumber","roundData","gameState","isWaitingForWinner","bettors","Array","isArray","length","winnerAnnouncement","timestamp","setTimeout","gameData","data","isWaiting","winnerData","off","disconnect","handleBetChange","e","value","target","min","handleTabChange","tab","handlePlaceBet","result","success","txHash","slice","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","displayName","onClick","onBetChange","onPlaceBet","isLoading","userAddress","betCount","toFixed","_c","App","uiPreferences","language","restoreConnection","actionsConfiguration","_c2","$RefreshReg$"],"sources":["C:/Users/adams/Downloads/GLL/slotpot/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { TonConnectUIProvider } from '@tonconnect/ui-react';\nimport Chat from './components/Chat';\nimport GameArea from './components/GameArea';\nimport MobileChat from './components/MobileChat';\nimport WalletConnection from './components/WalletConnection';\nimport useTelegramWebApp from './hooks/useTelegramWebApp';\nimport useJackpotContract from './hooks/useJackpotContract';\nimport socketService from './services/socketService';\nimport { tonConnectConfig, uiOptions } from './config/tonconnect';\nimport { MessageCircle, Trophy, Users, DollarSign } from 'lucide-react';\nimport './App.css';\nimport './components/Header.css';\n\n// TON Connect manifest URL - use remote manifest to avoid 500 errors\nconst manifestUrl = \"https://raw.githubusercontent.com/Vodka2134156/kzsks/main/manifest.json\";\n\nfunction AppContent() {\n  // Local UI state\n  const [currentRound, setCurrentRound] = useState(53408);\n  const [timeRemaining, setTimeRemaining] = useState(30);\n  const [activeTab, setActiveTab] = useState('jackpot');\n  const [betAmount, setBetAmount] = useState(0.11);\n  const [showWinnerAnnouncement, setShowWinnerAnnouncement] = useState(false);\n  \n  // Winner state management (moved from GameArea.js)\n  const [waitingForWinner, setWaitingForWinner] = useState(false);\n  const [contractWinner, setContractWinner] = useState(null);\n  const [postWinnerLoading, setPostWinnerLoading] = useState(false);\n  \n  // Bettors state (managed centrally to avoid duplicates)\n  const [gameBettors, setGameBettors] = useState([]);\n\n  // Refs to avoid stale closures in socket handlers\n  const gameBettorsRef = useRef([]);\n  const contractWinnerRef = useRef(null);\n  const showWinnerAnnouncementRef = useRef(false);\n  \n  // Keep refs in sync with state\n  useEffect(() => { gameBettorsRef.current = gameBettors; }, [gameBettors]);\n  useEffect(() => { contractWinnerRef.current = contractWinner; }, [contractWinner]);\n  useEffect(() => { showWinnerAnnouncementRef.current = showWinnerAnnouncement; }, [showWinnerAnnouncement]);\n\n  // Telegram integration\n  const { user, hapticFeedback, showAlert, hasRealUserData } = useTelegramWebApp();\n\n  // Smart contract integration\n  const {\n    contractState,\n    userStats,\n    adminInfo,\n    isLoadingContract,\n    isLoadingUserStats,\n    isPlacingBet,\n    placeBet,\n    isConnected,\n    address,\n    currentBettors\n  } = useJackpotContract();\n\n  // Use real contract data or fallback to simulated data\n  const jackpotValue = contractState.totalJackpot;\n  const isLive = contractState.isActive;\n  const userWinChance = parseFloat(userStats.winChancePercentage) || 0;\n  const userBetTotal = userStats.betAmount || 0;\n\n  // Use automation timer or fallback to UI timer\n  useEffect(() => {\n    // Always sync with backend timer when it changes\n    if (contractState.timer?.timeRemaining !== undefined) {\n      setTimeRemaining(contractState.timer.timeRemaining);\n    } else {\n      setTimeRemaining(30);\n    }\n  }, [contractState.timer?.timeRemaining]);\n\n  // Local countdown timer (runs between backend updates)\n  useEffect(() => {\n    if (!isLive || timeRemaining <= 0) return;\n\n    const countdown = setInterval(() => {\n      setTimeRemaining(prev => {\n        const newTime = Math.max(0, prev - 1);\n        \n        // If we reach 0, don't reset - let backend handle the transition\n        if (newTime === 0) {\n          console.log('⏰ Local timer reached 0, waiting for backend...');\n        }\n        \n        return newTime;\n      });\n    }, 1000);\n\n    return () => clearInterval(countdown);\n  }, [isLive, timeRemaining > 0]); // Restart countdown when timer changes or game goes live\n\n  // Socket integration for immediate synchronization - SINGLE CONNECTION POINT\n  useEffect(() => {\n    console.log('🔌 App.js: Establishing single socket connection for entire app...');\n    socketService.connect();\n\n    // Listen for timer updates from socket\n    socketService.on('timer', (timerData) => {\n      console.log('⏰ App: Socket timer update:', timerData);\n      setTimeRemaining(timerData.timeRemaining);\n      if (timerData.roundNumber) {\n        setCurrentRound(timerData.roundNumber);\n      }\n      // Note: Contract state timer will be updated via fullGameUpdate/contractStateUpdate events\n    });\n\n    // Listen for new round events\n    socketService.on('newRound', (roundData) => {\n      console.log('🎰 App: New round detected via socket:', roundData);\n      setTimeRemaining(roundData.timeRemaining);\n      setCurrentRound(roundData.roundNumber);\n    });\n\n    // Listen for game state updates\n    socketService.on('gameState', (gameState) => {\n      console.log('🎮 App: Game state update:', gameState);\n      if (gameState.timeRemaining !== undefined) {\n        setTimeRemaining(gameState.timeRemaining);\n      }\n      if (gameState.currentRound) {\n        // Extract roundNumber if currentRound is an object, otherwise use the value directly\n        const roundNumber = typeof gameState.currentRound === 'object' && gameState.currentRound.roundNumber \n          ? gameState.currentRound.roundNumber \n          : gameState.currentRound;\n        setCurrentRound(roundNumber);\n      }\n      \n      // Handle winner-related states\n      if (gameState.isWaitingForWinner !== undefined) {\n        setWaitingForWinner(gameState.isWaitingForWinner);\n      }\n      \n      // Update bettors data centrally (avoids duplicate processing)\n      if (gameState.bettors && Array.isArray(gameState.bettors)) {\n        // Only log if bettors count changed to reduce spam\n        if (gameState.bettors.length !== gameBettorsRef.current.length) {\n          console.log('🎮 App: Updating bettors from gameState:', gameState.bettors.length, 'bettors');\n        }\n        setGameBettors(gameState.bettors);\n      }\n      \n      // Check for winner announcement in game state (prevent duplicates)\n      if (gameState.winnerAnnouncement && !showWinnerAnnouncementRef.current && \n          (!contractWinnerRef.current || contractWinnerRef.current.timestamp !== gameState.winnerAnnouncement.timestamp)) {\n        console.log('🎉 Winner announcement found in game state:', gameState.winnerAnnouncement);\n        setContractWinner(gameState.winnerAnnouncement);\n        setShowWinnerAnnouncement(true);\n        setWaitingForWinner(false);\n        \n        // Auto-hide after 6 seconds\n        setTimeout(() => {\n          setShowWinnerAnnouncement(false);\n          setContractWinner(null);\n        }, 6000);\n      }\n    });\n\n    // Listen for comprehensive game data updates\n    socketService.on('fullGameUpdate', (gameData) => {\n      console.log('🎮 App: Full game update:', gameData);\n      // These updates will trigger re-renders via useJackpotContract hook\n      // The hook will detect the changes and update accordingly\n    });\n\n    // Listen for bettors updates\n    socketService.on('bettorsUpdate', (data) => {\n      console.log('💰 App: Bettors update:', data);\n      // Force a refresh of contract state to sync with socket data\n      // This ensures jackpot value and user stats stay in sync\n    });\n\n    // Listen for waiting for winner events\n    socketService.on('waitingForWinner', (isWaiting) => {\n      console.log('🎯 App: Waiting for winner state changed:', isWaiting);\n      setWaitingForWinner(isWaiting);\n    });\n\n    // Listen for winner announcements (primary)\n    socketService.on('winner', (winnerData) => {\n      console.log('🏆 App: Winner announced:', winnerData);\n      setWaitingForWinner(false);\n      setPostWinnerLoading(true);\n      \n      // Show winner announcement immediately (if not already shown)\n      if (!contractWinnerRef.current || contractWinnerRef.current.timestamp !== winnerData.timestamp) {\n        setContractWinner(winnerData);\n        setShowWinnerAnnouncement(true);\n        \n        // Auto-hide after 6 seconds\n        setTimeout(() => {\n          setShowWinnerAnnouncement(false);\n          setContractWinner(null);\n          setPostWinnerLoading(false);\n        }, 6000);\n      }\n    });\n\n    // Listen for direct winner announcements (fallback/reliable delivery)\n    socketService.on('winnerAnnouncement', (winnerData) => {\n      console.log('🎯 App: Direct winner announcement:', winnerData);\n      setWaitingForWinner(false);\n      \n      // Ensure winner is shown even if other events were missed (duplicate protection)\n      if (!showWinnerAnnouncement && (!contractWinner || contractWinner.timestamp !== winnerData.timestamp)) {\n        setContractWinner(winnerData);\n        setShowWinnerAnnouncement(true);\n        \n        // Auto-hide after 6 seconds\n        setTimeout(() => {\n          setShowWinnerAnnouncement(false);\n          setContractWinner(null);\n        }, 6000);\n      }\n    });\n\n    // Listen for round resets\n    socketService.on('roundReset', () => {\n      console.log('🔄 App: Round reset');\n      setWaitingForWinner(false);\n      setPostWinnerLoading(false);\n      setShowWinnerAnnouncement(false);\n      setContractWinner(null);\n    });\n\n    return () => {\n      console.log('🔌 App.js: Cleaning up socket listeners...');\n      socketService.off('timer');\n      socketService.off('newRound');\n      socketService.off('gameState');\n      socketService.off('fullGameUpdate');\n      socketService.off('bettorsUpdate');\n      socketService.off('waitingForWinner');\n      socketService.off('winner');\n      socketService.off('winnerAnnouncement');\n      socketService.off('roundReset');\n      // Disconnect when app unmounts to prevent memory leaks\n      socketService.disconnect();\n    };\n  }, []);\n\n  const handleBetChange = (e) => {\n    const value = parseFloat(e.target.value) || 0;\n    setBetAmount(Math.max(0, Math.min(value, 10))); // Min 0, Max 10\n  };\n\n  const handleTabChange = (tab) => {\n    hapticFeedback('light');\n    setActiveTab(tab);\n  };\n\n  // Enhanced bet placement with real smart contract\n  const handlePlaceBet = async () => {\n    console.log(`🔥 BET BUTTON CLICKED - Amount: ${betAmount} TON`);\n    \n    if (betAmount <= 0) {\n      showAlert('Please enter a valid bet amount');\n      return;\n    }\n\n    if (!isConnected) {\n      showAlert('Please connect your wallet first');\n      return;\n    }\n\n    if (!contractState.isActive) {\n      showAlert('Jackpot is not currently active\\n\\n🤖 Automated system will start a new round soon...');\n      return;\n    }\n\n    try {\n      console.log(`🚀 Starting bet placement process...`);\n      hapticFeedback('medium');\n      \n      // This will call the contract with opcode 0x03\n      const result = await placeBet(betAmount);\n      \n      if (result.success) {\n        hapticFeedback('success');\n        showAlert(`✅ Bet placed successfully!\\n${betAmount} TON in round #${currentRound}\\nTransaction: ${result.txHash.slice(0, 8)}...`);\n        console.log('🎉 Bet placement completed:', result);\n      }\n    } catch (error) {\n      hapticFeedback('error');\n      showAlert(`❌ Bet failed: ${error.message}`);\n      console.error('💥 Bet error:', error);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      {/* Header */}\n      <header className=\"header\">\n        <div className=\"header-container\">\n          <div className=\"header-left\">\n            <div className=\"logo\">\n              <div className=\"logo-icon\">\n                <div className=\"logo-circle\"></div>\n              </div>\n              <span className=\"logo-text\">SLOTPOT</span>\n            </div>\n            \n            <nav className=\"nav-tabs\">\n              <div className=\"nav-tab active\">\n                <Trophy size={20} />\n                <span>Jackpot</span>\n              </div>\n              <div className=\"nav-tab\">\n                <DollarSign size={20} />\n                <span>Coinflip</span>\n              </div>\n              <div className=\"nav-tab\">\n                <Users size={20} />\n                <span>Affiliates</span>\n              </div>\n            </nav>\n          </div>\n          \n          <div className=\"header-right\">\n            <div className=\"user-info\">\n              {user && (\n                <span className=\"user-greeting\">\n                  {hasRealUserData ? '👋' : '🤖'} {user.displayName}\n                </span>\n              )}\n              {isConnected && (\n                <div className=\"wallet-info\">\n                  <span className=\"wallet-address\">{address}</span>\n                </div>\n              )}\n            </div>\n            <WalletConnection />\n          </div>\n        </div>\n      </header>\n      \n      <div className=\"app-container\">\n        {/* Mobile Tab Navigation */}\n        <div className=\"mobile-tab-nav\">\n          <button \n            className={`mobile-tab ${activeTab === 'jackpot' ? 'active' : ''}`}\n            onClick={() => handleTabChange('jackpot')}\n          >\n            <Trophy size={16} />\n            Jackpot\n          </button>\n          <button \n            className={`mobile-tab ${activeTab === 'chat' ? 'active' : ''}`}\n            onClick={() => handleTabChange('chat')}\n          >\n            <MessageCircle size={16} />\n            Chat\n          </button>\n        </div>\n\n        {/* Content Sections */}\n        <div className={`mobile-content-section ${activeTab === 'jackpot' ? 'active' : ''}`}>\n          <div className=\"main-content\">\n            <GameArea \n              jackpotValue={jackpotValue}\n              currentRound={currentRound}\n              timeRemaining={timeRemaining}\n              isLive={isLive}\n              showWinnerAnnouncement={showWinnerAnnouncement}\n              betAmount={betAmount}\n              onBetChange={handleBetChange}\n              onPlaceBet={handlePlaceBet}\n              isConnected={isConnected}\n              isLoading={isPlacingBet}\n              userWinChance={userWinChance}\n              userBetTotal={userBetTotal}\n              contractState={{\n                ...contractState,\n                userAddress: address // Add user address for bet tracking\n              }}\n              isLoadingContract={isLoadingContract}\n              adminInfo={adminInfo}\n              currentBettors={gameBettors}\n              // Winner state props (moved from GameArea internal state)\n              waitingForWinner={waitingForWinner}\n              contractWinner={contractWinner}\n              postWinnerLoading={postWinnerLoading}\n            />\n          </div>\n        </div>\n\n        <div className={`mobile-content-section ${activeTab === 'chat' ? 'active' : ''}`}>\n          <div className=\"mobile-chat-section\">\n            <MobileChat />\n          </div>\n        </div>\n\n        {/* Hidden desktop sidebars */}\n        <div className=\"sidebar-left\">\n          <Chat />\n        </div>\n      </div>\n\n      {/* Mobile Footer */}\n      <div className=\"mobile-footer\">\n        <div className=\"mobile-footer-content\">\n          <div className=\"mobile-stats\">\n            <div className=\"mobile-stat\">\n              <div className=\"mobile-stat-value\">{contractState.isActive !== false ? (contractState.betCount || 0) : 0}</div>\n              <div className=\"mobile-stat-label\">Players</div>\n            </div>\n            <div className=\"mobile-stat\">\n              <div className=\"mobile-stat-value\">#{currentRound}</div>\n              <div className=\"mobile-stat-label\">Round</div>\n            </div>\n            {isConnected && contractState.isActive !== false && userBetTotal > 0 && (\n              <div className=\"mobile-stat\">\n                <div className=\"mobile-stat-value\">{userWinChance.toFixed(1)}%</div>\n                <div className=\"mobile-stat-label\">Win Chance</div>\n              </div>\n            )}\n          </div>\n          <button className=\"mobile-games-btn\">\n            <Users size={14} />\n            Games\n          </button>\n        </div>\n      </div>\n\n      {/* Contract Status Indicator */}\n      {isLoadingContract && (\n        <div className=\"loading-overlay\">\n          <div className=\"loading-spinner\">🔄</div>\n          <span>Loading contract data...</span>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Main App component with TON Connect Provider\nfunction App() {\n  return (\n    <TonConnectUIProvider \n      manifestUrl={manifestUrl}\n      uiPreferences={uiOptions.uiPreferences}\n      language={uiOptions.language}\n      restoreConnection={uiOptions.restoreConnection}\n      actionsConfiguration={uiOptions.actionsConfiguration}\n    >\n      <AppContent />\n    </TonConnectUIProvider>\n  );\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}