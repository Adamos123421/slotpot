{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JettonMaster = void 0;\nconst core_1 = require(\"@ton/core\");\nclass JettonMaster {\n  static create(address) {\n    return new JettonMaster(address);\n  }\n  constructor(address) {\n    this.address = address;\n  }\n  async getWalletAddress(provider, owner) {\n    let res = await provider.get('get_wallet_address', [{\n      type: 'slice',\n      cell: (0, core_1.beginCell)().storeAddress(owner).endCell()\n    }]);\n    return res.stack.readAddress();\n  }\n  async getJettonData(provider) {\n    let res = await provider.get('get_jetton_data', []);\n    let totalSupply = res.stack.readBigNumber();\n    let mintable = res.stack.readBoolean();\n    let adminAddress = res.stack.readAddress();\n    let content = res.stack.readCell();\n    let walletCode = res.stack.readCell();\n    return {\n      totalSupply,\n      mintable,\n      adminAddress,\n      content,\n      walletCode\n    };\n  }\n}\nexports.JettonMaster = JettonMaster;","map":{"version":3,"names":["Object","defineProperty","exports","value","JettonMaster","core_1","require","create","address","constructor","getWalletAddress","provider","owner","res","get","type","cell","beginCell","storeAddress","endCell","stack","readAddress","getJettonData","totalSupply","readBigNumber","mintable","readBoolean","adminAddress","content","readCell","walletCode"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/node_modules/@ton/ton/dist/jetton/JettonMaster.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) Whales Corp.\n * All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JettonMaster = void 0;\nconst core_1 = require(\"@ton/core\");\nclass JettonMaster {\n    static create(address) {\n        return new JettonMaster(address);\n    }\n    constructor(address) {\n        this.address = address;\n    }\n    async getWalletAddress(provider, owner) {\n        let res = await provider.get('get_wallet_address', [{ type: 'slice', cell: (0, core_1.beginCell)().storeAddress(owner).endCell() }]);\n        return res.stack.readAddress();\n    }\n    async getJettonData(provider) {\n        let res = await provider.get('get_jetton_data', []);\n        let totalSupply = res.stack.readBigNumber();\n        let mintable = res.stack.readBoolean();\n        let adminAddress = res.stack.readAddress();\n        let content = res.stack.readCell();\n        let walletCode = res.stack.readCell();\n        return {\n            totalSupply,\n            mintable,\n            adminAddress,\n            content,\n            walletCode\n        };\n    }\n}\nexports.JettonMaster = JettonMaster;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,MAAMC,MAAM,GAAGC,OAAO,CAAC,WAAW,CAAC;AACnC,MAAMF,YAAY,CAAC;EACf,OAAOG,MAAMA,CAACC,OAAO,EAAE;IACnB,OAAO,IAAIJ,YAAY,CAACI,OAAO,CAAC;EACpC;EACAC,WAAWA,CAACD,OAAO,EAAE;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B;EACA,MAAME,gBAAgBA,CAACC,QAAQ,EAAEC,KAAK,EAAE;IACpC,IAAIC,GAAG,GAAG,MAAMF,QAAQ,CAACG,GAAG,CAAC,oBAAoB,EAAE,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEC,IAAI,EAAE,CAAC,CAAC,EAAEX,MAAM,CAACY,SAAS,EAAE,CAAC,CAACC,YAAY,CAACN,KAAK,CAAC,CAACO,OAAO,CAAC;IAAE,CAAC,CAAC,CAAC;IACpI,OAAON,GAAG,CAACO,KAAK,CAACC,WAAW,CAAC,CAAC;EAClC;EACA,MAAMC,aAAaA,CAACX,QAAQ,EAAE;IAC1B,IAAIE,GAAG,GAAG,MAAMF,QAAQ,CAACG,GAAG,CAAC,iBAAiB,EAAE,EAAE,CAAC;IACnD,IAAIS,WAAW,GAAGV,GAAG,CAACO,KAAK,CAACI,aAAa,CAAC,CAAC;IAC3C,IAAIC,QAAQ,GAAGZ,GAAG,CAACO,KAAK,CAACM,WAAW,CAAC,CAAC;IACtC,IAAIC,YAAY,GAAGd,GAAG,CAACO,KAAK,CAACC,WAAW,CAAC,CAAC;IAC1C,IAAIO,OAAO,GAAGf,GAAG,CAACO,KAAK,CAACS,QAAQ,CAAC,CAAC;IAClC,IAAIC,UAAU,GAAGjB,GAAG,CAACO,KAAK,CAACS,QAAQ,CAAC,CAAC;IACrC,OAAO;MACHN,WAAW;MACXE,QAAQ;MACRE,YAAY;MACZC,OAAO;MACPE;IACJ,CAAC;EACL;AACJ;AACA5B,OAAO,CAACE,YAAY,GAAGA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}