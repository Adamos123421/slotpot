{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adams\\\\OneDrive\\\\Desktop\\\\Work\\\\slotpot\\\\src\\\\components\\\\SoundControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Volume2, VolumeX } from 'lucide-react';\nimport soundService from '../services/soundService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SoundControl = () => {\n  _s();\n  const [isEnabled, setIsEnabled] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    // Check if sound service is ready\n    const checkSoundService = () => {\n      setIsLoaded(soundService.isReady());\n      setIsEnabled(soundService.isEnabled);\n    };\n\n    // Initial check\n    checkSoundService();\n\n    // Periodically check if sound service becomes ready\n    const interval = setInterval(checkSoundService, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const toggleSound = () => {\n    const newState = soundService.toggle();\n    setIsEnabled(newState);\n\n    // Play a test sound if enabling\n    if (newState && isLoaded) {\n      soundService.play('bet', {\n        volume: 0.3\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"header-icon sound-control\",\n    onClick: toggleSound,\n    title: isEnabled ? 'Mute sounds' : 'Enable sounds',\n    disabled: !isLoaded,\n    children: isEnabled ? /*#__PURE__*/_jsxDEV(Volume2, {\n      size: 18\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(VolumeX, {\n      size: 18\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(SoundControl, \"L9rclB8nOOp+S6uOdklGVRH6PGg=\");\n_c = SoundControl;\nexport default SoundControl;\nvar _c;\n$RefreshReg$(_c, \"SoundControl\");","map":{"version":3,"names":["React","useState","useEffect","Volume2","VolumeX","soundService","jsxDEV","_jsxDEV","SoundControl","_s","isEnabled","setIsEnabled","isLoaded","setIsLoaded","checkSoundService","isReady","interval","setInterval","clearInterval","toggleSound","newState","toggle","play","volume","className","onClick","title","disabled","children","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/src/components/SoundControl.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Volume2, VolumeX } from 'lucide-react';\r\nimport soundService from '../services/soundService';\r\n\r\nconst SoundControl = () => {\r\n  const [isEnabled, setIsEnabled] = useState(true);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if sound service is ready\r\n    const checkSoundService = () => {\r\n      setIsLoaded(soundService.isReady());\r\n      setIsEnabled(soundService.isEnabled);\r\n    };\r\n\r\n    // Initial check\r\n    checkSoundService();\r\n\r\n    // Periodically check if sound service becomes ready\r\n    const interval = setInterval(checkSoundService, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const toggleSound = () => {\r\n    const newState = soundService.toggle();\r\n    setIsEnabled(newState);\r\n    \r\n    // Play a test sound if enabling\r\n    if (newState && isLoaded) {\r\n      soundService.play('bet', { volume: 0.3 });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button \r\n      className=\"header-icon sound-control\" \r\n      onClick={toggleSound}\r\n      title={isEnabled ? 'Mute sounds' : 'Enable sounds'}\r\n      disabled={!isLoaded}\r\n    >\r\n      {isEnabled ? (\r\n        <Volume2 size={18} />\r\n      ) : (\r\n        <VolumeX size={18} />\r\n      )}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default SoundControl; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,OAAO,EAAEC,OAAO,QAAQ,cAAc;AAC/C,OAAOC,YAAY,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,iBAAiB,GAAGA,CAAA,KAAM;MAC9BD,WAAW,CAACR,YAAY,CAACU,OAAO,CAAC,CAAC,CAAC;MACnCJ,YAAY,CAACN,YAAY,CAACK,SAAS,CAAC;IACtC,CAAC;;IAED;IACAI,iBAAiB,CAAC,CAAC;;IAEnB;IACA,MAAME,QAAQ,GAAGC,WAAW,CAACH,iBAAiB,EAAE,IAAI,CAAC;IAErD,OAAO,MAAMI,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,QAAQ,GAAGf,YAAY,CAACgB,MAAM,CAAC,CAAC;IACtCV,YAAY,CAACS,QAAQ,CAAC;;IAEtB;IACA,IAAIA,QAAQ,IAAIR,QAAQ,EAAE;MACxBP,YAAY,CAACiB,IAAI,CAAC,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAI,CAAC,CAAC;IAC3C;EACF,CAAC;EAED,oBACEhB,OAAA;IACEiB,SAAS,EAAC,2BAA2B;IACrCC,OAAO,EAAEN,WAAY;IACrBO,KAAK,EAAEhB,SAAS,GAAG,aAAa,GAAG,eAAgB;IACnDiB,QAAQ,EAAE,CAACf,QAAS;IAAAgB,QAAA,EAEnBlB,SAAS,gBACRH,OAAA,CAACJ,OAAO;MAAC0B,IAAI,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAErB1B,OAAA,CAACH,OAAO;MAACyB,IAAI,EAAE;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EACrB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEb,CAAC;AAACxB,EAAA,CA5CID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA8ClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}