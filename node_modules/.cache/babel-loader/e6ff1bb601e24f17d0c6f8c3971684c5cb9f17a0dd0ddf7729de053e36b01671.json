{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adams\\\\OneDrive\\\\Desktop\\\\Work\\\\slotpot\\\\src\\\\components\\\\OnlineIndicator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Users } from 'lucide-react';\nimport socketService from '../services/socketService';\nimport './OnlineIndicator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OnlineIndicator = () => {\n  _s();\n  const [onlineUsers, setOnlineUsers] = useState(0);\n  const [isConnected, setIsConnected] = useState(false);\n\n  // Listen to socket connection and online users\n  useEffect(() => {\n    const handleConnect = () => {\n      setIsConnected(true);\n    };\n    const handleDisconnect = () => {\n      setIsConnected(false);\n      setOnlineUsers(0);\n    };\n    const handleUserJoined = data => {\n      setOnlineUsers(data.totalUsers);\n    };\n    const handleUserLeft = data => {\n      setOnlineUsers(data.totalUsers);\n    };\n\n    // Subscribe to socket events\n    socketService.on('connect', handleConnect);\n    socketService.on('disconnect', handleDisconnect);\n    socketService.on('user:joined', handleUserJoined);\n    socketService.on('user:left', handleUserLeft);\n\n    // Get initial connection status\n    setIsConnected(socketService.isConnected);\n    return () => {\n      socketService.off('connect', handleConnect);\n      socketService.off('disconnect', handleDisconnect);\n      socketService.off('user:joined', handleUserJoined);\n      socketService.off('user:left', handleUserLeft);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"online-indicator-top\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"online-indicator-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `online-dot ${isConnected ? 'connected' : 'disconnected'}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"online-count\",\n        children: onlineUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        size: 14,\n        className: \"online-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"online-text\",\n        children: \"online\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(OnlineIndicator, \"A6cOOGSWctanQqrcUPfW67TDy5o=\");\n_c = OnlineIndicator;\nexport default OnlineIndicator;\nvar _c;\n$RefreshReg$(_c, \"OnlineIndicator\");","map":{"version":3,"names":["React","useState","useEffect","Users","socketService","jsxDEV","_jsxDEV","OnlineIndicator","_s","onlineUsers","setOnlineUsers","isConnected","setIsConnected","handleConnect","handleDisconnect","handleUserJoined","data","totalUsers","handleUserLeft","on","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","_c","$RefreshReg$"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/src/components/OnlineIndicator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Users } from 'lucide-react';\r\nimport socketService from '../services/socketService';\r\nimport './OnlineIndicator.css';\r\n\r\nconst OnlineIndicator = () => {\r\n  const [onlineUsers, setOnlineUsers] = useState(0);\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  \r\n  // Listen to socket connection and online users\r\n  useEffect(() => {\r\n    const handleConnect = () => {\r\n      setIsConnected(true);\r\n    };\r\n    \r\n    const handleDisconnect = () => {\r\n      setIsConnected(false);\r\n      setOnlineUsers(0);\r\n    };\r\n    \r\n    const handleUserJoined = (data) => {\r\n      setOnlineUsers(data.totalUsers);\r\n    };\r\n    \r\n    const handleUserLeft = (data) => {\r\n      setOnlineUsers(data.totalUsers);\r\n    };\r\n    \r\n    // Subscribe to socket events\r\n    socketService.on('connect', handleConnect);\r\n    socketService.on('disconnect', handleDisconnect);\r\n    socketService.on('user:joined', handleUserJoined);\r\n    socketService.on('user:left', handleUserLeft);\r\n    \r\n    // Get initial connection status\r\n    setIsConnected(socketService.isConnected);\r\n    \r\n    return () => {\r\n      socketService.off('connect', handleConnect);\r\n      socketService.off('disconnect', handleDisconnect);\r\n      socketService.off('user:joined', handleUserJoined);\r\n      socketService.off('user:left', handleUserLeft);\r\n    };\r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"online-indicator-top\">\r\n      <div className=\"online-indicator-content\">\r\n        <div className={`online-dot ${isConnected ? 'connected' : 'disconnected'}`}></div>\r\n        <span className=\"online-count\">{onlineUsers}</span>\r\n        <Users size={14} className=\"online-icon\" />\r\n        <span className=\"online-text\">online</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OnlineIndicator;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,cAAc;AACpC,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAGA,CAAA,KAAM;MAC1BD,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC;IAED,MAAME,gBAAgB,GAAGA,CAAA,KAAM;MAC7BF,cAAc,CAAC,KAAK,CAAC;MACrBF,cAAc,CAAC,CAAC,CAAC;IACnB,CAAC;IAED,MAAMK,gBAAgB,GAAIC,IAAI,IAAK;MACjCN,cAAc,CAACM,IAAI,CAACC,UAAU,CAAC;IACjC,CAAC;IAED,MAAMC,cAAc,GAAIF,IAAI,IAAK;MAC/BN,cAAc,CAACM,IAAI,CAACC,UAAU,CAAC;IACjC,CAAC;;IAED;IACAb,aAAa,CAACe,EAAE,CAAC,SAAS,EAAEN,aAAa,CAAC;IAC1CT,aAAa,CAACe,EAAE,CAAC,YAAY,EAAEL,gBAAgB,CAAC;IAChDV,aAAa,CAACe,EAAE,CAAC,aAAa,EAAEJ,gBAAgB,CAAC;IACjDX,aAAa,CAACe,EAAE,CAAC,WAAW,EAAED,cAAc,CAAC;;IAE7C;IACAN,cAAc,CAACR,aAAa,CAACO,WAAW,CAAC;IAEzC,OAAO,MAAM;MACXP,aAAa,CAACgB,GAAG,CAAC,SAAS,EAAEP,aAAa,CAAC;MAC3CT,aAAa,CAACgB,GAAG,CAAC,YAAY,EAAEN,gBAAgB,CAAC;MACjDV,aAAa,CAACgB,GAAG,CAAC,aAAa,EAAEL,gBAAgB,CAAC;MAClDX,aAAa,CAACgB,GAAG,CAAC,WAAW,EAAEF,cAAc,CAAC;IAChD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEZ,OAAA;IAAKe,SAAS,EAAC,sBAAsB;IAAAC,QAAA,eACnChB,OAAA;MAAKe,SAAS,EAAC,0BAA0B;MAAAC,QAAA,gBACvChB,OAAA;QAAKe,SAAS,EAAE,cAAcV,WAAW,GAAG,WAAW,GAAG,cAAc;MAAG;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClFpB,OAAA;QAAMe,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEb;MAAW;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnDpB,OAAA,CAACH,KAAK;QAACwB,IAAI,EAAE,EAAG;QAACN,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3CpB,OAAA;QAAMe,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CAlDID,eAAe;AAAAqB,EAAA,GAAfrB,eAAe;AAoDrB,eAAeA,eAAe;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}