{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adams\\\\OneDrive\\\\Desktop\\\\Work\\\\slotpot\\\\src\\\\components\\\\SoundControl.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Volume2, VolumeX } from 'lucide-react';\nimport soundService from '../services/soundService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SoundControl = () => {\n  _s();\n  const [isEnabled, setIsEnabled] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isUnlocked, setIsUnlocked] = useState(false);\n  const [audioContextState, setAudioContextState] = useState('unavailable');\n  useEffect(() => {\n    // Check if sound service is ready\n    const checkSoundService = () => {\n      setIsLoaded(soundService.isReady());\n      setIsEnabled(soundService.isEnabled);\n      setIsUnlocked(soundService.isUnlocked());\n      setAudioContextState(soundService.getAudioContextState());\n    };\n\n    // Initial check\n    checkSoundService();\n\n    // Periodically check if sound service becomes ready\n    const interval = setInterval(checkSoundService, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const toggleSound = async () => {\n    //console.log('ðŸ”Š Sound control clicked');\n\n    // Force audio unlock attempt\n    try {\n      await soundService.forceUnlock();\n    } catch (error) {\n      console.warn('Failed to force unlock audio:', error);\n    }\n    const newState = soundService.toggle();\n    setIsEnabled(newState);\n\n    // Play a test sound if enabling\n    if (newState && isLoaded) {\n      //console.log('ðŸŽµ Playing test sound');\n      soundService.play('bet', {\n        volume: 0.3\n      });\n    }\n\n    // Update states\n    setIsUnlocked(soundService.isUnlocked());\n    setAudioContextState(soundService.getAudioContextState());\n  };\n\n  // Determine icon and color based on state\n  const getIcon = () => {\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(VolumeX, {\n        size: 18\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this);\n    }\n    if (!isEnabled) {\n      return /*#__PURE__*/_jsxDEV(VolumeX, {\n        size: 18\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Volume2, {\n      size: 18\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  };\n  const getTitle = () => {\n    if (!isLoaded) {\n      return 'Loading sounds...';\n    }\n    if (!isUnlocked && audioContextState === 'suspended') {\n      return 'Click to enable sounds (Telegram audio policy)';\n    }\n    if (!isEnabled) {\n      return 'Enable sounds';\n    }\n    return 'Mute sounds';\n  };\n  const getButtonStyle = () => {\n    let style = {};\n    if (!isLoaded) {\n      style.opacity = 0.5;\n    } else if (!isUnlocked && audioContextState === 'suspended') {\n      // Visual indicator that audio needs to be unlocked\n      style.borderColor = '#f59e0b';\n      style.color = '#f59e0b';\n    } else if (!isEnabled) {\n      style.opacity = 0.7;\n    }\n    return style;\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"header-icon sound-control\",\n    onClick: toggleSound,\n    title: getTitle(),\n    disabled: !isLoaded,\n    style: getButtonStyle(),\n    children: [getIcon(), process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '100%',\n        left: 0,\n        fontSize: '8px',\n        background: 'rgba(0,0,0,0.8)',\n        color: 'white',\n        padding: '2px 4px',\n        borderRadius: '2px',\n        whiteSpace: 'nowrap',\n        zIndex: 1000\n      },\n      children: `${isLoaded ? 'L' : 'x'}${isEnabled ? 'E' : 'x'}${isUnlocked ? 'U' : 'x'} ${audioContextState}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(SoundControl, \"ASq+VA6oEeHmcEIsqnsBWzqu7bs=\");\n_c = SoundControl;\nexport default SoundControl;\nvar _c;\n$RefreshReg$(_c, \"SoundControl\");","map":{"version":3,"names":["React","useState","useEffect","Volume2","VolumeX","soundService","jsxDEV","_jsxDEV","SoundControl","_s","isEnabled","setIsEnabled","isLoaded","setIsLoaded","isUnlocked","setIsUnlocked","audioContextState","setAudioContextState","checkSoundService","isReady","getAudioContextState","interval","setInterval","clearInterval","toggleSound","forceUnlock","error","console","warn","newState","toggle","play","volume","getIcon","size","fileName","_jsxFileName","lineNumber","columnNumber","getTitle","getButtonStyle","style","opacity","borderColor","color","className","onClick","title","disabled","children","process","env","NODE_ENV","position","top","left","fontSize","background","padding","borderRadius","whiteSpace","zIndex","_c","$RefreshReg$"],"sources":["C:/Users/adams/OneDrive/Desktop/Work/slotpot/src/components/SoundControl.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Volume2, VolumeX } from 'lucide-react';\nimport soundService from '../services/soundService';\n\nconst SoundControl = () => {\n  const [isEnabled, setIsEnabled] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isUnlocked, setIsUnlocked] = useState(false);\n  const [audioContextState, setAudioContextState] = useState('unavailable');\n\n  useEffect(() => {\n    // Check if sound service is ready\n    const checkSoundService = () => {\n      setIsLoaded(soundService.isReady());\n      setIsEnabled(soundService.isEnabled);\n      setIsUnlocked(soundService.isUnlocked());\n      setAudioContextState(soundService.getAudioContextState());\n    };\n\n    // Initial check\n    checkSoundService();\n\n    // Periodically check if sound service becomes ready\n    const interval = setInterval(checkSoundService, 1000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const toggleSound = async () => {\n    //console.log('ðŸ”Š Sound control clicked');\n    \n    // Force audio unlock attempt\n    try {\n      await soundService.forceUnlock();\n    } catch (error) {\n      console.warn('Failed to force unlock audio:', error);\n    }\n    \n    const newState = soundService.toggle();\n    setIsEnabled(newState);\n    \n    // Play a test sound if enabling\n    if (newState && isLoaded) {\n      //console.log('ðŸŽµ Playing test sound');\n      soundService.play('bet', { volume: 0.3 });\n    }\n    \n    // Update states\n    setIsUnlocked(soundService.isUnlocked());\n    setAudioContextState(soundService.getAudioContextState());\n  };\n\n  // Determine icon and color based on state\n  const getIcon = () => {\n    if (!isLoaded) {\n      return <VolumeX size={18} />;\n    }\n    \n    if (!isEnabled) {\n      return <VolumeX size={18} />;\n    }\n    \n    return <Volume2 size={18} />;\n  };\n\n  const getTitle = () => {\n    if (!isLoaded) {\n      return 'Loading sounds...';\n    }\n    \n    if (!isUnlocked && audioContextState === 'suspended') {\n      return 'Click to enable sounds (Telegram audio policy)';\n    }\n    \n    if (!isEnabled) {\n      return 'Enable sounds';\n    }\n    \n    return 'Mute sounds';\n  };\n\n  const getButtonStyle = () => {\n    let style = {};\n    \n    if (!isLoaded) {\n      style.opacity = 0.5;\n    } else if (!isUnlocked && audioContextState === 'suspended') {\n      // Visual indicator that audio needs to be unlocked\n      style.borderColor = '#f59e0b';\n      style.color = '#f59e0b';\n    } else if (!isEnabled) {\n      style.opacity = 0.7;\n    }\n    \n    return style;\n  };\n\n  return (\n    <button \n      className=\"header-icon sound-control\" \n      onClick={toggleSound}\n      title={getTitle()}\n      disabled={!isLoaded}\n      style={getButtonStyle()}\n    >\n      {getIcon()}\n      {/* Debug info in development */}\n      {process.env.NODE_ENV === 'development' && (\n        <div style={{\n          position: 'absolute',\n          top: '100%',\n          left: 0,\n          fontSize: '8px',\n          background: 'rgba(0,0,0,0.8)',\n          color: 'white',\n          padding: '2px 4px',\n          borderRadius: '2px',\n          whiteSpace: 'nowrap',\n          zIndex: 1000\n        }}>\n          {`${isLoaded ? 'L' : 'x'}${isEnabled ? 'E' : 'x'}${isUnlocked ? 'U' : 'x'} ${audioContextState}`}\n        </div>\n      )}\n    </button>\n  );\n};\n\nexport default SoundControl; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}